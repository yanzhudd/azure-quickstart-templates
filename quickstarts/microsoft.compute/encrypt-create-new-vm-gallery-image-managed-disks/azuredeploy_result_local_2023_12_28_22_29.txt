arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin user name for the virtual machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin user password for virtual machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default lovation"}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of VM"}}, "virtualNetworkName": {"type": "string", "metadata": {"description": "Name of VNET to which the VM NIC belongs to"}, "defaultValue": "zytest"}, "subnetName": {"type": "string", "metadata": {"description": "Name of Subnet to which the VM NIC belongs to"}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "enabledForDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."}}, "enabledForDiskEncryption": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."}}, "enabledForTemplateDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."}}, "keysPermissions": {"type": "array", "defaultValue": ["list", "get", "decrypt", "encrypt", "unwrapkey", "wrapkey"], "metadata": {"description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."}}, "secretsPermissions": {"type": "array", "defaultValue": ["list", "get"], "metadata": {"description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."}}, "skuName": {"type": "string", "defaultValue": "Standard", "allowedValues": ["Standard", "Premium"], "metadata": {"description": "Specifies whether the key vault is a standard vault or a premium vault."}}}, "variables": {"imagePublisher": "MicrosoftWindowsServer", "imageOffer": "WindowsServer", "osSku": "2012-R2-Datacenter", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "dnsNameForPublicIP": "[toLower(parameters(\'vmName\'))]", "publicIPAddressName": "[toLower(concat(\'publicIP\',parameters(\'vmName\')))]", "publicIPAddressType": "Dynamic", "nicName": "[toLower(concat(\'nic\',parameters(\'vmName\')))]", "keyVaultURL": "[concat(\'https://\', parameters(\'keyVaultName\'), environment().suffixes.keyVaultDns)]", "encryptionOperation": "EnableEncryption", "keyVaultResourceId": "[resourceId(\'Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]"}, "resources": [{"type": "Microsoft.Network/VirtualNetworks", "name": "[parameters(\'virtualNetworkName\')]", "apiVersion": "2019-09-01", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"apiVersion": "2020-11-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[variables(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2020-11-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2019-07-01", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "identity": {"type": "SystemAssigned"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'osSku\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": 512, "lun": 1, "name": "DataDisk-01", "createOption": "empty", "caching": "None"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}, {"type": "Microsoft.KeyVault/vaults", "apiVersion": "2019-09-01", "name": "[parameters(\'keyVaultName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"], "properties": {"enabledForDeployment": "[parameters(\'enabledForDeployment\')]", "enabledForDiskEncryption": "[parameters(\'enabledForDiskEncryption\')]", "enabledForTemplateDeployment": "[parameters(\'enabledForTemplateDeployment\')]", "tenantId": "[subscription().tenantId]", "accessPolicies": [{"objectId": "[reference(resourceId(\'Microsoft.Compute/virtualMachines/\', parameters(\'vmName\')), \'2019-07-01\', \'full\').identity.principalId]", "tenantId": "[subscription().tenantId]", "permissions": {"keys": "[parameters(\'keysPermissions\')]", "secrets": "[parameters(\'secretsPermissions\')]"}}], "sku": {"name": "[parameters(\'skuName\')]", "family": "A"}, "networkAcls": {"defaultAction": "Allow", "bypass": "AzureServices"}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(parameters(\'vmName\'),\'/diskEncryption\')]", "apiVersion": "2020-12-01", "dependsOn": ["[resourceId(\'Microsoft.KeyVault/vaults\', parameters(\'keyVaultName\'))]"], "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "AzureDiskEncryption", "typeHandlerVersion": "2.2", "autoUpgradeMinorVersion": true, "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[variables(\'keyVaultURL\')]", "KeyVaultResourceId": "[variables(\'keyVaultResourceId\')]", "VolumeType": "All"}}}]}


cli_script
Below is the translated bash script from the provided ARM template and its parameters:\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nvmName="zytest"\nadminUsername="zytest"\nadminPassword="zytest"\nlocation="westus"\nvmSize="Standard_D2_v3"\nvirtualNetworkName="zytest"\nsubnetName="zytest"\nkeyVaultName="zytest"\nenabledForDeployment=true\nenabledForDiskEncryption=true\nenabledForTemplateDeployment=true\nkeysPermissions=("list" "get" "decrypt" "encrypt" "unwrapkey" "wrapkey")\nsecretsPermissions=("list" "get")\nskuName="Standard"\n\n# Create a Virtual Network\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --resource-group myResourceGroup \\\n  --location $location \\\n  --address-prefixes "10.0.0.0/16" \\\n  --subnet-name $subnetName \\\n  --subnet-prefix "10.0.0.0/24"\n\n# Create a Public IP Address\npublicIPAddressName=$(echo "publicIP$vmName" | tr \'[:upper:]\' \'[:lower:]\')\ndnsNameForPublicIP=$(echo $vmName | tr \'[:upper:]\' \'[:lower:]\')\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --resource-group myResourceGroup \\\n  --location $location \\\n  --allocation-method Dynamic \\\n  --dns-name $dnsNameForPublicIP\n\n# Create a Network Interface\nnicName=$(echo "nic$vmName" | tr \'[:upper:]\' \'[:lower:]\')\naz network nic create \\\n  --name $nicName \\\n  --resource-group myResourceGroup \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetName \\\n  --public-ip-address $publicIPAddressName\n\n# Create a Virtual Machine\naz vm create \\\n  --name $vmName \\\n  --resource-group myResourceGroup \\\n  --location $location \\\n  --nics $nicName \\\n  --size $vmSize \\\n  --image Win2012R2Datacenter \\\n  --admin-username $adminUsername \\\n  --admin-password $adminPassword\n\n# Create a Key Vault\naz keyvault create \\\n  --name $keyVaultName \\\n  --resource-group myResourceGroup \\\n  --location $location \\\n  --enabled-for-deployment $enabledForDeployment \\\n  --enabled-for-disk-encryption $enabledForDiskEncryption \\\n  --enabled-for-template-deployment $enabledForTemplateDeployment \\\n  --sku $skuName\n\n# Set permissions for the Key Vault\naz keyvault set-policy \\\n  --name $keyVaultName \\\n  --resource-group myResourceGroup \\\n  --key-permissions ${keysPermissions[@]} \\\n  --secret-permissions ${secretsPermissions[@]}\n\n# Get the principal ID of the VM for Key Vault access policy\nprincipalId=$(az vm show \\\n  --name $vmName \\\n  --resource-group myResourceGroup \\\n  --query "identity.principalId" -o tsv)\n\n# Update the Key Vault access policy\naz keyvault set-policy \\\n  --name $keyVaultName \\\n  --resource-group myResourceGroup \\\n  --object-id $principalId \\\n  --key-permissions ${keysPermissions[@]} \\\n  --secret-permissions ${secretsPermissions[@]}\n\n# Enable disk encryption on the Virtual Machine\nkeyVaultURL="https://$keyVaultName.vault.azure.net/"\naz vm extension set \\\n  --resource-group myResourceGroup \\\n  --vm-name $vmName \\\n  --name "AzureDiskEncryption" \\\n  --publisher "Microsoft.Azure.Security" \\\n  --settings "{\\"EncryptionOperation\\":\\"EnableEncryption\\",\\"KeyVaultURL\\":\\"$keyVaultURL\\",\\"VolumeType\\":\\"All\\"}"\n```\n\nPlease replace `myResourceGroup` with the actual resource group name you intend to use. Also, ensure that you have the necessary permissions and the Azure CLI installed and logged in to your Azure account before running the script.


verify_result
