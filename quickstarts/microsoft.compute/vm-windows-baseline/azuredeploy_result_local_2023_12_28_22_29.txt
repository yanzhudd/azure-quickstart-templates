arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.5.6.12127", "templateHash": "13052469227333070710"}}, "parameters": {"location": {"type": "string", "metadata": {"description": "The Azure region where resources in the template should be deployed."}, "defaultValue": "westus"}, "subnetName": {"type": "string", "defaultValue": "subnet", "metadata": {"description": "Name for the subnet in the virtual network where the network interface is connected."}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "nsg", "metadata": {"description": "Name of the network security group that sets rules for the network environment."}}, "virtualNetworkName": {"type": "string", "defaultValue": "network", "metadata": {"description": "Name of the virtual network."}}, "addressPrefix": {"type": "string", "defaultValue": "10.2.0.0/16", "metadata": {"description": "Network subnet and prefix."}}, "publicIpName": {"type": "string", "defaultValue": "myPublicIP", "metadata": {"description": "Name for the Public IP used to access the Virtual Machine."}}, "publicIPAllocationMethod": {"type": "string", "defaultValue": "Static", "allowedValues": ["Dynamic", "Static"], "metadata": {"description": "Allocation method for the Public IP used to access the Virtual Machine."}}, "vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine."}, "defaultValue": "zytest"}, "OSVersion": {"type": "string", "defaultValue": "2022-datacenter-azure-edition-smalldisk", "allowedValues": ["2012-R2-Datacenter", "2016-Datacenter", "2019-Datacenter", "2019-Datacenter-Core", "2019-Datacenter-Core-smalldisk", "2019-Datacenter-smalldisk", "2022-datacenter", "2022-datacenter-azure-edition-smalldisk", "2022-datacenter-core", "2022-datacenter-core-g2", "2022-datacenter-core-smalldisk", "2022-datacenter-core-smalldisk-g2", "2022-datacenter-g2", "2022-datacenter-smalldisk", "2022-datacenter-smalldisk-g2"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."}}, "osDiskStorageAccountType": {"type": "string", "defaultValue": "Standard_LRS", "allowedValues": ["Premium_LRS", "StandardSSD_LRS", "Standard_LRS", "UltraSSD_LRS"], "metadata": {"description": "Specifies the storage account type for OS and data disk."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the virtual machine."}}, "zone": {"type": "string", "defaultValue": "1", "allowedValues": ["1", "2", "3"], "metadata": {"description": "Availability zone number."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "secureString", "minLength": 12, "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "enableAcceleratedNetworking": {"type": "bool", "defaultValue": true, "metadata": {"description": "Enable accelerated networking."}}}, "resources": [{"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2021-05-01", "name": "[parameters(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]"}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2021-05-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[parameters(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[parameters(\'addressPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2021-05-01", "name": "[parameters(\'publicIpName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard"}, "zones": ["[parameters(\'zone\')]"], "properties": {"publicIPAllocationMethod": "[parameters(\'publicIPAllocationMethod\')]"}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2021-05-01", "name": "[format(\'{0}-nic\', parameters(\'vmName\'))]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[reference(resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))).subnets[0].id]"}, "privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]"}}}], "enableAcceleratedNetworking": "[parameters(\'enableAcceleratedNetworking\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]"}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2021-07-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "zones": ["[parameters(\'zone\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'OSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage", "managedDisk": {"storageAccountType": "[parameters(\'osDiskStorageAccountType\')]"}}, "dataDisks": [{"diskSizeGB": 1023, "lun": 0, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', format(\'{0}-nic\', parameters(\'vmName\')))]"}]}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "windowsConfiguration": {"enableAutomaticUpdates": true}}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', format(\'{0}-nic\', parameters(\'vmName\')))]"]}, {"type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2021-07-01", "name": "[format(\'{0}/{1}\', parameters(\'vmName\'), \'AzurePolicyforWindows\')]", "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.GuestConfiguration", "type": "ConfigurationforWindows", "typeHandlerVersion": "1.0", "autoUpgradeMinorVersion": true, "enableAutomaticUpgrade": true}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}, {"type": "Microsoft.GuestConfiguration/guestConfigurationAssignments", "apiVersion": "2020-06-25", "scope": "[format(\'Microsoft.Compute/virtualMachines/{0}\', parameters(\'vmName\'))]", "name": "AzureWindowsBaseline", "location": "[parameters(\'location\')]", "properties": {"guestConfiguration": {"assignmentType": "ApplyAndMonitor", "name": "AzureWindowsBaseline", "version": "1.*"}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}]}


cli_script
Based on the provided ARM template and parameters, below is the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Template parameters\nlocation="westus"\nsubnetName="subnet"\nnetworkSecurityGroupName="nsg"\nvirtualNetworkName="network"\naddressPrefix="10.2.0.0/16"\npublicIpName="myPublicIP"\npublicIPAllocationMethod="Static"\nvmName="zytest"\nOSVersion="2022-datacenter-azure-edition-smalldisk"\nosDiskStorageAccountType="Standard_LRS"\nvmSize="Standard_D2s_v3"\nzone="1"\nadminUsername="zytest"\nadminPassword="zytest" # Note: In practice, avoid hardcoding passwords in scripts\nenableAcceleratedNetworking=true\n\n# Create network security group\naz network nsg create --name "$networkSecurityGroupName" --location "$location"\n\n# Create virtual network with a subnet\naz network vnet create --name "$virtualNetworkName" --location "$location" --address-prefix "$addressPrefix" --subnet-name "$subnetName" --subnet-prefix "$addressPrefix"\n\n# Create public IP address\naz network public-ip create --name "$publicIpName" --location "$location" --allocation-method "$publicIPAllocationMethod" --sku Standard --zone "$zone"\n\n# Create network interface with accelerated networking and associate with NSG and public IP\nnicId=$(az network nic create --name "${vmName}-nic" --location "$location" --vnet-name "$virtualNetworkName" --subnet "$subnetName" --network-security-group "$networkSecurityGroupName" --public-ip-address "$publicIpName" --accelerated-networking "$enableAcceleratedNetworking" --query "id" -o tsv)\n\n# Create virtual machine\naz vm create --name "$vmName" --location "$location" --nics "$nicId" --size "$vmSize" --image "Win2019Datacenter" --os-disk-size-gb 127 --admin-username "$adminUsername" --admin-password "$adminPassword" --zone "$zone"\n\n# Add extension to virtual machine (Azure Policy for Windows)\naz vm extension set --vm-name "$vmName" --name "AzurePolicyforWindows" --publisher "Microsoft.GuestConfiguration" --version "1.0"\n\n# Assign guest configuration (Azure Windows Baseline)\naz guestconfiguration assignment create --name "AzureWindowsBaseline" --location "$location" --vm-name "$vmName" --configuration-name "AzureWindowsBaseline" --version "1.*"\n```\n\nPlease note that the `az vm create` command does not directly support all the parameters available in the ARM template, such as the specific OS version (SKU). Instead, the `--image` parameter is used to specify the image type. You may need to adjust the `--image` parameter based on the available images in Azure CLI or use a custom image that matches the SKU specified in the ARM template.\n\nAdditionally, storing passwords in plaintext as shown in the script is not secure. In production environments, consider using Azure Key Vault or another secure method to manage sensitive information.\n\nThe script assumes you have the Azure CLI installed and you are logged in to your Azure account. Make sure to review and test the script in a safe environment before using it in production.


verify_result
