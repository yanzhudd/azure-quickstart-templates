arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.16.2.56959", "templateHash": "14427937023370378081"}}, "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "minLength": 12, "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(format(\'{0}-{1}\', parameters(\'vmName\'), uniqueString(resourceGroup().id, parameters(\'vmName\'))))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "publicIpName": {"type": "string", "defaultValue": "myPublicIP", "metadata": {"description": "Name for the Public IP used to access the Virtual Machine."}}, "publicIPAllocationMethod": {"type": "string", "defaultValue": "Dynamic", "allowedValues": ["Dynamic", "Static"], "metadata": {"description": "Allocation method for the Public IP used to access the Virtual Machine."}}, "publicIpSku": {"type": "string", "defaultValue": "Basic", "allowedValues": ["Basic", "Standard"], "metadata": {"description": "SKU for the Public IP used to access the Virtual Machine."}}, "OSVersion": {"type": "string", "defaultValue": "2022-datacenter-azure-edition", "allowedValues": ["2016-datacenter-gensecond", "2016-datacenter-server-core-g2", "2016-datacenter-server-core-smalldisk-g2", "2016-datacenter-smalldisk-g2", "2016-datacenter-with-containers-g2", "2016-datacenter-zhcn-g2", "2019-datacenter-core-g2", "2019-datacenter-core-smalldisk-g2", "2019-datacenter-core-with-containers-g2", "2019-datacenter-core-with-containers-smalldisk-g2", "2019-datacenter-gensecond", "2019-datacenter-smalldisk-g2", "2019-datacenter-with-containers-g2", "2019-datacenter-with-containers-smalldisk-g2", "2019-datacenter-zhcn-g2", "2022-datacenter-azure-edition", "2022-datacenter-azure-edition-core", "2022-datacenter-azure-edition-core-smalldisk", "2022-datacenter-azure-edition-smalldisk", "2022-datacenter-core-g2", "2022-datacenter-core-smalldisk-g2", "2022-datacenter-g2", "2022-datacenter-smalldisk-g2"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v5", "metadata": {"description": "Size of the virtual machine."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "vmName": {"type": "string", "defaultValue": "simple-vm", "metadata": {"description": "Name of the virtual machine."}}, "securityType": {"type": "string", "defaultValue": "TrustedLaunch", "allowedValues": ["Standard", "TrustedLaunch"], "metadata": {"description": "Security Type of the Virtual Machine."}}}, "variables": {"storageAccountName": "[format(\'bootdiags{0}\', uniqueString(resourceGroup().id))]", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "MyVNET", "networkSecurityGroupName": "default-NSG", "securityProfileJson": {"uefiSettings": {"secureBootEnabled": true, "vTpmEnabled": true}, "securityType": "[parameters(\'securityType\')]"}, "extensionName": "GuestAttestation", "extensionPublisher": "Microsoft.Azure.Security.WindowsAttestation", "extensionVersion": "1.0", "maaTenantName": "GuestAttestation", "maaEndpoint": "[substring(\'emptyString\', 0, 0)]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2022-05-01", "name": "[variables(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage"}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2022-05-01", "name": "[parameters(\'publicIpName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[parameters(\'publicIpSku\')]"}, "properties": {"publicIPAllocationMethod": "[parameters(\'publicIPAllocationMethod\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2022-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourcePortRange": "*", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2022-05-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2022-05-01", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]"}, "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2022-03-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'OSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage", "managedDisk": {"storageAccountType": "StandardSSD_LRS"}}, "dataDisks": [{"diskSizeGB": 1023, "lun": 0, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\')), \'2022-05-01\').primaryEndpoints.blob]"}}, "securityProfile": "[if(equals(parameters(\'securityType\'), \'TrustedLaunch\'), variables(\'securityProfileJson\'), null())]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]", "[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))]"]}, {"condition": "[and(equals(parameters(\'securityType\'), \'TrustedLaunch\'), and(equals(variables(\'securityProfileJson\').uefiSettings.secureBootEnabled, true()), equals(variables(\'securityProfileJson\').uefiSettings.vTpmEnabled, true())))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2022-03-01", "name": "[format(\'{0}/{1}\', parameters(\'vmName\'), variables(\'extensionName\'))]", "location": "[parameters(\'location\')]", "properties": {"publisher": "[variables(\'extensionPublisher\')]", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "enableAutomaticUpgrade": true, "settings": {"AttestationConfig": {"MaaSettings": {"maaEndpoint": "[variables(\'maaEndpoint\')]", "maaTenantName": "[variables(\'maaTenantName\')]"}}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}], "outputs": {"hostname": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\')), \'2022-05-01\').dnsSettings.fqdn]"}}}


cli_script
Below is the translated bash script from the given ARM template and template parameters. Note that the ARM template\'s `parameters` section has default values, and there are no specific "TemplateParameters" provided. Hence, the default values are used in the script.\n\n```bash\n#!/bin/bash\n\n# Parameter variables\nadminUsername="zytest"\nadminPassword="zytest" # Note: In production, use a secure method to handle passwords\ndnsLabelPrefix="simple-vm-$(echo -n "simple-vm$(az group show --name $(az group list --query \'[0].name\' -o tsv) --query id -o tsv)" | shasum | head -c 10)"\npublicIpName="myPublicIP"\npublicIPAllocationMethod="Dynamic"\npublicIpSku="Basic"\nOSVersion="2022-datacenter-azure-edition"\nvmSize="Standard_D2s_v5"\nlocation="westus"\nvmName="simple-vm"\nsecurityType="TrustedLaunch"\n\n# Resource variables\nstorageAccountName="bootdiags$(echo -n "$(az group show --name $(az group list --query \'[0].name\' -o tsv) --query id -o tsv)" | shasum | head -c 10)"\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="default-NSG"\nuefiSettings=\'{"secureBootEnabled":true,"vTpmEnabled":true}\'\nsecurityProfileJson=\'{"uefiSettings":\'"$uefiSettings"\',"securityType":"\'"$securityType"\'"}\'\nextensionName="GuestAttestation"\nextensionPublisher="Microsoft.Azure.Security.WindowsAttestation"\nextensionVersion="1.0"\nmaaTenantName="GuestAttestation"\nmaaEndpoint=""\n\n# Create a storage account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --kind Storage\n\n# Create a public IP address\naz network public-ip create \\\n    --name $publicIpName \\\n    --location $location \\\n    --allocation-method $publicIPAllocationMethod \\\n    --sku $publicIpSku \\\n    --dns-name $dnsLabelPrefix\n\n# Create a network security group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Create a security rule for the network security group\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name "default-allow-3389" \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --destination-port-ranges 3389 \\\n    --protocol Tcp \\\n    --source-port-ranges \'*\' \\\n    --source-address-prefixes \'*\' \\\n    --destination-address-prefixes \'*\'\n\n# Create a virtual network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix \\\n    --network-security-group $networkSecurityGroupName\n\n# Create a network interface card\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --public-ip-address $publicIpName\n\n# Create a virtual machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --image "MicrosoftWindowsServer:WindowsServer:$OSVersion:latest" \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --size $vmSize \\\n    --storage-sku StandardSSD_LRS \\\n    --os-disk-size-gb 127 \\\n    --boot-diagnostics-storage $storageAccountName \\\n    --enable-agent true \\\n    --enable-auto-update true\n\n# Check if the security type is TrustedLaunch and if so, add the VM extension\nif [ "$securityType" == "TrustedLaunch" ]; then\n    az vm extension set \\\n        --vm-name $vmName \\\n        --name $extensionName \\\n        --publisher $extensionPublisher \\\n        --version $extensionVersion \\\n        --settings \'{"AttestationConfig":{"MaaSettings":{"maaEndpoint":"\'"$maaEndpoint"\'","maaTenantName":"\'"$maaTenantName"\'"}}}\'\nfi\n\n# Retrieve and output the fully qualified domain name (FQDN) of the VM\nfqdn=$(az network public-ip show --name $publicIpName --query "dnsSettings.fqdn" -o tsv)\necho "The FQDN of the VM is: $fqdn"\n```\n\nPlease note that this script assumes that you have the Azure CLI installed and you are logged into an Azure account with the necessary permissions to create these resources. The script also assumes that the default values in the ARM template are to be used. If you have specific values for the parameters, you should replace the default values with those specific values. Additionally, the script does not handle secure password input, which should be addressed in a production environment.


verify_result
