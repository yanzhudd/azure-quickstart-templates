arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.21.1.54444", "templateHash": "1385125734994293451"}}, "parameters": {"adminPassword": {"type": "securestring", "metadata": {"description": "Admin password."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username."}, "defaultValue": "zytest"}, "dnsNameforLBIP": {"type": "string", "metadata": {"description": "DNS for Load Balancer IP."}, "defaultValue": "zytest"}, "securityType": {"type": "string", "defaultValue": "TrustedLaunch", "allowedValues": ["Standard", "TrustedLaunch"], "metadata": {"description": "Security Type of the Virtual Machine."}}, "OSVersion": {"type": "string", "defaultValue": "2022-datacenter-azure-edition", "allowedValues": ["2016-datacenter-gensecond", "2016-datacenter-server-core-g2", "2016-datacenter-server-core-smalldisk-g2", "2016-datacenter-smalldisk-g2", "2016-datacenter-with-containers-g2", "2016-datacenter-zhcn-g2", "2019-datacenter-core-g2", "2019-datacenter-core-smalldisk-g2", "2019-datacenter-core-with-containers-g2", "2019-datacenter-core-with-containers-smalldisk-g2", "2019-datacenter-gensecond", "2019-datacenter-smalldisk-g2", "2019-datacenter-with-containers-g2", "2019-datacenter-with-containers-smalldisk-g2", "2019-datacenter-zhcn-g2", "2022-datacenter-azure-edition", "2022-datacenter-azure-edition-core", "2022-datacenter-azure-edition-core-smalldisk", "2022-datacenter-azure-edition-smalldisk", "2022-datacenter-core-g2", "2022-datacenter-core-smalldisk-g2", "2022-datacenter-g2", "2022-datacenter-smalldisk-g2"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "storageAccountName": {"type": "string", "defaultValue": "zytest", "metadata": {"description": "Name of storage account."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the virtual machine."}}}, "variables": {"extensionName": "GuestAttestation", "extensionPublisher": "Microsoft.Azure.Security.WindowsAttestation", "extensionVersion": "1.0", "maaEndpoint": "[substring(\'emptystring\', 0, 0)]", "maaTenantName": "GuestAttestation", "securityProfileJson": {"uefiSettings": {"secureBootEnabled": true, "vTpmEnabled": true}, "securityType": "[parameters(\'securityType\')]"}, "addressPrefix": "10.0.0.0/16", "imageOffer": "WindowsServer", "imagePublisher": "MicrosoftWindowsServer", "imageSKU": "[parameters(\'OSVersion\')]", "lbName": "myLB", "networkSecurityGroupName": "[format(\'{0}-nsg\', variables(\'subnetName\'))]", "nic1Name": "nic1", "nic2Name": "nic2", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "storageAccountType": "Standard_LRS", "subnetName": "Subnet-1", "subnetPrefix": "10.0.0.0/24", "vmName": "myVM", "vnetName": "myVNET"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2023-01-01", "name": "[parameters(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"type": "Microsoft.Network/loadBalancers", "apiVersion": "2023-05-01", "name": "[variables(\'lbName\')]", "location": "[parameters(\'location\')]", "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "BackendPool1"}], "inboundNatRules": [{"name": "RDP-VM0", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'lbName\'), \'LoadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPort": 50001, "backendPort": 3389, "enableFloatingIP": false}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"]}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2023-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2023-05-01", "name": "[variables(\'nic1Name\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'lbName\'), \'BackendPool1\')]"}], "loadBalancerInboundNatRules": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatRules\', variables(\'lbName\'), \'RDP-VM0\')]"}]}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'lbName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'vnetName\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2023-05-01", "name": "[variables(\'nic2Name\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'vnetName\'))]"]}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2023-05-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameforLBIP\')]"}}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2023-07-01", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'imageSKU\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "securityProfile": "[if(equals(parameters(\'securityType\'), \'TrustedLaunch\'), variables(\'securityProfileJson\'), null())]", "networkProfile": {"networkInterfaces": [{"properties": {"primary": true}, "id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic1Name\'))]"}, {"properties": {"primary": false}, "id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic2Name\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', parameters(\'storageAccountName\')), \'2023-01-01\').primaryEndpoints.blob]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic1Name\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic2Name\'))]", "[resourceId(\'Microsoft.Storage/storageAccounts\', parameters(\'storageAccountName\'))]"]}, {"condition": "[and(equals(parameters(\'securityType\'), \'TrustedLaunch\'), and(equals(variables(\'securityProfileJson\').uefiSettings.secureBootEnabled, true()), equals(variables(\'securityProfileJson\').uefiSettings.vTpmEnabled, true())))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2023-07-01", "name": "[format(\'{0}/{1}\', variables(\'vmName\'), \'GuestAttestation\')]", "location": "[parameters(\'location\')]", "properties": {"publisher": "[variables(\'extensionPublisher\')]", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "enableAutomaticUpgrade": true, "settings": {"AttestationConfig": {"MaaSettings": {"maaEndpoint": "[variables(\'maaEndpoint\')]", "maaTenantName": "[variables(\'maaTenantName\')]"}}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', variables(\'vmName\'))]"]}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2023-05-01", "name": "[variables(\'vnetName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"]}]}


cli_script
Below is the translated Azure CLI script from the provided ARM template. Please note that this script assumes that the Azure CLI is already installed and configured to use the appropriate subscription. You may need to log in to Azure (`az login`) before running this script.\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nadminPassword="zytest"\nadminUsername="zytest"\ndnsNameforLBIP="zytest"\nsecurityType="TrustedLaunch"\nOSVersion="2022-datacenter-azure-edition"\nlocation="westus"\nstorageAccountName="zytest"\nvmSize="Standard_D2s_v3"\n\n# Variables\nextensionName="GuestAttestation"\nextensionPublisher="Microsoft.Azure.Security.WindowsAttestation"\nextensionVersion="1.0"\nmaaEndpoint=""\nmaaTenantName="GuestAttestation"\nsecurityProfileJson=\'{"uefiSettings":{"secureBootEnabled":true,"vTpmEnabled":true},"securityType":"\'"$securityType"\'"}\'\naddressPrefix="10.0.0.0/16"\nimageOffer="WindowsServer"\nimagePublisher="MicrosoftWindowsServer"\nimageSKU="$OSVersion"\nlbName="myLB"\nnetworkSecurityGroupName="Subnet-1-nsg"\nnic1Name="nic1"\nnic2Name="nic2"\npublicIPAddressName="myPublicIP"\npublicIPAddressType="Dynamic"\nstorageAccountType="Standard_LRS"\nsubnetName="Subnet-1"\nsubnetPrefix="10.0.0.0/24"\nvmName="myVM"\nvnetName="myVNET"\n\n# Create a storage account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $location \\\n    --sku $storageAccountType \\\n    --kind StorageV2\n\n# Create a public IP address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method $publicIPAddressType \\\n    --dns-name $dnsNameforLBIP\n\n# Create a load balancer\naz network lb create \\\n    --name $lbName \\\n    --location $location \\\n    --frontend-ip-name LoadBalancerFrontEnd \\\n    --public-ip-address $publicIPAddressName \\\n    --backend-pool-name BackendPool1\n\n# Create an inbound NAT rule for the load balancer\naz network lb inbound-nat-rule create \\\n    --resource-group $resourceGroupName \\\n    --lb-name $lbName \\\n    --name RDP-VM0 \\\n    --protocol Tcp \\\n    --frontend-port 50001 \\\n    --backend-port 3389 \\\n    --frontend-ip-name LoadBalancerFrontEnd\n\n# Create a network security group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Create a virtual network\naz network vnet create \\\n    --name $vnetName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix \\\n    --network-security-group $networkSecurityGroupName\n\n# Create network interfaces\naz network nic create \\\n    --name $nic1Name \\\n    --location $location \\\n    --vnet-name $vnetName \\\n    --subnet $subnetName \\\n    --lb-name $lbName \\\n    --lb-address-pools BackendPool1 \\\n    --lb-inbound-nat-rules RDP-VM0\n\naz network nic create \\\n    --name $nic2Name \\\n    --location $location \\\n    --vnet-name $vnetName \\\n    --subnet $subnetName\n\n# Create a virtual machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nic1Name $nic2Name \\\n    --size $vmSize \\\n    --image $imagePublisher:$imageOffer:$imageSKU:latest \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --storage-sku $storageAccountType \\\n    --os-disk-name "${vmName}_osdisk" \\\n    --authentication-type password \\\n    --boot-diagnostics-storage $storageAccountName\n\n# Check if Trusted Launch is enabled and add VM extension\nif [ "$securityType" == "TrustedLaunch" ]; then\n    az vm extension set \\\n        --publisher $extensionPublisher \\\n        --name $extensionName \\\n        --vm-name $vmName \\\n        --settings \'{"AttestationConfig":{"MaaSettings":{"maaEndpoint":"\'"$maaEndpoint"\'","maaTenantName":"\'"$maaTenantName"\'"}}}\' \\\n        --version $extensionVersion\nfi\n```\n\nThis script sets up a storage account, public IP, load balancer, network security group, virtual network, network interfaces, and a virtual machine, along with the necessary dependencies between them. It also conditionally adds a VM extension for Trusted Launch if that\'s the specified security type. Make sure to replace `$resourceGroupName` with your actual resource group name where necessary.


verify_result
