arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_A1", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "windowsOSVersion": {"type": "string", "defaultValue": "2012-R2-Datacenter", "allowedValues": ["2008-R2-SP1", "2012-Datacenter", "2012-R2-Datacenter"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "maxValue": 100, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password on all VMs."}, "defaultValue": "zytest"}}, "variables": {"storageAccountType": "Standard_LRS", "namingInfix": "[toLower(substring(concat(parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "longNamingInfix": "[toLower(parameters(\'vmssName\'))]", "newStorageAccountSuffix": "[concat(variables(\'namingInfix\'), \'sa\')]", "uniqueStringArray": ["[concat(uniqueString(concat(resourceGroup().id, variables(\'newStorageAccountSuffix\'), \'0\')))]", "[concat(uniqueString(concat(resourceGroup().id, variables(\'newStorageAccountSuffix\'), \'1\')))]", "[concat(uniqueString(concat(resourceGroup().id, variables(\'newStorageAccountSuffix\'), \'2\')))]", "[concat(uniqueString(concat(resourceGroup().id, variables(\'newStorageAccountSuffix\'), \'3\')))]", "[concat(uniqueString(concat(resourceGroup().id, variables(\'newStorageAccountSuffix\'), \'4\')))]"], "saCount": "[length(variables(\'uniqueStringArray\'))]", "vhdContainerName": "[concat(variables(\'namingInfix\'), \'vhd\')]", "osDiskName": "[concat(variables(\'namingInfix\'), \'osdisk\')]", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "publicIPAddressName": "[concat(variables(\'namingInfix\'), \'pip\')]", "subnetName": "[concat(variables(\'namingInfix\'), \'subnet\')]", "loadBalancerName": "[concat(variables(\'namingInfix\'), \'lb\')]", "publicIPAddressID": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]", "lbID": "[resourceId(\'Microsoft.Network/loadBalancers\',variables(\'loadBalancerName\'))]", "natPoolName": "[concat(variables(\'namingInfix\'), \'natpool\')]", "bePoolName": "[concat(variables(\'namingInfix\'), \'bepool\')]", "natStartPort": 50000, "natEndPort": 50119, "natBackendPort": 3389, "nicName": "[concat(variables(\'namingInfix\'), \'nic\')]", "ipConfigName": "[concat(variables(\'namingInfix\'), \'ipconfig\')]", "frontEndIPConfigID": "[concat(variables(\'lbID\'),\'/frontendIPConfigurations/loadBalancerFrontEnd\')]", "osType": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'windowsOSVersion\')]", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "networkApiVersion": "2017-04-01", "storageApiVersion": "2016-01-01", "computeApiVersion": "2017-03-30"}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[resourceGroup().location]", "apiVersion": "2017-04-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Storage/storageAccounts", "name": "[concat(variables(\'uniqueStringArray\')[copyIndex()], variables(\'newStorageAccountSuffix\'))]", "location": "[resourceGroup().location]", "apiVersion": "2016-01-01", "copy": {"name": "storageLoop", "count": "[variables(\'saCount\')]"}, "properties": {}, "kind": "Storage", "sku": {"name": "[variables(\'storageAccountType\')]"}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[resourceGroup().location]", "apiVersion": "2017-04-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[variables(\'longNamingInfix\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[resourceGroup().location]", "apiVersion": "2017-04-01", "dependsOn": ["[concat(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[variables(\'publicIPAddressID\')]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[variables(\'frontEndIPConfigID\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[variables(\'namingInfix\')]", "location": "[resourceGroup().location]", "apiVersion": "2017-03-30", "dependsOn": ["storageLoop", "[concat(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[concat(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "true", "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[variables(\'namingInfix\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[concat(\'/subscriptions/\', subscription().subscriptionId,\'/resourceGroups/\', resourceGroup().name, \'/providers/Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'), \'/subnets/\', variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[concat(\'/subscriptions/\', subscription().subscriptionId,\'/resourceGroups/\', resourceGroup().name, \'/providers/Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'), \'/backendAddressPools/\', variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[concat(\'/subscriptions/\', subscription().subscriptionId,\'/resourceGroups/\', resourceGroup().name, \'/providers/Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'), \'/inboundNatPools/\', variables(\'natPoolName\'))]"}]}}]}}]}}}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmSku="Standard_A1"\nwindowsOSVersion="2012-R2-Datacenter"\nvmssName="zytest"\ninstanceCount="zytest"\nadminUsername="zytest"\nadminPassword="zytest"\n\n# Create virtual network\naz network vnet create --name $vmssName --resource-group myResourceGroup --location westus --address-prefix 10.0.0.0/16 --subnet-name $vmssName --subnet-prefix 10.0.0.0/24\n\n# Create storage account\nfor i in {0..4}\ndo\n  az storage account create --name $vmssName$i --resource-group myResourceGroup --location westus --sku Standard_LRS\ndone\n\n# Create public IP address\naz network public-ip create --name $vmssName --resource-group myResourceGroup --location westus --allocation-method Dynamic --dns-name $vmssName\n\n# Create load balancer\naz network lb create --name $vmssName --resource-group myResourceGroup --location westus --frontend-ip-name LoadBalancerFrontEnd --public-ip-address $vmssName --backend-pool-name $vmssName\n\n# Create NAT pool\naz network lb inbound-nat-pool create --name $vmssName --resource-group myResourceGroup --lb-name $vmssName --protocol Tcp --frontend-port-range-start 50000 --frontend-port-range-end 50119 --backend-port 3389\n\n# Create virtual machine scale set\naz vmss create --name $vmssName --resource-group myResourceGroup --location westus --vm-sku $vmSku --instance-count $instanceCount --admin-username $adminUsername --admin-password $adminPassword --image MicrosoftWindowsServer:WindowsServer:$windowsOSVersion --vnet-name $vmssName --subnet $vmssName --lb $vmssName --backend-pool-name $vmssName\n```\n\nPlease replace `myResourceGroup` and `westus` with your actual resource group name and location.


verify_result
