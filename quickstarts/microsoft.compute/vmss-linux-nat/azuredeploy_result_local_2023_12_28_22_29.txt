arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_A1", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "16.04-LTS", "allowedValues": ["14.04.4-LTS", "16.04-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 14.04.4-LTS, 16.04-LTS."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "minValue": 5, "maxValue": 100, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"namingInfix": "[toLower(substring(concat(parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "longNamingInfix": "[toLower(parameters(\'vmssName\'))]", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "publicIPAddressName": "[concat(variables(\'namingInfix\'), \'pip\')]", "subnetName": "[concat(variables(\'namingInfix\'), \'subnet\')]", "loadBalancerName": "[concat(variables(\'namingInfix\'), \'lb\')]", "natPoolName": "[concat(variables(\'namingInfix\'), \'natpool\')]", "bePoolName": "[concat(variables(\'namingInfix\'), \'bepool\')]", "natStartPort": 50000, "natEndPort": 50119, "natBackendPort": 22, "nicName": "[concat(variables(\'namingInfix\'), \'nic\')]", "ipConfigName": "[concat(variables(\'namingInfix\'), \'ipconfig\')]", "osType": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-08-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-04-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[variables(\'longNamingInfix\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-04-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[variables(\'namingInfix\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-03-30", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "true", "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[variables(\'namingInfix\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools/\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools/\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}]}}]}}]}}}}]}


cli_script
Based on the provided ARM template and parameters, here is the corresponding Azure CLI script written in bash:\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nvmSku="Standard_A1"\nubuntuOSVersion="16.04-LTS"\nvmssName="zytest"\ninstanceCount=100\nlocation="westus"\nadminUsername="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Derived variables\nnamingInfix=$(echo -n "${vmssName}$(az group show --query id --output tsv | tr -d \'\\n\' | sha1sum | head -c 10)" | tr \'[:upper:]\' \'[:lower:]\')\nlongNamingInfix=$(echo -n "${vmssName}" | tr \'[:upper:]\' \'[:lower:]\')\naddressPrefix="10.0.0.0/16"\nsubnetPrefix="10.0.0.0/24"\nvirtualNetworkName="${namingInfix}vnet"\npublicIPAddressName="${namingInfix}pip"\nsubnetName="${namingInfix}subnet"\nloadBalancerName="${namingInfix}lb"\nnatPoolName="${namingInfix}natpool"\nbePoolName="${namingInfix}bepool"\nnatStartPort=50000\nnatEndPort=50119\nnatBackendPort=22\nnicName="${namingInfix}nic"\nipConfigName="${namingInfix}ipconfig"\n\n# Create virtual network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create public IP address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $longNamingInfix\n\n# Create load balancer\naz network lb create \\\n    --name $loadBalancerName \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $location \\\n    --frontend-ip-name LoadBalancerFrontEnd \\\n    --public-ip-address $publicIPAddressName \\\n    --backend-pool-name $bePoolName\n\n# Create inbound NAT pool\naz network lb inbound-nat-pool create \\\n    --resource-group $RESOURCE_GROUP \\\n    --lb-name $loadBalancerName \\\n    --name $natPoolName \\\n    --protocol Tcp \\\n    --frontend-port-range-start $natStartPort \\\n    --frontend-port-range-end $natEndPort \\\n    --backend-port $natBackendPort \\\n    --frontend-ip-name LoadBalancerFrontEnd\n\n# Create VM scale set\naz vmss create \\\n    --name $namingInfix \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $location \\\n    --vm-sku $vmSku \\\n    --instance-count $instanceCount \\\n    --upgrade-policy-mode Manual \\\n    --authentication-type $authenticationType \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPasswordOrKey \\\n    --image Canonical:UbuntuServer:$ubuntuOSVersion:latest \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --load-balancer $loadBalancerName \\\n    --backend-pool-name $bePoolName \\\n    --nat-pool-name $natPoolName\n\n# If using SSH keys for authentication, set the SSH key\nif [ "$authenticationType" = "sshPublicKey" ]; then\n    az vmss extension set \\\n        --publisher Microsoft.Azure.Extensions \\\n        --version 2.0 \\\n        --name CustomScript \\\n        --vmss-name $namingInfix \\\n        --resource-group $RESOURCE_GROUP \\\n        --settings "{\\"commandToExecute\\":\\"echo $adminPasswordOrKey >> /home/$adminUsername/.ssh/authorized_keys\\"}"\nfi\n```\n\nPlease ensure you replace `$RESOURCE_GROUP` with your actual resource group name where you want to deploy these resources. Also, this script assumes that you have the Azure CLI installed and you are logged in to your Azure account.\n\nNote: The script has been simplified for readability and may need additional error checking for production use.


verify_result
