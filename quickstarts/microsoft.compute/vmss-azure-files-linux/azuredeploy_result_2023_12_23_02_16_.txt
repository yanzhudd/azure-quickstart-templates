arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.19.5.34762", "templateHash": "1342909189403525026"}}, "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "vmssName": {"type": "string", "maxLength": 12, "metadata": {"description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "securityType": {"type": "string", "defaultValue": "TrustedLaunch", "allowedValues": ["Standard", "TrustedLaunch"], "metadata": {"description": "Security Type of the Virtual Machine."}}, "instanceCount": {"type": "int", "maxValue": 100, "minValue": 3, "metadata": {"description": "Number of VM instances (100 or less)."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "storageAccountName": {"type": "string", "metadata": {"description": "Storage account name for Azure file share."}, "defaultValue": "zytest"}, "storageAccountKey": {"type": "securestring", "metadata": {"description": "Storage account key for Azure file share."}, "defaultValue": "zytest"}, "shareName": {"type": "string", "metadata": {"description": "Azure file share name."}, "defaultValue": "zytest"}, "mountpointPath": {"type": "string", "defaultValue": "/mnt/azurefiles", "metadata": {"description": "Path on VM to mount file share - will also link to user home dir."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "_artifactsLocation": {"type": "string", "defaultValue": "[deployment().properties.templateLink.uri]", "metadata": {"description": "The base URI where artifacts required by this template are located including a trailing \'/\'"}}, "_artifactsLocationSasToken": {"type": "securestring", "defaultValue": "", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."}}}, "variables": {"securityProfileJson": {"uefiSettings": {"secureBootEnabled": true, "vTpmEnabled": true}, "securityType": "[parameters(\'securityType\')]"}, "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[format(\'{0}vnet\', parameters(\'vmssName\'))]", "publicIPAddressName": "[format(\'{0}pip\', parameters(\'vmssName\'))]", "subnetName": "[format(\'{0}subnet\', parameters(\'vmssName\'))]", "loadBalancerName": "[format(\'{0}lb\', parameters(\'vmssName\'))]", "natPoolName": "[format(\'{0}natpool\', parameters(\'vmssName\'))]", "bePoolName": "[format(\'{0}bepool\', parameters(\'vmssName\'))]", "natStartPort": 50000, "natEndPort": 50120, "natBackendPort": 22, "nicName": "[format(\'{0}nic\', parameters(\'vmssName\'))]", "ipConfigName": "[format(\'{0}ipconfig\', parameters(\'vmssName\'))]", "osType": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18_04-lts-gen2", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[format(\'/home/{0}/.ssh/authorized_keys\', parameters(\'adminUsername\'))]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2022-11-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2022-11-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'vmssName\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "apiVersion": "2022-11-01", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}, {"name": "natpool2", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 9000, "frontendPortRangeEnd": 9120, "backendPort": 9000}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"]}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "apiVersion": "2023-03-01", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": false, "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[parameters(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), null(), variables(\'linuxConfiguration\'))]"}, "securityProfile": "[if(equals(parameters(\'securityType\'), \'TrustedLaunch\'), variables(\'securityProfileJson\'), null())]", "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools/\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools/\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}, {"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'), \'natpool2\')]"}]}}]}}]}, "extensionProfile": {"extensions": [{"name": "filesextension", "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[uri(parameters(\'_artifactsLocation\'), format(\'mountazurefiles.sh{0}\', parameters(\'_artifactsLocationSasToken\')))]"]}, "protectedSettings": {"commandToExecute": "[format(\'bash mountazurefiles.sh {0} {1} {2} {3} {4}\', parameters(\'storageAccountName\'), parameters(\'storageAccountKey\'), parameters(\'shareName\'), parameters(\'mountpointPath\'), parameters(\'adminUsername\'))]"}}}]}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmSku="Standard_D2s_v3"\nvmssName="zytest"\nlocation="westus"\nsecurityType="TrustedLaunch"\ninstanceCount="zytest"\nadminUsername="zytest"\nstorageAccountName="zytest"\nstorageAccountKey="zytest"\nshareName="zytest"\nmountpointPath="/mnt/azurefiles"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\n\n# Create virtual network\naz network vnet create --name ${vmssName}vnet --resource-group myResourceGroup --location $location --address-prefix 10.0.0.0/16 --subnet-name ${vmssName}subnet --subnet-prefix 10.0.0.0/24\n\n# Create public IP address\naz network public-ip create --name ${vmssName}pip --resource-group myResourceGroup --location $location --allocation-method Dynamic --dns-name $vmssName\n\n# Create load balancer\naz network lb create --name ${vmssName}lb --resource-group myResourceGroup --location $location --frontend-ip-name LoadBalancerFrontEnd --public-ip-address ${vmssName}pip --backend-pool-name ${vmssName}bepool\n\n# Create NAT pool\naz network lb inbound-nat-pool create --name ${vmssName}natpool --resource-group myResourceGroup --lb-name ${vmssName}lb --protocol Tcp --frontend-port-range-start 50000 --frontend-port-range-end 50120 --backend-port 22\n\n# Create NAT pool 2\naz network lb inbound-nat-pool create --name natpool2 --resource-group myResourceGroup --lb-name ${vmssName}lb --protocol Tcp --frontend-port-range-start 9000 --frontend-port-range-end 9120 --backend-port 9000\n\n# Create virtual machine scale set\naz vmss create --name $vmssName --resource-group myResourceGroup --location $location --vm-sku $vmSku --instance-count $instanceCount --admin-username $adminUsername --admin-password $adminPasswordOrKey --authentication-type $authenticationType --storage-sku Standard_LRS --image Canonical:UbuntuServer:18_04-lts-gen2:latest --vnet-name ${vmssName}vnet --subnet ${vmssName}subnet --public-ip-address ${vmssName}pip --load-balancer ${vmssName}lb --backend-pool-name ${vmssName}bepool --nat-pool ${vmssName}natpool --nat-pool natpool2\n\n# Add extension to VMSS\naz vmss extension set --publisher Microsoft.Azure.Extensions --version 2.0 --name CustomScript --resource-group myResourceGroup --vmss-name $vmssName --settings \'{"fileUris": ["\'$_artifactsLocation\'/mountazurefiles.sh\'$_artifactsLocationSasToken\'"]}\' --protected-settings \'{"commandToExecute": "bash mountazurefiles.sh \'$storageAccountName\' \'$storageAccountKey\' \'$shareName\' \'$mountpointPath\' \'$adminUsername\'"}\'\n```\n\nPlease replace `myResourceGroup` with your actual resource group name.


verify_result
