arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Admin username"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password"}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "metadata": {"description": "DNS for PublicIPAddressName1"}, "defaultValue": "zytest"}, "dnsLabelPrefix1": {"type": "string", "metadata": {"description": "DNS for PublicIPAddressName2"}, "defaultValue": "zytest"}, "OSVersion": {"type": "string", "allowedValues": ["2012-Datacenter", "2012-R2-Datacenter", "2016-Nano-Server", "2016-Datacenter-with-Containers", "2016-Datacenter", "18.04-LTS", "7.2"], "metadata": {"description": "The Windows/Linux version for the VM. This will pick a fully patched image of this given Windows/Linux version."}, "defaultValue": "zytest"}, "imagePublisher": {"type": "string", "allowedValues": ["Canonical", "MicrosoftWindowsServer", "RedHat"], "metadata": {"description": "The Windows/Linux image publisher for the selected VM. "}, "defaultValue": "zytest"}, "imageOffer": {"type": "string", "allowedValues": ["UbuntuServer", "RHEL", "WindowsServer"], "metadata": {"description": "The Windows/Linux image for the selected VM. "}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "description"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"addressPrefix": "10.0.0.0/16", "subnetName": "mySubnet", "subnetPrefix": "10.0.0.0/24", "publicIPAddressType": "Static", "publicIPAddressType2": "Static", "nicName": "myNic1", "vnetName": "myVNet1", "publicIPAddressName": "myPublicIP", "publicIPAddressName2": "myPublicIP2", "vmName": "myVM1", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetName\'))]", "networkSecurityGroupName": "default-NSG"}, "resources": [{"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName2\')]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType2\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix1\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'vnetName\')]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName2\'))]"], "properties": {"ipConfigurations": [{"name": "IPConfig-1", "properties": {"primary": true, "privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}, {"name": "IPConfig-2", "properties": {"privateIPAddress": "10.0.0.5", "privateIPAllocationMethod": "Static", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName2\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}, {"name": "IPConfig-3", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "apiVersion": "2020-06-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[parameters(\'imagePublisher\')]", "offer": "[parameters(\'imageOffer\')]", "sku": "[parameters(\'OSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]", "properties": {"primary": true}}]}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}}}


cli_script
Below is the equivalent Azure CLI script based on the provided ARM template and template parameters:\n\n```bash\n#!/bin/bash\n\n# Define variables from the template parameters\nadminUsername="zytest"\nadminPassword="zytest"\ndnsLabelPrefix="zytest"\ndnsLabelPrefix1="zytest"\nOSVersion="zytest"\nimagePublisher="zytest"\nimageOffer="zytest"\nvmSize="Standard_A1_v2"\nlocation="westus"\n\n# Define variables from the ARM template variables section\naddressPrefix="10.0.0.0/16"\nsubnetName="mySubnet"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressType="Static"\npublicIPAddressType2="Static"\nnicName="myNic1"\nvnetName="myVNet1"\npublicIPAddressName="myPublicIP"\npublicIPAddressName2="myPublicIP2"\nvmName="myVM1"\nnetworkSecurityGroupName="default-NSG"\n\n# Create Public IP Address 1\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --allocation-method $publicIPAddressType \\\n    --dns-name $dnsLabelPrefix\n\n# Create Public IP Address 2\naz network public-ip create \\\n    --name $publicIPAddressName2 \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --allocation-method $publicIPAddressType2 \\\n    --dns-name $dnsLabelPrefix1\n\n# Create Network Security Group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --resource-group myResourceGroup \\\n    --location $location\n\n# Create a default security rule\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --resource-group myResourceGroup \\\n    --name default-allow-22 \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --destination-port-ranges 22 \\\n    --protocol Tcp \\\n    --source-address-prefix "*" \\\n    --source-port-range "*"\n\n# Create Virtual Network\naz network vnet create \\\n    --name $vnetName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix \\\n    --network-security-group $networkSecurityGroupName\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --vnet-name $vnetName \\\n    --subnet $subnetName \\\n    --public-ip-address $publicIPAddressName\n\n# Create a second IP configuration for the NIC\naz network nic ip-config create \\\n    --name IPConfig-2 \\\n    --nic-name $nicName \\\n    --resource-group myResourceGroup \\\n    --private-ip-address 10.0.0.5 \\\n    --public-ip-address $publicIPAddressName2\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --nics $nicName \\\n    --image ${imagePublisher}:${imageOffer}:${OSVersion}:latest \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --size $vmSize\n\n# Output hostname\nhostname=$(az network public-ip show \\\n    --name $publicIPAddressName \\\n    --resource-group myResourceGroup \\\n    --query "[dnsSettings.fqdn]" \\\n    --output tsv)\n\necho "Hostname: $hostname"\n```\n\nPlease note that the ARM template assumes the resources are created within an existing resource group named `myResourceGroup`. If the resource group is not already present, you will need to create it with the `az group create` command before running the above script. Additionally, the script assumes that the ARM template\'s `dependsOn` references are resolved in the order of resource creation in the script, and the resources are created within the same resource group.


verify_result
