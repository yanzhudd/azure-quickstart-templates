arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"existingDataFactoryName": {"type": "string", "metadata": {"description": "your existing data factory name"}, "defaultValue": "zytest"}, "GatewayName": {"type": "string", "metadata": {"description": "Gateway name must be unique in subscription"}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "User name for the virtual machine"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password for the virtual machine"}, "defaultValue": "zytest"}, "existingVirtualNetworkName": {"type": "string", "metadata": {"description": "your existing vnet name"}, "defaultValue": "zytest"}, "existingVnetLocation": {"type": "string", "metadata": {"description": "your virtual machine will be create in the same datacenter with VNET"}, "defaultValue": "zytest"}, "existingVnetResourceGroupName": {"type": "string", "metadata": {"description": "Name of the existing VNET resource group"}, "defaultValue": "zytest"}, "existingSubnetInYourVnet": {"type": "string", "metadata": {"description": "Name of the subnet in the virtual network you want to use"}, "defaultValue": "zytest"}, "enableToSetDataStoreFromInternet": {"type": "string", "allowedValues": ["yes", "no"], "defaultValue": "yes", "metadata": {"description": "If you choose yes, we will create a dns name label for your machine and open one inbound port for our service to access your machine and set data store passwords."}}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located."}, "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-with-data-management-gateway/"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}, "defaultValue": ""}}, "variables": {"delimiters": ["-", "_"], "prefix": "[split(parameters(\'gatewayName\'), variables(\'delimiters\'))[0]]", "virtualMachineName": "[take(concat(\'vm-\', variables(\'prefix\')), 15)]", "nsglink": "[concat(parameters(\'_artifactsLocation\'), \'nested/\', parameters(\'enableToSetDataStoreFromInternet\'),\'IncomingRemote.json\',parameters(\'_artifactsLocationSasToken\'))]", "nsgTemplateName": "[concat(variables(\'virtualMachineName\'), \'NSGTemplate\')]", "storageAccountName": "[take(concat(toLower(variables(\'prefix\')), uniquestring(resourceGroup().id, variables(\'virtualMachineName\'))), 24)]", "nicName": "[concat(variables(\'virtualMachineName\'), \'Nic\')]", "publicIPAddressName": "[concat(variables(\'virtualMachineName\'), \'-ip\')]", "networkSecurityGroupName": "[concat(variables(\'virtualMachineName\'), \'nsg\')]", "scriptURL": "[concat(parameters(\'_artifactsLocation\'), \'scripts/gatewayInstall.ps1\',parameters(\'_artifactsLocationSasToken\'))]"}, "resources": [{"type": "Microsoft.DataFactory/dataFactories/gateways", "apiVersion": "2015-10-01", "name": "[concat(parameters(\'existingDataFactoryName\'), \'/\', parameters(\'GatewayName\'))]", "properties": {"description": "my gateway"}}, {"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2016-01-01", "location": "[parameters(\'existingVnetLocation\')]", "dependsOn": ["[resourceId(\'Microsoft.DataFactory/dataFactories/gateways\', parameters(\'existingDataFactoryName\'), parameters(\'GatewayName\'))]"], "tags": {"vmname": "[variables(\'virtualMachineName\')]"}, "sku": {"name": "Standard_LRS"}, "kind": "Storage", "properties": {}}, {"apiVersion": "2016-03-30", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'existingVnetLocation\')]", "tags": {"vmname": "[variables(\'virtualMachineName\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Resources/deployments/\', variables(\'nsgTemplateName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[resourceId(parameters(\'existingVnetResourceGroupName\'), \'Microsoft.Network/virtualNetworks/subnets\', parameters(\'existingVirtualNetworkName\'), parameters(\'existingSubnetInYourVnet\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}, {"apiVersion": "2017-03-30", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'virtualMachineName\')]", "location": "[parameters(\'existingVnetLocation\')]", "tags": {"vmname": "[variables(\'virtualMachineName\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "Standard_A3"}, "osProfile": {"computerName": "[variables(\'virtualMachineName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2016-Datacenter", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'virtualMachineName\'),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage", "managedDisk": {"storageAccountType": "StandardSSD_LRS"}}, "dataDisks": [{"name": "[concat(variables(\'virtualMachineName\'),\'_DataDisk1\')]", "diskSizeGB": 128, "lun": 0, "managedDisk": {"storageAccountType": "StandardSSD_LRS"}, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))).primaryEndpoints.blob]"}}}, "resources": [{"type": "extensions", "name": "[concat(variables(\'virtualMachineName\'),\'installGW\')]", "apiVersion": "2015-06-15", "location": "[parameters(\'existingVnetLocation\')]", "tags": {"vmname": "[variables(\'virtualMachineName\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/\',variables(\'virtualMachineName\'))]"], "properties": {"publisher": "Microsoft.Compute", "type": "CustomScriptExtension", "typeHandlerVersion": "1.7", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[variables(\'scriptURL\')]"]}, "protectedSettings": {"commandToExecute": "[concat(\'powershell.exe -ExecutionPolicy Unrestricted -File gatewayInstall.ps1 \', listAuthKeys(resourceId(\'Microsoft.DataFactory/dataFactories/gateways\', parameters(\'existingDataFactoryName\'), parameters(\'GatewayName\')), \'2015-10-01\').key1, \' \', reference(variables(\'nsgTemplateName\')).outputs.hostname.Value, \' \', parameters(\'enableToSetDataStoreFromInternet\'))]"}}}]}, {"apiVersion": "2015-01-01", "name": "[variables(\'nsgTemplateName\')]", "type": "Microsoft.Resources/deployments", "dependsOn": ["[resourceId(\'Microsoft.DataFactory/dataFactories/gateways\', parameters(\'existingDataFactoryName\'), parameters(\'GatewayName\'))]"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'nsglink\')]", "contentVersion": "1.0.0.0"}, "parameters": {"vmName": {"value": "[variables(\'virtualMachineName\')]"}, "networkSecurityGroupName": {"value": "[variables(\'networkSecurityGroupName\')]"}, "publicIPAddressName": {"value": "[variables(\'publicIPAddressName\')]"}, "existingVnetLocation": {"value": "[parameters(\'existingVnetLocation\')]"}}}}]}


cli_script
Below is the equivalent Azure CLI script based on the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Assign template parameter values to variables\nexistingDataFactoryName="zytest"\nGatewayName="zytest"\nadminUsername="zytest"\nadminPassword="zytest"\nexistingVirtualNetworkName="zytest"\nexistingVnetLocation="zytest"\nexistingVnetResourceGroupName="zytest"\nexistingSubnetInYourVnet="zytest"\nenableToSetDataStoreFromInternet="yes"\n_artifactsLocation="https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-with-data-management-gateway/"\n_artifactsLocationSasToken=""\n\n# Create Data Factory Gateway\naz datafactory gateway create \\\n    --factory-name $existingDataFactoryName \\\n    --gateway-name $GatewayName \\\n    --resource-group $existingVnetResourceGroupName \\\n    --location $existingVnetLocation \\\n    --properties description="my gateway"\n\n# Calculate storage account name and other variables\nprefix=$(echo $GatewayName | cut -d \'-\' -f 1)\nvirtualMachineName=$(echo "vm-$prefix" | cut -c 1-15)\nstorageAccountName=$(echo "${prefix,,}$(echo -n $existingVnetResourceGroupName$virtualMachineName | md5sum | head -c 24)")\nnsgTemplateName="${virtualMachineName}NSGTemplate"\nnsglink="${_artifactsLocation}nested/${enableToSetDataStoreFromInternet}IncomingRemote.json${_artifactsLocationSasToken}"\nscriptURL="${_artifactsLocation}scripts/gatewayInstall.ps1${_artifactsLocationSasToken}"\n\n# Create Storage Account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $existingVnetLocation \\\n    --resource-group $existingVnetResourceGroupName \\\n    --sku Standard_LRS \\\n    --kind Storage \\\n    --tags vmname=$virtualMachineName\n\n# Create Network Interface\nnicName="${virtualMachineName}Nic"\npublicIPAddressName="${virtualMachineName}-ip"\nnetworkSecurityGroupName="${virtualMachineName}nsg"\n\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --resource-group $existingVnetResourceGroupName \\\n    --location $existingVnetLocation\n\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --resource-group $existingVnetResourceGroupName \\\n    --location $existingVnetLocation \\\n    --allocation-method Dynamic\n\naz network nic create \\\n    --name $nicName \\\n    --resource-group $existingVnetResourceGroupName \\\n    --location $existingVnetLocation \\\n    --subnet $existingSubnetInYourVnet \\\n    --vnet-name $existingVirtualNetworkName \\\n    --network-security-group $networkSecurityGroupName \\\n    --public-ip-address $publicIPAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --name $virtualMachineName \\\n    --resource-group $existingVnetResourceGroupName \\\n    --location $existingVnetLocation \\\n    --nics $nicName \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --image Win2016Datacenter \\\n    --size Standard_A3 \\\n    --storage-sku StandardSSD_LRS \\\n    --tags vmname=$virtualMachineName\n\n# Create VM Extension for Data Management Gateway Installation\naz vm extension set \\\n    --vm-name $virtualMachineName \\\n    --name CustomScriptExtension \\\n    --publisher Microsoft.Compute \\\n    --resource-group $existingVnetResourceGroupName \\\n    --settings "{\\"fileUris\\": [\\"$scriptURL\\"]}" \\\n    --protected-settings "{\\"commandToExecute\\": \\"powershell.exe -ExecutionPolicy Unrestricted -File gatewayInstall.ps1 $(az datafactory gateway list-auth-keys --factory-name $existingDataFactoryName --gateway-name $GatewayName --resource-group $existingVnetResourceGroupName --query \'authKey1\' -o tsv) $publicIPAddressName $enableToSetDataStoreFromInternet\\"}"\n\n# Deploy Network Security Group Template\naz deployment group create \\\n    --resource-group $existingVnetResourceGroupName \\\n    --template-uri $nsglink \\\n    --parameters vmName=$virtualMachineName \\\n                 networkSecurityGroupName=$networkSecurityGroupName \\\n                 publicIPAddressName=$publicIPAddressName \\\n                 existingVnetLocation=$existingVnetLocation\n```\n\nPlease note that this script assumes that you have already logged in to Azure CLI and set the appropriate subscription. Also, the script assumes the resources are created in the same resource group, and the subnet ID and other resource IDs are correctly constructed. You may need to adjust the script to fit your specific Azure environment and resource names.


verify_result
