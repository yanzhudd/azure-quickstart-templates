arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of vm"}}, "username": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "_artifactsLocation": {"defaultValue": "[deployment().properties.templateLink.uri]", "type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}}, "_artifactsLocationSasToken": {"defaultValue": "", "type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}}, "commandToExecute": {"type": "string", "metadata": {"description": "The command to execute."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"scenarioPrefix": "customscriptLinux", "imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "ubuntuOSVersion": "18.04-LTS", "nicName": "[concat(variables(\'scenarioPrefix\'),\'Nic\')]", "vnetAddressPrefix": "10.0.0.0/16", "subnetName": "[concat(variables(\'scenarioPrefix\'),\'Subnet\')]", "subnetPrefix": "10.0.0.0/24", "publicIPAddressName": "[concat(variables(\'scenarioPrefix\'),\'PublicIp\')]", "publicIPAddressType": "Dynamic", "vmName": "[concat(variables(\'scenarioPrefix\'),\'VM\')]", "virtualNetworkName": "[concat(variables(\'scenarioPrefix\'),\'Vnet\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'username\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"apiVersion": "2020-08-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2020-08-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'vnetAddressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"apiVersion": "2020-07-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'username\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmName\'),\'/installcustomscript\')]", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/\', variables(\'vmName\'))]"], "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/hello.sh\', parameters(\'_artifactsLocationSasToken\')))]"], "commandToExecute": "[parameters(\'commandToExecute\')]"}}}]}


cli_script
```bash\n#!/bin/bash\n\n# Define the parameters as variables\nvmSize="Standard_D2s_v3"\nusername="zytest"\ndnsNameForPublicIP="zytest"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\ncommandToExecute="zytest"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Define the variables\nscenarioPrefix="customscriptLinux"\nimagePublisher="Canonical"\nimageOffer="UbuntuServer"\nubuntuOSVersion="18.04-LTS"\nnicName="${scenarioPrefix}Nic"\nvnetAddressPrefix="10.0.0.0/16"\nsubnetName="${scenarioPrefix}Subnet"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressName="${scenarioPrefix}PublicIp"\npublicIPAddressType="Dynamic"\nvmName="${scenarioPrefix}VM"\nvirtualNetworkName="${scenarioPrefix}Vnet"\n# Since subnetRef is a resourceId, it will be constructed within the CLI commands.\n\n# Create a public IP address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --allocation-method $publicIPAddressType \\\n    --dns-name $dnsNameForPublicIP\n\n# Create a virtual network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --address-prefix $vnetAddressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create a network interface\nsubnetId=$(az network vnet subnet show --name $subnetName --vnet-name $virtualNetworkName --resource-group <ResourceGroupName> --query id -o tsv)\npublicIpId=$(az network public-ip show --name $publicIPAddressName --resource-group <ResourceGroupName> --query id -o tsv)\naz network nic create \\\n    --name $nicName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --subnet $subnetId \\\n    --public-ip-address $publicIpId\n\n# Create a virtual machine\nsshKeyPath="/home/$username/.ssh/authorized_keys"\nif [ "$authenticationType" == "sshPublicKey" ]; then\n    linuxConfiguration="{\\"disablePasswordAuthentication\\": true, \\"ssh\\": {\\"publicKeys\\": [{\\"path\\": \\"$sshKeyPath\\", \\"keyData\\": \\"$adminPasswordOrKey\\"}]}}"\nelse\n    linuxConfiguration="null"\nfi\n\naz vm create \\\n    --name $vmName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --nics $nicName \\\n    --size $vmSize \\\n    --image $imagePublisher:$imageOffer:$ubuntuOSVersion:latest \\\n    --admin-username $username \\\n    --authentication-type $authenticationType \\\n    --ssh-key-values "$adminPasswordOrKey" \\\n    --custom-data <PathToCustomDataFile> \\\n    --os-disk-caching ReadWrite \\\n    --no-wait\n\n# Create VM extension for custom script\nfileUri=$(printf \'%s/scripts/hello.sh%s\' "$_artifactsLocation" "$_artifactsLocationSasToken")\naz vm extension set \\\n    --publisher "Microsoft.Azure.Extensions" \\\n    --version "2.0" \\\n    --name "CustomScript" \\\n    --vm-name $vmName \\\n    --resource-group <ResourceGroupName> \\\n    --settings "{\\"fileUris\\": [\\"$fileUri\\"], \\"commandToExecute\\": \\"$commandToExecute\\"}"\n```\n\nPlease replace `<ResourceGroupName>` with your actual resource group name, and `<PathToCustomDataFile>` with the path to your custom data file if needed. The script above assumes that you are using SSH public key authentication; if you are using a password instead, you will need to adjust the `--authentication-type` and related parameters accordingly. Also, note that the `_artifactsLocation` variable is expected to be replaced at runtime with the actual deployment location URI.


verify_result
