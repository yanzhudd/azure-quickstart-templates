arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."}, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "minValue": 3, "maxValue": 100, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(parameters(\'vmssName\'), \'vnet\')]", "publicIPAddressName": "[concat(parameters(\'vmssName\'), \'pip\')]", "subnetName": "[concat(parameters(\'vmssName\'), \'subnet\')]", "loadBalancerName": "[concat(parameters(\'vmssName\'), \'lb\')]", "natPoolName": "[concat(parameters(\'vmssName\'), \'natpool\')]", "bePoolName": "[concat(parameters(\'vmssName\'), \'bepool\')]", "natStartPort": 50000, "natEndPort": 50120, "natBackendPort": 22, "nicName": "[concat(parameters(\'vmssName\'), \'nic\')]", "ipConfigName": "[concat(parameters(\'vmssName\'), \'ipconfig\')]", "osType": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "16.04-LTS", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-08-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-11-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'vmssName\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-11-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-03-30", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "false", "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadOnly", "createOption": "FromImage"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[parameters(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "publicipaddressconfiguration": {"name": "pub1", "properties": {"idleTimeoutInMinutes": 15}}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools/\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools/\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}]}}]}}]}}}}]}


cli_script
Below is the translated Azure CLI script based on the provided ARM template and parameters. Note that the ARM template has been simplified for translation, and the Azure CLI script is structured to reflect the resources and their dependencies as defined in the ARM template.\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmSku="Standard_D2_v3"\nvmssName="zytest"\ninstanceCount=3\nadminUsername="zytest"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Variables\naddressPrefix="10.0.0.0/16"\nsubnetPrefix="10.0.0.0/24"\nvirtualNetworkName="${vmssName}vnet"\npublicIPAddressName="${vmssName}pip"\nsubnetName="${vmssName}subnet"\nloadBalancerName="${vmssName}lb"\nnatPoolName="${vmssName}natpool"\nbePoolName="${vmssName}bepool"\nnatStartPort=50000\nnatEndPort=50120\nnatBackendPort=22\nnicName="${vmssName}nic"\nipConfigName="${vmssName}ipconfig"\nosTypePublisher="Canonical"\nosTypeOffer="UbuntuServer"\nosTypeSku="16.04-LTS"\nosTypeVersion="latest"\ndisablePasswordAuthentication=true\nsshPath="/home/${adminUsername}/.ssh/authorized_keys"\nsshKeyData="${adminPasswordOrKey}"\n\n# Create virtual network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create public IP address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $vmssName\n\n# Create load balancer\naz network lb create \\\n    --name $loadBalancerName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --frontend-ip-name LoadBalancerFrontEnd \\\n    --public-ip-address $publicIPAddressName \\\n    --backend-pool-name $bePoolName\n\n# Create inbound NAT pool\naz network lb inbound-nat-pool create \\\n    --resource-group myResourceGroup \\\n    --lb-name $loadBalancerName \\\n    --name $natPoolName \\\n    --protocol Tcp \\\n    --frontend-port-range-start $natStartPort \\\n    --frontend-port-range-end $natEndPort \\\n    --backend-port $natBackendPort \\\n    --frontend-ip-name LoadBalancerFrontEnd\n\n# Create virtual machine scale set\naz vmss create \\\n    --name $vmssName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --vm-sku $vmSku \\\n    --instance-count $instanceCount \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --admin-password $adminPasswordOrKey \\\n    --image Canonical:UbuntuServer:16.04-LTS:latest \\\n    --upgrade-policy-mode Manual \\\n    --overprovision false \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --public-ip-per-vm \\\n    --public-ip-address-dns-name $vmssName \\\n    --lb $loadBalancerName \\\n    --backend-pool-name $bePoolName \\\n    --nat-pool $natPoolName \\\n    --ssh-key-value $sshKeyData\n```\n\nPlease replace `myResourceGroup` with the actual resource group where you want to deploy these resources. This script assumes that you are deploying to a resource group that already exists.\n\nMake sure to have the Azure CLI installed and logged in to your Azure account before running this script. You can execute this script in a Bash shell, and it will create the resources as defined in the ARM template.


verify_result
