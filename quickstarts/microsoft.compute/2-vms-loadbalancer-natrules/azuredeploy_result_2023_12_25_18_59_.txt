arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Admin username"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password"}, "defaultValue": "zytest"}, "dnsNameforLBIP": {"type": "string", "defaultValue": "uniqueDnsNameforLBIP", "metadata": {"description": "Unique DNS name"}}, "vmNamePrefix": {"type": "string", "defaultValue": "myVM", "metadata": {"description": "VM name prefix"}}, "lbName": {"type": "string", "defaultValue": "myLB", "metadata": {"description": "Load Balancer name"}}, "nicNamePrefix": {"type": "string", "defaultValue": "nic", "metadata": {"description": "Network Interface Name Prefix"}}, "publicIPAddressName": {"type": "string", "defaultValue": "myPublicIP", "metadata": {"description": "Public IP Address Name"}}, "vnetName": {"type": "string", "defaultValue": "myVNET", "metadata": {"description": "VNET name"}}, "imagePublisher": {"type": "string", "defaultValue": "MicrosoftWindowsServer", "metadata": {"description": "Image Publisher"}}, "imageOffer": {"type": "string", "defaultValue": "WindowsServer", "metadata": {"description": "Image Offer"}}, "imageSKU": {"type": "string", "defaultValue": "2012-R2-Datacenter", "metadata": {"description": "Image SKU"}}, "vmSize": {"type": "string", "defaultValue": "Standard_A1", "allowedValues": ["Standard_A0", "Standard_A1", "Standard_A2", "Standard_A3", "Standard_A4"], "metadata": {"description": "VM Size"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Resource location"}}}, "variables": {"storageAccountType": "Standard_LRS", "availabilitySetName": "myAvSet", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet-1", "subnetPrefix": "10.0.0.0/24", "publicIPAddressType": "Dynamic", "numberOfInstances": 2, "storageAccountName": "[uniqueString(resourceGroup().id)]", "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2021-01-01", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}}, {"type": "Microsoft.Compute/availabilitySets", "name": "[variables(\'availabilitySetName\')]", "apiVersion": "2016-04-30-preview", "location": "[parameters(\'location\')]", "properties": {"platformFaultDomainCount": 2, "platformUpdateDomainCount": 2, "managed": true}}, {"apiVersion": "2015-06-15", "type": "Microsoft.Network/publicIPAddresses", "name": "[parameters(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameforLBIP\')]"}}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-08-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {}}, {"apiVersion": "2015-06-15", "type": "Microsoft.Network/virtualNetworks", "name": "[parameters(\'vnetName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-11-01", "type": "Microsoft.Network/networkInterfaces", "name": "[concat(parameters(\'nicNamePrefix\'), copyindex())]", "location": "[parameters(\'location\')]", "copy": {"name": "nicLoop", "count": "[variables(\'numberOfInstances\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers\', parameters(\'lbName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatRules\',parameters(\'lbName\'), concat(\'RDP-VM\', copyIndex()))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'vnetName\'), variables (\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\',parameters(\'lbName\'), \'LoadBalancerBackend\')]"}], "loadBalancerInboundNatRules": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatRules\',parameters(\'lbName\'), concat(\'RDP-VM\', copyIndex()))]"}]}}]}}, {"apiVersion": "2020-11-01", "name": "[parameters(\'lbName\')]", "type": "Microsoft.Network/loadBalancers", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontend", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',parameters(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "LoadBalancerBackend"}]}}, {"apiVersion": "2020-11-01", "type": "Microsoft.Network/loadBalancers/inboundNatRules", "name": "[concat(parameters(\'lbName\'), \'/\', \'RDP-VM\', copyIndex())]", "location": "[parameters(\'location\')]", "copy": {"name": "lbNatLoop", "count": "[variables(\'numberOfInstances\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers\', parameters(\'lbName\'))]"], "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',parameters(\'lbName\'), \'loadBalancerFrontend\')]"}, "protocol": "Tcp", "frontendPort": "[copyIndex(5000)]", "backendPort": 3389, "enableFloatingIP": false}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[concat(parameters(\'vmNamePrefix\'), copyindex())]", "copy": {"name": "virtualMachineLoop", "count": "[variables(\'numberOfInstances\')]"}, "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces\', concat(parameters(\'nicNamePrefix\'), copyindex()))]", "[resourceId(\'Microsoft.Compute/availabilitySets\', variables(\'availabilitySetName\'))]"], "properties": {"availabilitySet": {"id": "[resourceId(\'Microsoft.Compute/availabilitySets\',variables(\'availabilitySetName\'))]"}, "hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[concat(parameters(\'vmNamePrefix\'), copyIndex())]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[parameters(\'imagePublisher\')]", "offer": "[parameters(\'imageOffer\')]", "sku": "[parameters(\'imageSKU\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', concat(parameters(\'nicNamePrefix\'),copyindex()))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'storageAccountName\'), \'2021-01-01\').primaryEndpoints.blob]"}}}}]}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameters. This script creates Azure resources such as storage accounts, availability sets, public IP addresses, network security groups, virtual networks, network interfaces, load balancers, inbound NAT rules, and virtual machines.\n\n```bash\n#!/bin/bash\n\n# Parameters\nadminUsername="zytest"\nadminPassword="zytest"\ndnsNameforLBIP="uniqueDnsNameforLBIP"\nvmNamePrefix="myVM"\nlbName="myLB"\nnicNamePrefix="nic"\npublicIPAddressName="myPublicIP"\nvnetName="myVNET"\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nimageSKU="2012-R2-Datacenter"\nvmSize="Standard_A1"\nlocation="westus"\n\n# Variables\nstorageAccountType="Standard_LRS"\navailabilitySetName="myAvSet"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet-1"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressType="Dynamic"\nnumberOfInstances=2\n# The storage account name is based on a unique string function which is not directly translatable to Azure CLI.\n# You would need to generate a unique name in your script or use a placeholder.\nstorageAccountName=$(az storage account check-name --name myuniquestorageaccountname --query \'nameAvailable\')\nnetworkSecurityGroupName="${subnetName}-nsg"\n\n# Create Storage Account\naz storage account create --name $storageAccountName --location $location --sku $storageAccountType\n\n# Create Availability Set\naz vm availability-set create --name $availabilitySetName --location $location --platform-fault-domain-count 2 --platform-update-domain-count 2 --managed\n\n# Create Public IP Address\naz network public-ip create --name $publicIPAddressName --location $location --allocation-method $publicIPAddressType --dns-name $dnsNameforLBIP\n\n# Create Network Security Group\naz network nsg create --name $networkSecurityGroupName --location $location\n\n# Create Virtual Network and Subnet\naz network vnet create --name $vnetName --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetPrefix\naz network vnet subnet update --vnet-name $vnetName --name $subnetName --network-security-group $networkSecurityGroupName\n\n# Create Load Balancer\naz network lb create --name $lbName --location $location --public-ip-address $publicIPAddressName --frontend-ip-name LoadBalancerFrontend --backend-pool-name LoadBalancerBackend\n\n# Create Inbound NAT Rules for Load Balancer\nfor ((i=0; i<numberOfInstances; i++)); do\n    az network lb inbound-nat-rule create --lb-name $lbName --name RDP-VM$i --protocol Tcp --frontend-port $((5000+i)) --backend-port 3389 --frontend-ip-name LoadBalancerFrontend\ndone\n\n# Create Network Interfaces\nfor ((i=0; i<numberOfInstances; i++)); do\n    az network nic create --name "${nicNamePrefix}${i}" --location $location --vnet-name $vnetName --subnet $subnetName --lb-name $lbName --lb-address-pools LoadBalancerBackend --lb-inbound-nat-rules RDP-VM$i\ndone\n\n# Create Virtual Machines\nfor ((i=0; i<numberOfInstances; i++)); do\n    az vm create --name "${vmNamePrefix}${i}" --location $location --nics "${nicNamePrefix}${i}" --availability-set $availabilitySetName --size $vmSize --admin-username $adminUsername --admin-password $adminPassword --image $imagePublisher:$imageOffer:$imageSKU:latest --generate-ssh-keys\ndone\n```\n\nPlease note that the `storageAccountName` requires a unique name, so you should replace `myuniquestorageaccountname` with a unique name or use a method to generate one. The unique string function from ARM template is not directly translatable to Azure CLI, so you need to handle it in your script.\n\nAlso, the `dependsOn` property from ARM template is implicitly handled in Azure CLI by the order of resource creation in the script. The `copy` loop from the ARM template is translated into bash for-loops to create multiple resources like NICs, inbound NAT rules, and VMs.


verify_result
