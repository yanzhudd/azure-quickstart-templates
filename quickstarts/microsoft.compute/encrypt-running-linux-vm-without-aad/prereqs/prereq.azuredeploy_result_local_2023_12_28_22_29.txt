arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "vmSize": {"type": "string", "defaultValue": "Standard_A4_v2", "metadata": {"description": "VM Size"}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"nicName": "myVMNic", "subnetName": "Subnet", "vmName": "MyLinuxVM", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-08-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {}}, {"apiVersion": "2017-04-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2017-04-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2017-03-30", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18.04-LTS", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": "1023", "lun": 0, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}], "outputs": {"vmName": {"type": "string", "value": "[variables(\'vmName\')]"}}}


cli_script
Below is the translated bash script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Define variables from template parameters\nadminUsername="zytest" # User name for the Virtual Machine.\nlocation="westus" # Location for all resources.\nauthenticationType="sshPublicKey" # Type of authentication to use on the Virtual Machine. SSH key is recommended.\nvmSize="Standard_A4_v2" # VM Size\nadminPasswordOrKey="zytest" # SSH Key or password for the Virtual Machine. SSH key is recommended.\n\n# Define variables from ARM template variables\nnicName="myVMNic"\nsubnetName="Subnet"\nvmName="MyLinuxVM"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="${subnetName}-nsg"\n\n# Create Network Security Group\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --tags \'comment=Simple Network Security Group for subnet $subnetName\'\n\n# Create Virtual Network and Subnet\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --address-prefixes 10.0.0.0/16 \\\n  --subnet-name $subnetName \\\n  --subnet-prefix 10.0.0.0/24 \\\n  --network-security-group $networkSecurityGroupName\n\n# Create Network Interface\naz network nic create \\\n  --name $nicName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetName\n\n# Create Virtual Machine\nif [ "$authenticationType" == "sshPublicKey" ]; then\n  az vm create \\\n    --name $vmName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --nics $nicName \\\n    --image UbuntuLTS \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --ssh-key-value "$adminPasswordOrKey" \\\n    --size $vmSize\nelse\n  az vm create \\\n    --name $vmName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --nics $nicName \\\n    --image UbuntuLTS \\\n    --admin-username $adminUsername \\\n    --admin-password "$adminPasswordOrKey" \\\n    --size $vmSize\nfi\n\n# Output the VM name\necho "VM Name: $vmName"\n```\n\nPlease ensure you replace `<ResourceGroupName>` with the actual name of the resource group where you want to deploy these resources.\n\nKeep in mind that the ARM template provided has a default value for the parameters, which I have used in the script. If you have different parameter values, you should update the script accordingly. Also, the ARM template\'s variables that use functions like `concat` and `resourceId` have been translated to simple variable assignments in the bash script.


verify_result
