arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "WindowsVm", "metadata": {"description": "Name of the VM"}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the VM"}}, "adminUsername": {"type": "string", "metadata": {"description": "Admin Username"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin Password"}, "defaultValue": "zytest"}, "vaultResourceId": {"type": "string", "metadata": {"description": "Resource Group of Key Vault that has a secret - must be of the format /subscriptions/xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/<vaultName>/providers/Microsoft.KeyVault/vaults/<vaultName>"}, "defaultValue": "zytest"}, "secretUrlWithVersion": {"type": "string", "metadata": {"description": "Url of the certificate in Key Vault - the url must be to a base64 encoded secret, not a key or cert: https://<vaultEndpoint>/secrets/<secretName>/<secretVersion>"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"subnet1Ref": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnet1Name\'))]", "nicName": "certNIC", "subnet1Prefix": "10.0.0.0/24", "subnet1Name": "Subnet-1", "virtualNetworkName": "certVNET", "addressPrefix": "10.0.0.0/16", "publicIPName": "certPublicIP", "networkSecurityGroupName": "[concat(variables(\'subnet1Name\'), \'-nsg\')]"}, "resources": [{"apiVersion": "2019-06-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic"}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnet1Name\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-08-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2019-06-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "[variables(\'subnet1Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2019-06-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPName\'))]"}, "subnet": {"id": "[variables(\'subnet1Ref\')]"}}}]}}, {"apiVersion": "2019-07-01", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "secrets": [{"sourceVault": {"id": "[parameters(\'vaultResourceId\')]"}, "vaultCertificates": [{"certificateUrl": "[parameters(\'secretUrlWithVersion\')]", "certificateStore": "My"}]}]}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2019-Datacenter", "version": "latest"}, "osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}}}]}


cli_script
Based on the provided ARM template and parameters, here is the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmName="WindowsVm"\nvmSize="Standard_D2s_v3"\nadminUsername="zytest"\nadminPassword="zytest" # Please replace with a secure method to handle the password\nvaultResourceId="zytest"\nsecretUrlWithVersion="zytest"\nlocation="westus"\n\n# Variables\nnicName="certNIC"\nsubnet1Prefix="10.0.0.0/24"\nsubnet1Name="Subnet-1"\nvirtualNetworkName="certVNET"\naddressPrefix="10.0.0.0/16"\npublicIPName="certPublicIP"\nnetworkSecurityGroupName="${subnet1Name}-nsg"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPName \\\n    --location $location \\\n    --allocation-method Dynamic\n\n# Create Network Security Group and Rule\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name default-allow-3389 \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --destination-port-ranges 3389 \\\n    --protocol Tcp \\\n    --source-address-prefix "*" \\\n    --source-port-range "*" \\\n    --destination-address-prefix "*"\n\n# Create Virtual Network and Subnet\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnet1Name \\\n    --subnet-prefix $subnet1Prefix \\\n    --network-security-group $networkSecurityGroupName\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnet1Name \\\n    --public-ip-address $publicIPName\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --size $vmSize \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --image MicrosoftWindowsServer:WindowsServer:2019-Datacenter:latest \\\n    --os-disk-caching ReadWrite \\\n    --authentication-type password \\\n    --no-wait\n\n# Add Secret to VM (This step requires additional commands to retrieve the secret and apply it to the VM)\n# Please note that Azure CLI currently does not support adding secrets to VM directly in the command.\n# You would need to use a custom script extension or other method to configure the VM with the secret from Key Vault.\n```\n\nPlease note that the `adminPassword` should not be handled in plain text in a script. You should use a secure method to handle the password, such as using Azure Key Vault or environment variables.\n\nThe last part of the ARM template, which adds a secret to the virtual machine from Key Vault, cannot be translated directly to an Azure CLI command as the Azure CLI does not currently support this operation directly. You would need to use a custom script extension or another method to apply the secret to the VM after it has been created.


verify_result
