arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "suseOSVersion": {"type": "string", "defaultValue": "sles-15-sp2", "allowedValues": ["sles-15-sp2", "sles-15-sp1", "sles-12-sp5"], "metadata": {"description": "The SLES version for the VM. This will pick the latest available image of this given SLES version."}}, "vmSize": {"type": "string", "metadata": {"description": "Size of the virtual machine"}, "defaultValue": "Standard_D2_v3"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"storageAccountName": "[concat(uniquestring(resourceGroup().id), \'slesvm\')]", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "publicIPAddressName": "myPublicIP", "vmName": "MySUSEVM", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2019-06-01", "name": "[variables(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage"}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-05-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-05-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-05-01", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]", "[variables(\'virtualNetworkName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2019-12-01", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'storageAccountName\')]", "[variables(\'nicName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "SUSE", "offer": "[parameters(\'suseOSVersion\')]", "sku": "gen1", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'vmName\'),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": 100, "lun": 0, "name": "[concat(variables(\'vmName\'),\'_DataDisk1\')]", "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\')), \'2019-06-01\').primaryEndpoints.blob]"}}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
Based on the provided ARM template and template parameters, here is the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Declare variables from template parameters\nadminUsername="zytest" # Default value, update if different\ndnsLabelPrefix="zytest" # Default value, update if different\nsuseOSVersion="sles-15-sp2" # Default value, update if different\nvmSize="Standard_D2_v3" # Default value, update if different\nlocation="westus" # Default value, update if different\nauthenticationType="sshPublicKey" # Default value, update if different\nadminPasswordOrKey="zytest" # Default value, update if different\n\n# Generate a unique storage account name based on the resource group\'s unique ID\nstorageAccountName=$(az group show --name myResourceGroup --query id --output tsv | sha1sum | cut -c1-24)\'slesvm\'\n\n# Other variables\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressName="myPublicIP"\nvmName="MySUSEVM"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="${subnetName}-nsg"\n\n# Create a storage account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --kind Storage\n\n# Create a public IP address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $dnsLabelPrefix\n\n# Create Network Security Group and rule\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name default-allow-22 \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --destination-port-ranges 22 \\\n    --protocol Tcp \\\n    --source-address-prefix \'*\' \\\n    --source-port-range \'*\' \\\n    --destination-address-prefix \'*\'\n\n# Create Virtual Network and Subnet\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Associate NSG to Subnet\naz network vnet subnet update \\\n    --vnet-name $virtualNetworkName \\\n    --name $subnetName \\\n    --network-security-group $networkSecurityGroupName\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --subnet $subnetName \\\n    --vnet-name $virtualNetworkName \\\n    --public-ip-address $publicIPAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --image SUSE:$suseOSVersion:gen1:latest \\\n    --size $vmSize \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --ssh-key-values "$adminPasswordOrKey" \\\n    --storage-sku Standard_LRS\n\n# Output hostname and ssh command\npublicIP=$(az network public-ip show --name $publicIPAddressName --query ipAddress --output tsv)\necho "Hostname: ${publicIP}"\necho "SSH Command: ssh ${adminUsername}@${publicIP}"\n```\n\nPlease note that the script assumes you have already logged in to Azure CLI and set the correct subscription context. You may need to update the default values of the parameters if they are different in your actual deployment. Also, the storage account name generation logic is simplified and might need to be adjusted according to your specific requirements.


verify_result
