arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Username of the administrator of the VM"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password of the administrator of the VM"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location of the resources"}}, "vmssSku": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the VM"}}, "vmssName": {"type": "string", "metadata": {"description": "Name of the VMSS"}, "defaultValue": "zytest"}}, "variables": {"virtualNetworkName": "[concat(parameters(\'vmssName\'), \'vnet\')]", "publicIPAddressName": "[concat(parameters(\'vmssName\'), \'pip\')]", "subnetName": "[concat(parameters(\'vmssName\'), \'subnet\')]", "loadBalancerName": "[concat(parameters(\'vmssName\'), \'lb\')]", "natPoolName": "[concat(parameters(\'vmssName\'), \'natpool\')]", "bePoolName": "[concat(parameters(\'vmssName\'), \'bepool\')]"}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-11-01", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-11-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[toLower(parameters(\'vmssName\'))]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-11-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50119, "backendPort": 3389}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-12-01", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "identity": {"type": "SystemAssigned"}, "sku": {"name": "[parameters(\'vmssSku\')]", "tier": "Standard", "capacity": 2}, "properties": {"overprovision": true, "upgradePolicy": {"mode": "Automatic"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage"}, "imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2012-R2-Datacenter", "version": "latest"}}, "osProfile": {"computerNamePrefix": "existvmss", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[concat(parameters(\'vmssName\'), \'nic\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[concat(parameters(\'vmssName\'), \'ipconfig\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}]}}]}}]}}}}], "outputs": {"vmssName": {"type": "string", "value": "[parameters(\'vmssName\')]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nadminUsername="zytest"\nadminPassword="zytest"\nlocation="westus"\nvmssSku="Standard_D2s_v3"\nvmssName="zytest"\n\n# Define variables\nvirtualNetworkName="${vmssName}vnet"\npublicIPAddressName="${vmssName}pip"\nsubnetName="${vmssName}subnet"\nloadBalancerName="${vmssName}lb"\nnatPoolName="${vmssName}natpool"\nbePoolName="${vmssName}bepool"\n\n# Create virtual network\naz network vnet create --name $virtualNetworkName --resource-group $resourceGroupName --location $location --address-prefix 10.0.0.0/16 --subnet-name $subnetName --subnet-prefix 10.0.0.0/24\n\n# Create public IP address\naz network public-ip create --name $publicIPAddressName --resource-group $resourceGroupName --location $location --allocation-method Dynamic --dns-name $vmssName\n\n# Create load balancer\naz network lb create --name $loadBalancerName --resource-group $resourceGroupName --location $location --frontend-ip-name LoadBalancerFrontEnd --public-ip-address $publicIPAddressName --backend-pool-name $bePoolName\n\n# Create NAT pool\naz network lb inbound-nat-pool create --name $natPoolName --resource-group $resourceGroupName --lb-name $loadBalancerName --protocol Tcp --frontend-port-range-start 50000 --frontend-port-range-end 50119 --backend-port 3389\n\n# Create virtual machine scale set\naz vmss create --name $vmssName --resource-group $resourceGroupName --location $location --vm-sku $vmssSku --instance-count 2 --admin-username $adminUsername --admin-password $adminPassword --image MicrosoftWindowsServer:WindowsServer:2012-R2-Datacenter:latest --vnet-name $virtualNetworkName --subnet $subnetName --public-ip-address $publicIPAddressName --load-balancer $loadBalancerName --backend-pool-name $bePoolName --nat-pool-name $natPoolName\n\n# Output vmssName\necho $vmssName\n```\n\nPlease replace `$resourceGroupName` with your actual resource group name.


verify_result
