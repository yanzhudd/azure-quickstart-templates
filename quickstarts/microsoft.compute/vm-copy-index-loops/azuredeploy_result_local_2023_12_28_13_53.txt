arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Admin username for VM"}, "defaultValue": "zytest"}, "numberOfInstances": {"type": "int", "defaultValue": 4, "minValue": 2, "maxValue": 398, "metadata": {"description": "Number of VMs to deploy, limit 398 since there is an 800 resource limit for a single template deployment"}}, "OS": {"type": "string", "defaultValue": "Ubuntu", "allowedValues": ["Ubuntu", "Windows"], "metadata": {"description": "OS Platform for the VM"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "description"}}}, "variables": {"virtualNetworkName": "VNET", "addressPrefix": "10.0.0.0/16", "subnet1Name": "Subnet-1", "subnet2Name": "Subnet-2", "subnet1Prefix": "10.0.0.0/24", "subnet2Prefix": "10.0.1.0/24", "subnet1Ref": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'),variables(\'subnet1Name\'))]", "subnet2Ref": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'),variables(\'subnet2Name\'))]", "availabilitySetName": "AvSet", "imageReference": {"Ubuntu": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18.04-LTS", "version": "latest"}, "Windows": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2019-Datacenter", "version": "latest"}}, "networkSecurityGroupName": "default-NSG", "nsgOsPort": {"Ubuntu": "22", "Windows": "3389"}, "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Compute/availabilitySets", "name": "[concat(variables(\'availabilitySetName\'), \'-\', copyIndex())]", "apiVersion": "2020-06-01", "location": "[parameters(\'location\')]", "copy": {"name": "asLoop", "count": 2}, "properties": {"platformFaultDomainCount": 2, "platformUpdateDomainCount": 2}, "sku": {"name": "Aligned"}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "[concat(\'default-allow-\', variables(\'nsgOsPort\')[parameters(\'OS\')])]", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "[variables(\'nsgOsPort\')[parameters(\'OS\')]]", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "[variables(\'subnet1Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}, {"name": "[variables(\'subnet2Name\')]", "properties": {"addressPrefix": "[variables(\'subnet2Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"type": "Microsoft.Network/networkInterfaces", "name": "[concat(\'nic\', copyindex())]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "copy": {"name": "nicLoop", "count": "[parameters(\'numberOfInstances\')]"}, "dependsOn": ["[variables(\'virtualNetworkName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[if(equals(mod(copyIndex(), 2),0), variables(\'subnet1Ref\'), variables(\'subnet2Ref\'))]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "name": "[concat(\'myvm\', copyIndex())]", "apiVersion": "2020-06-01", "location": "[parameters(\'location\')]", "copy": {"name": "virtualMachineLoop", "count": "[parameters(\'numberOfInstances\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', concat(\'nic\', copyIndex()))]", "asLoop"], "properties": {"availabilitySet": {"id": "[resourceId(\'Microsoft.Compute/availabilitySets\', concat(variables(\'availabilitySetName\'), \'-\', mod(copyIndex(),2)))]"}, "hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[concat(\'vm\', copyIndex())]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": "[variables(\'imageReference\')[parameters(\'OS\')]]", "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', concat(\'nic\', copyindex()))]"}]}}}]}


cli_script
Based on the ARM template and parameters provided, here is the equivalent Azure CLI script written as a Bash script:\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nadminUsername="zytest"\nnumberOfInstances=4\nOS="Ubuntu"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nvmSize="Standard_A1_v2"\n\n# Variables\nvirtualNetworkName="VNET"\naddressPrefix="10.0.0.0/16"\nsubnet1Name="Subnet-1"\nsubnet2Name="Subnet-2"\nsubnet1Prefix="10.0.0.0/24"\nsubnet2Prefix="10.0.1.0/24"\navailabilitySetName="AvSet"\nnetworkSecurityGroupName="default-NSG"\nnsgOsPort_Ubuntu="22"\nnsgOsPort_Windows="3389"\n\n# Image reference per OS type\nimagePublisher_Ubuntu="Canonical"\nimageOffer_Ubuntu="UbuntuServer"\nimageSku_Ubuntu="18.04-LTS"\nimageVersion_Ubuntu="latest"\nimagePublisher_Windows="MicrosoftWindowsServer"\nimageOffer_Windows="WindowsServer"\nimageSku_Windows="2019-Datacenter"\nimageVersion_Windows="latest"\n\n# Create availability sets\nfor i in $(seq 1 2); do\n  az vm availability-set create \\\n    --name "${availabilitySetName}-${i}" \\\n    --resource-group <ResourceGroup> \\\n    --location $location \\\n    --platform-fault-domain-count 2 \\\n    --platform-update-domain-count 2 \\\n    --sku Aligned\ndone\n\n# Create network security group\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --resource-group <ResourceGroup> \\\n  --location $location\n\n# Add security rule to the NSG\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --resource-group <ResourceGroup> \\\n  --name "default-allow-${nsgOsPort_Ubuntu}" \\\n  --priority 1000 \\\n  --access Allow \\\n  --direction Inbound \\\n  --destination-port-ranges $nsgOsPort_Ubuntu \\\n  --protocol Tcp \\\n  --source-address-prefix \'*\' \\\n  --source-port-range \'*\' \\\n  --destination-address-prefix \'*\'\n\n# Create virtual network\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --resource-group <ResourceGroup> \\\n  --location $location \\\n  --address-prefix $addressPrefix \\\n  --subnet-name $subnet1Name \\\n  --subnet-prefix $subnet1Prefix \\\n  --network-security-group $networkSecurityGroupName\n\n# Add second subnet to the virtual network\naz network vnet subnet create \\\n  --name $subnet2Name \\\n  --resource-group <ResourceGroup> \\\n  --vnet-name $virtualNetworkName \\\n  --address-prefix $subnet2Prefix \\\n  --network-security-group $networkSecurityGroupName\n\n# Create network interfaces and virtual machines\nfor i in $(seq 1 $numberOfInstances); do\n  subnetRef=$([ $((i % 2)) -eq 0 ] && echo $subnet1Name || echo $subnet2Name)\n  \n  # Create network interface\n  az network nic create \\\n    --name "nic${i}" \\\n    --resource-group <ResourceGroup> \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetRef\n  \n  # Determine the availability set index\n  avSetIndex=$(($i % 2))\n  \n  # Create the virtual machine\n  az vm create \\\n    --name "myvm${i}" \\\n    --resource-group <ResourceGroup> \\\n    --location $location \\\n    --nics "nic${i}" \\\n    --availability-set "${availabilitySetName}-${avSetIndex}" \\\n    --size $vmSize \\\n    --image "${imagePublisher_Ubuntu}:${imageOffer_Ubuntu}:${imageSku_Ubuntu}:${imageVersion_Ubuntu}" \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --ssh-key-value "$adminPasswordOrKey"\ndone\n```\n\nPlease replace `<ResourceGroup>` with the name of your Azure resource group where these resources should be deployed. Note that the script assumes the use of Ubuntu as the OS for all VMs, and the use of SSH public key authentication. If you want to support Windows or password authentication, you will need to adjust the script accordingly. Also, the script does not include any error checking or advanced features such as idempotency or output handling, which should be considered for production use.


verify_result
