arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.22.6.54827", "templateHash": "1864719808904770163"}}, "parameters": {"dnsLabelPrefix": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "customData": {"type": "string", "defaultValue": "echo customData", "metadata": {"description": "String passed down to the Virtual Machine."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "VM size"}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "18.04-LTS", "allowedValues": ["14.04-LTS", "16.04-LTS", "18.04-LTS", "20.04-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04-LTS,16.04-LTS,18.04-LTS,20.04-LTS."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"storageAccountName": "[format(\'{0}sacustmdata\', uniqueString(resourceGroup().id))]", "imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "nicName": "networkInterface1", "vmName": "vm1", "virtualNetworkName": "virtualNetwork1", "publicIPAddressName": "publicIp1", "addressPrefix": "10.0.0.0/16", "subnet1Name": "Subnet-1", "subnet1Prefix": "10.0.0.0/24", "publicIPAddressType": "Dynamic", "storageAccountType": "Standard_LRS", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[format(\'/home/{0}/.ssh/authorized_keys\', parameters(\'adminUsername\'))]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "default-NSG"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2023-01-01", "name": "[variables(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "kind": "StorageV2", "sku": {"name": "[variables(\'storageAccountType\')]"}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2023-05-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2023-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2023-05-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "[variables(\'subnet1Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2023-05-01", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnet1Name\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2023-07-01", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "customData": "[base64(parameters(\'customData\'))]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), null(), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\')), \'2023-01-01\').primaryEndpoints.blob]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]", "[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))]"]}]}


cli_script
Based on the provided ARM template and parameters, here is the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Parameters\ndnsLabelPrefix="zytest"\nadminUsername="zytest"\ncustomData="echo customData"\nvmSize="Standard_D2_v3"\nubuntuOSVersion="18.04-LTS"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Variables (ARM template variables are not directly translatable to CLI variables, so they are omitted or replaced with actual names where possible)\nstorageAccountName="uniqueStorageAccountName" # Replace with actual unique storage account name\nnicName="networkInterface1"\nvmName="vm1"\nvirtualNetworkName="virtualNetwork1"\npublicIPAddressName="publicIp1"\nsubnet1Name="Subnet-1"\n\n# Create a storage account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $location \\\n    --kind StorageV2 \\\n    --sku Standard_LRS\n\n# Create a public IP address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $dnsLabelPrefix\n\n# Create a network security group and rule\naz network nsg create \\\n    --name default-NSG \\\n    --location $location\n\naz network nsg rule create \\\n    --nsg-name default-NSG \\\n    --name default-allow-22 \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --protocol Tcp \\\n    --destination-port-range 22 \\\n    --source-address-prefix \'*\' \\\n    --destination-address-prefix \'*\' \\\n    --location $location\n\n# Create a virtual network and subnet\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix "10.0.0.0/16" \\\n    --subnet-name $subnet1Name \\\n    --subnet-prefix "10.0.0.0/24"\n\naz network vnet subnet update \\\n    --vnet-name $virtualNetworkName \\\n    --name $subnet1Name \\\n    --network-security-group default-NSG\n\n# Create a network interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnet1Name \\\n    --public-ip-address $publicIPAddressName\n\n# Create a virtual machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --image Canonical:UbuntuServer:$ubuntuOSVersion:latest \\\n    --size $vmSize \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --ssh-key-value "$adminPasswordOrKey" \\\n    --custom-data "$customData" \\\n    --generate-ssh-keys\n```\n\nPlease note the following:\n- The storage account name must be unique, so you will need to generate or provide a unique name instead of using the placeholder `uniqueStorageAccountName`.\n- The `--generate-ssh-keys` option is used to automatically generate SSH keys if they do not exist. If you already have SSH keys, you can remove this option and provide the path to your public key file with `--ssh-key-value`.\n- The `customData` is passed directly to the `--custom-data` option in the `az vm create` command.\n- The `--authentication-type` is set to `sshPublicKey` by default, and the `adminPasswordOrKey` variable is used as the SSH key value.\n- The script assumes that the commands are executed with the necessary permissions and that the Azure CLI is installed and logged in to the appropriate account.


verify_result
