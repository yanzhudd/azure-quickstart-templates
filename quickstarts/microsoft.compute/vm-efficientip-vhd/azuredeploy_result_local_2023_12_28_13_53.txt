arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the VM"}, "defaultValue": "zytest"}, "osType": {"type": "string", "defaultValue": "Linux", "allowedValues": ["Linux"], "metadata": {"description": "Type of OS on the existing vhd"}}, "osDiskVhdUri": {"type": "string", "metadata": {"description": "URI of the existing VHD in ARM standard or premium storage"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "Size of the VM"}}, "vmDiskSizeGB": {"type": "string", "defaultValue": "150", "allowedValues": ["150", "300"], "metadata": {"description": "Diskspace size of the VM"}}, "existingVirtualNetworkResourceGroup": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "Name of the existing VNET resource group"}}, "existingVirtualNetworkName": {"type": "string", "metadata": {"description": "Name of the existing VNET"}, "defaultValue": "zytest"}, "subnetName": {"type": "string", "metadata": {"description": "Name of the subnet in the virtual network you want to use"}, "defaultValue": "zytest"}, "existingSecurityGroupName": {"type": "string", "metadata": {"description": "Name of the network Security Group that needs to be assocated to virtual NIC. "}, "defaultValue": "zytest"}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"diagStorageAccountName": "[concat(uniquestring(resourceGroup().id), \'specvm\')]", "publicIPAddressType": "Dynamic", "subnetRef": "[resourceId(parameters(\'existingVirtualNetworkResourceGroup\'), \'Microsoft.Network/virtualNetworks/subnets\', parameters(\'existingVirtualNetworkName\'),  parameters(\'subnetName\'))]", "nicName": "[parameters(\'vmName\')]", "publicIPAddressName": "[parameters(\'vmName\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'diagStorageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_GRS"}, "kind": "Storage", "properties": {}}, {"apiVersion": "2015-06-15", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "PublicIPAddress"}, "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2017-03-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "tags": {"displayName": "NetworkInterface"}, "properties": {"networkSecurityGroup": {"id": "[resourceId(parameters(\'existingVirtualNetworkResourceGroup\'), \'Microsoft.Network/networkSecurityGroups\', parameters(\'existingSecurityGroupName\'))]"}, "ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/disks", "apiVersion": "2017-03-30", "name": "[concat(parameters(\'vmName\'), \'_OSdisk\')]", "location": "[parameters(\'location\')]", "properties": {"creationData": {"createOption": "Import", "sourceUri": "[parameters(\'osDiskVhdUri\')]"}, "osType": "[parameters(\'osType\')]"}}, {"apiVersion": "2017-03-30", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "VirtualMachine"}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]", "[resourceId(\'Microsoft.Compute/disks\', concat(parameters(\'vmName\'), \'_OSdisk\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "storageProfile": {"osDisk": {"osType": "[parameters(\'osType\')]", "caching": "ReadWrite", "managedDisk": {"id": "[resourceId(\'Microsoft.Compute/disks\', concat(parameters(\'vmName\'), \'_OSdisk\'))]"}, "createOption": "Attach", "diskSizeGB": "[parameters(\'vmDiskSizeGB\')]"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'diagStorageAccountName\')), \'2020-08-01-preview\').primaryEndpoints.blob]"}}}}]}


cli_script
Here is the equivalent Azure CLI script based on the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameter variables\nvmName="zytest"\nosType="Linux"\nosDiskVhdUri="zytest"\nvmSize="Standard_A1_v2"\nvmDiskSizeGB="150"\nexistingVirtualNetworkResourceGroup=$(az group show --query name --output tsv)\nexistingVirtualNetworkName="zytest"\nsubnetName="zytest"\nexistingSecurityGroupName="zytest"\ndnsNameForPublicIP="zytest"\nlocation="westus"\n\n# Variable for the diagnostics storage account name\ndiagStorageAccountName=$(az storage account list --query "[?contains(name,\'specvm\')].name" --output tsv)\n\n# Network variables\npublicIPAddressType="Dynamic"\nsubnetRef=$(az network vnet subnet show --resource-group $existingVirtualNetworkResourceGroup --vnet-name $existingVirtualNetworkName --name $subnetName --query id --output tsv)\nnicName=$vmName\npublicIPAddressName=$vmName\n\n# Create Storage Account for diagnostics\naz storage account create \\\n    --name $diagStorageAccountName \\\n    --location $location \\\n    --sku Standard_GRS \\\n    --kind Storage\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method $publicIPAddressType \\\n    --dns-name $dnsNameForPublicIP \\\n    --tags displayName=PublicIPAddress\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --subnet $subnetRef \\\n    --public-ip-address $publicIPAddressName \\\n    --network-security-group $existingSecurityGroupName \\\n    --tags displayName=NetworkInterface\n\n# Create Disk from existing VHD\naz disk create \\\n    --name "${vmName}_OSdisk" \\\n    --location $location \\\n    --os-type $osType \\\n    --source $osDiskVhdUri \\\n    --create-option Import\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --tags displayName=VirtualMachine \\\n    --size $vmSize \\\n    --nics $nicName \\\n    --attach-os-disk "${vmName}_OSdisk" \\\n    --os-type $osType \\\n    --storage-sku Standard_LRS\n\n# Enable Boot Diagnostics\nstorageUri=$(az storage account show --name $diagStorageAccountName --query "primaryEndpoints.blob" --output tsv)\naz vm boot-diagnostics enable \\\n    --name $vmName \\\n    --storage $storageUri\n```\n\nPlease note that the diagnostics storage account name is generated based on the unique string of the resource group ID. Since we don\'t have access to the actual Azure environment, I used a placeholder command to retrieve an existing storage account name that contains \'specvm\'. You\'ll need to replace this with the actual logic for generating or retrieving the diagnostics storage account name.\n\nAlso, the subnet reference is retrieved using the Azure CLI command. If the subnet does not exist, you\'ll need to create it before running this script.\n\nMake sure to replace any placeholders or default values with the actual values that you want to use in your deployment.


verify_result
