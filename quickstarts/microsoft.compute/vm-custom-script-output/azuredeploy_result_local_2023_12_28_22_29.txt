arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["password", "sshPublicKey"], "metadata": {"description": "Authentication type"}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "OS Admin password or SSH Key depending on value of authentication type"}, "defaultValue": "zytest"}, "location": {"type": "string", "metadata": {"description": "The Location For the resources"}, "defaultValue": "westus"}, "vmSize": {"type": "string", "metadata": {"description": "The size of the VM to create"}, "defaultValue": "Standard_D2s_v3"}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation."}, "defaultValue": ""}, "operatingSystem": {"type": "string", "defaultValue": "UbuntuServer_18.04-LTS", "metadata": {"description": "Operating system to use for the virtual machine."}, "allowedValues": ["UbuntuServer_18.04-LTS", "UbuntuServer_16.04-LTS", "WindowsServer_2016-DataCenter"]}}, "variables": {"isWindowsOs": "[contains(toLower(parameters(\'operatingSystem\')), \'windows\')]", "script1Command": "[if(variables(\'isWindowsOs\'), \'powershell -ExecutionPolicy Unrestricted -File  .\\\\script-1.ps1 \', \'./script-1.sh \')]", "script2Command": "[if(variables(\'isWindowsOs\'), \'powershell -ExecutionPolicy Unrestricted -File  .\\\\script-2.ps1 \', \'./script-2.sh \')]", "script1File": "[if(variables(\'isWindowsOs\'), \'script-1.ps1\', \'script-1.sh\')]", "script2File": "[if(variables(\'isWindowsOs\'), \'script-2.ps1\', \'script-2.sh\')]", "vmName": "vm", "storageAccountName": "[concat(variables(\'vmName\'),uniquestring(resourceGroup().id))]", "networkSecurityGroupName": "nsg", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "vnet", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "createVMUrl": "[uri(parameters(\'_artifactsLocation\'), concat(\'nestedtemplates/vm.json\', parameters(\'_artifactsLocationSasToken\')))]", "extensionUrl": "[uri(parameters(\'_artifactsLocation\'), concat(\'nestedtemplates/customScriptExtension.json\', parameters(\'_artifactsLocationSasToken\')))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2021-01-01", "location": "[parameters(\'Location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage", "properties": {}}, {"apiVersion": "2018-07-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'Location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"name": "[variables(\'networkSecurityGroupName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2018-07-01", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "allow-remote-access", "properties": {"priority": 1000, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "[if(contains(toLower(parameters(\'operatingSystem\')), \'windows\'), 3389, 22)]", "access": "Allow", "direction": "Inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"name": "creatingVM", "type": "Microsoft.Resources/deployments", "apiVersion": "2018-05-01", "dependsOn": ["[variables(\'virtualNetworkName\')]", "[variables(\'storageAccountName\')]", "[variables(\'networkSecurityGroupName\')]"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'createVMUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"adminPasswordOrKey": {"value": "[parameters(\'adminPasswordOrKey\')]"}, "adminUsername": {"value": "[parameters(\'adminUsername\')]"}, "authenticationType": {"value": "[parameters(\'authenticationType\')]"}, "operatingSystem": {"value": "[parameters(\'operatingSystem\')]"}, "location": {"value": "[parameters(\'location\')]"}, "nsgId": {"value": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}, "storageAccountId": {"value": "[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))]"}, "subnetRef": {"value": "[variables(\'subnetRef\')]"}, "vmSize": {"value": "[parameters(\'vmSize\')]"}, "vmName": {"value": "[variables(\'vmName\')]"}}}}, {"name": "firstExtensionRun", "type": "Microsoft.Resources/deployments", "apiVersion": "2018-05-01", "dependsOn": ["creatingVM"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'extensionUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"location": {"value": "[parameters(\'location\')]"}, "extensionName": {"value": "cse"}, "vmName": {"value": "[variables(\'vmName\')]"}, "fileUris": {"value": ["[uri(parameters(\'_artifactsLocation\'), concat(variables(\'script1File\'), parameters(\'_artifactsLocationSasToken\')))]"]}, "commandToExecute": {"value": "[variables(\'script1Command\')]"}, "isWindowsOS": {"value": "[variables(\'isWindowsOs\')]"}}}}, {"name": "secondExtensionRun", "type": "Microsoft.Resources/deployments", "apiVersion": "2018-05-01", "dependsOn": ["firstExtensionRun"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'extensionUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"location": {"value": "[parameters(\'location\')]"}, "extensionName": {"value": "cse"}, "vmName": {"value": "[variables(\'vmName\')]"}, "fileUris": {"value": ["[uri(parameters(\'_artifactsLocation\'), concat(variables(\'script2File\'), parameters(\'_artifactsLocationSasToken\')))]"]}, "commandToExecute": {"value": "[concat(variables(\'script2Command\'), \'\\"\', split(string(if(variables(\'isWindowsOs\'), reference(\'firstExtensionRun\').outputs.instanceView.value.substatuses[0].message, reference(\'firstExtensionRun\').outputs.instanceView.value.statuses[0].message)), \'#DATA#\')[1], \'\\"\')]"}, "isWindowsOS": {"value": "[variables(\'isWindowsOs\')]"}}}}], "outputs": {"sample": {"type": "object", "value": "[reference(\'firstExtensionRun\').outputs.instanceView.value]"}}}


cli_script
Based on the provided ARM template and template parameters, the following bash script is the equivalent set of Azure CLI commands to create the resources described in the ARM template:\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nadminUsername="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nlocation="westus"\nvmSize="Standard_D2s_v3"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\noperatingSystem="UbuntuServer_18.04-LTS"\n\n# Variables\nvmName="vm"\n# The storageAccountName is dynamically generated using uniquestring function in ARM, which is not directly available in Azure CLI.\n# A similar unique name needs to be generated using a method like hashing the resource group ID.\nresourceGroupID=$(az group show --name MyResourceGroup --query id --output tsv)\nstorageAccountName="${vmName}$(echo -n $resourceGroupID | md5sum | head -c 32)"\nnetworkSecurityGroupName="nsg"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nvirtualNetworkName="vnet"\n# The subnetRef is generated using the Azure CLI command to get the subnet ID.\nsubnetRef=$(az network vnet subnet show --resource-group MyResourceGroup --vnet-name $virtualNetworkName --name $subnetName --query id --output tsv)\n\n# Create Storage Account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --kind Storage\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create Network Security Group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Add security rule to NSG\n# The destination port range depends on the operating system (Windows: 3389, Others: 22)\ndestinationPortRange=$([ "$operatingSystem" == "WindowsServer_2016-DataCenter" ] && echo "3389" || echo "22")\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name allow-remote-access \\\n    --priority 1000 \\\n    --source-address-prefix \'*\' \\\n    --protocol Tcp \\\n    --destination-port-range $destinationPortRange \\\n    --access Allow \\\n    --direction Inbound \\\n    --source-port-range \'*\' \\\n    --destination-address-prefix \'*\' \\\n    --resource-group MyResourceGroup\n\n# Deploy VM using linked template (createVMUrl)\ncreateVMUrl="Link to the nested template for VM creation" # Replace with actual URL\n# The command to deploy the VM is omitted since it requires the linked template URL, which is not provided.\n\n# Deploy custom script extension using linked template (extensionUrl)\nextensionUrl="Link to the nested template for custom script extension" # Replace with actual URL\n# The command to deploy the custom script extension is omitted since it requires the linked template URL, which is not provided.\n\n# Note: The above script assumes the resource group name is "MyResourceGroup". Replace it with the actual resource group name.\n# Additionally, the script omits the deployment of linked templates because the URLs for `createVMUrl` and `extensionUrl` are not provided.\n# You will need to replace these placeholders with actual URLs to the nested templates before running the script.\n```\n\nPlease note that the script provided above assumes that you are deploying resources to an existing resource group named "MyResourceGroup". You need to replace `MyResourceGroup` with the actual name of your resource group. Additionally, the `createVMUrl` and `extensionUrl` are placeholders for the URLs to the nested templates, which you need to provide before running the script. The ARM template\'s `uniquestring` function and the `reference` function used in the `secondExtensionRun` resource are not directly translatable to Azure CLI and require additional handling or assumptions.


verify_result
