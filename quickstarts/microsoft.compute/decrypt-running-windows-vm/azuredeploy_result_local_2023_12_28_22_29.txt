arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine"}, "defaultValue": "zytest"}, "volumeType": {"type": "string", "defaultValue": "All", "allowedValues": ["All", "OS", "Data"], "metadata": {"description": "Type of the volume OS or Data or All to perform decryption operation"}}, "sequenceVersion": {"type": "string", "defaultValue": "1.0", "metadata": {"description": "Pass in an unique value like a GUID everytime the operation needs to be force run"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"extensionName": "AzureDiskEncryption", "extensionVersion": "1.1", "encryptionOperation": "DisableEncryption", "updateEncryptionSettingsUrl": "[concat(\'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/decrypt-running-windows-vm/updateEncryptionSettings-\',parameters(\'volumeType\'),\'.json\')]"}, "resources": [{"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(parameters(\'vmName\'),\'/\', variables(\'extensionName\'))]", "apiVersion": "2016-04-30-preview", "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "AzureDiskEncryption", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "forceUpdateTag": "[parameters(\'sequenceVersion\')]", "settings": {"VolumeType": "[parameters(\'volumeType\')]", "EncryptionOperation": "[variables(\'encryptionOperation\')]"}}}, {"name": "updatevm", "type": "Microsoft.Resources/deployments", "apiVersion": "2015-01-01", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/extensions\',  parameters(\'vmName\'), variables(\'extensionName\'))]"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'updateEncryptionSettingsUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"vmName": {"value": "[parameters(\'vmName\')]"}}}}]}


cli_script
Below is the translated bash script for deploying the resources specified in the ARM template using Azure CLI commands. The parameters from the `TemplateParameters` have been converted into variables and the resources from the `ARMTemplate` have been translated into their equivalent CLI commands.\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmName="zytest"\nvolumeType="All"\nsequenceVersion="1.0"\nlocation="westus"\n\n# Variables\nextensionName="AzureDiskEncryption"\nextensionVersion="1.1"\nencryptionOperation="DisableEncryption"\nupdateEncryptionSettingsUrl="https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/decrypt-running-windows-vm/updateEncryptionSettings-${volumeType}.json"\n\n# Deploy Azure Disk Encryption Extension to the VM\naz vm extension set \\\n    --resource-group "<resource-group-name>" \\\n    --vm-name "$vmName" \\\n    --name "$extensionName" \\\n    --publisher "Microsoft.Azure.Security" \\\n    --version "$extensionVersion" \\\n    --settings "{\\"VolumeType\\":\\"$volumeType\\",\\"EncryptionOperation\\":\\"$encryptionOperation\\"}" \\\n    --force-update-tag "$sequenceVersion" \\\n    --location "$location" \\\n    --no-wait\n\n# Wait for the extension deployment to complete\naz vm extension wait \\\n    --resource-group "<resource-group-name>" \\\n    --vm-name "$vmName" \\\n    --name "$extensionName" \\\n    --created\n\n# Deploy the template for updating encryption settings\naz deployment group create \\\n    --resource-group "<resource-group-name>" \\\n    --name "updatevm" \\\n    --template-uri "$updateEncryptionSettingsUrl" \\\n    --parameters vmName="$vmName" \\\n    --mode Incremental\n```\n\nPlease note that you need to replace `<resource-group-name>` with the actual name of the resource group where your VM and its extension are located. The `--no-wait` flag is used to deploy the extension without waiting for the operation to complete, and then the `az vm extension wait` command is used to wait for the extension deployment to finish before moving on to the next deployment.\n\nRemember to grant execution permission to the script file before running it with the following command:\n```bash\nchmod +x <script-file-name>.sh\n```\n\nThen execute the script using:\n```bash\n./<script-file-name>.sh\n```\n\nMake sure you are logged in to the Azure CLI and have selected the appropriate subscription where the resources are to be deployed.


verify_result
