arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"virtualMachineName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Name"}, "defaultValue": "zytest"}, "virtualMachineSize": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Size"}, "allowedValues": ["Standard_D2s_v3", "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D4s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3"], "defaultValue": "Standard_D8s_v3"}, "adminUsername": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Administrator User Name"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "SQL Server Virtual Machine Administrator Password"}, "defaultValue": "zytest"}, "storageAccountType": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Storage Account Type"}, "allowedValues": ["Premium_LRS", "StandardSSD_LRS", "Standard_LRS"], "defaultValue": "Premium_LRS"}, "virtualNetworkName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Virtual Network Name"}, "defaultValue": "zytest"}, "networkInterfaceName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Network Interface Name"}, "defaultValue": "zytest"}, "networkSecurityGroupName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Network Security Group Name"}, "defaultValue": "zytest"}, "addressPrefix": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Subnet Name"}, "defaultValue": "10.0.0.0/16"}, "subnetName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Subnet Name"}, "defaultValue": "default"}, "subnetPrefix": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Subnet Name"}, "defaultValue": "10.0.0.0/24"}, "publicIpAddressName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Public IP Address Name"}, "defaultValue": "zytest"}, "publicIpAddressType": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Public IP Address Type"}, "defaultValue": "Dynamic"}, "sqlConnectivityType": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine SQL Connectivity Type"}, "defaultValue": "Public"}, "sqlPortNumber": {"type": "int", "metadata": {"description": "SQL Server Virtual Machine SQL Port Number"}, "defaultValue": 1579}, "sqlStorageDisksCount": {"type": "int", "metadata": {"description": "SQL Server Virtual Machine Data Disk Count"}, "defaultValue": 2}, "sqlStorageWorkloadType": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Workload Type: GENERAL - general work load; DW - datawear house work load; OLTP - Transactional processing work load"}, "allowedValues": ["GENERAL", "OLTP", "DW"], "defaultValue": "GENERAL"}, "sqlAutobackupRetentionPeriod": {"type": "string", "metadata": {"description": "SQL Server Auto Backup Retention Period"}, "allowedValues": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"], "defaultValue": "30"}, "sqlAutobackupStorageAccountName": {"type": "string", "metadata": {"description": "SQL Server Auto Backup Storage Account Name"}, "defaultValue": "zytest"}, "sqlAutobackupEncryptionPassword": {"type": "securestring", "metadata": {"description": "SQL Server Auto Backup Encryption Password"}, "defaultValue": "zytest"}, "sqlAuthenticationLogin": {"type": "string", "metadata": {"description": "SQL Server Authentication Login Account Name"}, "defaultValue": "mysa"}, "sqlAuthenticationPassword": {"type": "securestring", "metadata": {"description": "SQL Server Authentication Login Account Password"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "_artifactsLocation": {"type": "string", "metadata": {"description": "URI to artifacts location"}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "secureString", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated"}, "defaultValue": ""}}, "variables": {"subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'),  parameters(\'subnetName\'))]"}, "resources": [{"name": "[parameters(\'virtualMachineName\')]", "type": "Microsoft.Compute/virtualMachines", "apiVersion": "2020-06-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', parameters(\'networkInterfaceName\'))]"], "properties": {"osProfile": {"computerName": "[parameters(\'virtualMachineName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "windowsConfiguration": {"provisionVmAgent": true}}, "hardwareProfile": {"vmSize": "[parameters(\'virtualMachineSize\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftSQLServer", "offer": "SQL2014SP2-WS2012R2", "sku": "Enterprise", "version": "latest"}, "osDisk": {"createOption": "FromImage", "managedDisk": {"storageAccountType": "[parameters(\'storageAccountType\')]"}}, "dataDisks": [{"createOption": "Empty", "managedDisk": {"storageAccountType": "[parameters(\'storageAccountType\')]"}, "lun": 0, "diskSizeGB": 1023, "caching": "ReadOnly"}, {"createOption": "Empty", "managedDisk": {"storageAccountType": "[parameters(\'storageAccountType\')]"}, "lun": 1, "diskSizeGB": 1023, "caching": "ReadOnly"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', parameters(\'networkInterfaceName\'))]"}]}}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(parameters(\'virtualMachineName\'), \'/SqlIaasExtension\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/\', parameters(\'virtualMachineName\'))]"], "properties": {"type": "SqlIaaSAgent", "publisher": "Microsoft.SqlServer.Management", "typeHandlerVersion": "1.2", "autoUpgradeMinorVersion": true, "settings": {"AutoTelemetrySettings": {"Region": "[parameters(\'location\')]"}, "AutoBackupSettings": {"Enable": true, "RetentionPeriod": "[parameters(\'sqlAutobackupRetentionPeriod\')]", "EnableEncryption": true}}, "protectedSettings": {"StorageUrl": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', parameters(\'sqlAutobackupStorageAccountName\')), \'2015-06-15\').primaryEndpoints[\'blob\']]", "StorageAccessKey": "[listKeys(resourceId(\'Microsoft.Storage/storageAccounts\', parameters(\'sqlAutobackupStorageAccountName\')), \'2015-06-15\').key1]", "Password": "[parameters(\'sqlAutobackupEncryptionPassword\')]"}}}, {"type": "Microsoft.Resources/deployments", "name": "prepareSqlVmDeployment", "apiVersion": "2020-06-01", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/extensions\', parameters(\'virtualMachineName\'), \'SqlIaasExtension\')]"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[uri(parameters(\'_artifactsLocation\'), concat(\'nested/preparingSqlServerSa.json\', parameters(\'_artifactsLocationSasToken\')))]"}, "parameters": {"sqlVMName": {"value": "[parameters(\'virtualMachineName\')]"}, "location": {"value": "[parameters(\'location\')]"}, "adminUsername": {"value": "[parameters(\'adminUsername\')]"}, "adminPassword": {"value": "[parameters(\'adminPassword\')]"}, "sqlUsername": {"value": "[parameters(\'sqlAuthenticationLogin\')]"}, "sqlPassword": {"value": "[parameters(\'sqlAuthenticationPassword\')]"}, "disksCount": {"value": "[parameters(\'sqlStorageDisksCount\')]"}, "diskSizeInGB": {"value": 1023}, "sqlEnginePort": {"value": "[parameters(\'sqlPortNumber\')]"}, "workloadType": {"value": "[parameters(\'sqlStorageWorkloadType\')]"}, "connectionType": {"value": "[parameters(\'sqlConnectivityType\')]"}, "sqlVMPrepareModulesURL": {"value": "[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/PrepareSqlServer.ps1.zip\', parameters(\'_artifactsLocationSasToken\')))]"}, "sqlVMPrepareConfigurationFunction": {"value": "PrepareSqlServerSa.ps1\\\\PrepareSqlServerSa"}}}}, {"name": "[parameters(\'sqlAutobackupStorageAccountName\')]", "type": "Microsoft.Storage/storageAccounts", "apiVersion": "2019-06-01", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "StorageV2"}, {"name": "[parameters(\'virtualNetworkName\')]", "type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[parameters(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[parameters(\'subnetPrefix\')]"}}]}}, {"name": "[parameters(\'networkInterfaceName\')]", "type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', parameters(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/publicIpAddresses/\', parameters(\'publicIpAddressName\'))]", "[resourceId(\'Microsoft.Network/networkSecurityGroups/\', parameters(\'networkSecurityGroupName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "privateIPAllocationMethod": "Dynamic", "publicIpAddress": {"id": "[resourceId(\'Microsoft.Network/publicIpAddresses\', parameters(\'publicIpAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]"}}}, {"name": "[parameters(\'publicIpAddressName\')]", "type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[parameters(\'publicIpAddressType\')]"}}, {"name": "[parameters(\'networkSecurityGroupName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-rdp", "properties": {"priority": 1000, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "3389", "access": "Allow", "direction": "inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}, {"name": "default-allow-sql", "properties": {"priority": 1500, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "1433", "access": "Allow", "direction": "inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}}}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameter values:\n\n```bash\n#!/bin/bash\n\n# Assign template parameter values to variables\nvirtualMachineName="zytest"\nvirtualMachineSize="Standard_D8s_v3"\nadminUsername="zytest"\nadminPassword="zytest"\nstorageAccountType="Premium_LRS"\nvirtualNetworkName="zytest"\nnetworkInterfaceName="zytest"\nnetworkSecurityGroupName="zytest"\naddressPrefix="10.0.0.0/16"\nsubnetName="default"\nsubnetPrefix="10.0.0.0/24"\npublicIpAddressName="zytest"\npublicIpAddressType="Dynamic"\nsqlConnectivityType="Public"\nsqlPortNumber=1579\nsqlStorageDisksCount=2\nsqlStorageWorkloadType="GENERAL"\nsqlAutobackupRetentionPeriod="30"\nsqlAutobackupStorageAccountName="zytest"\nsqlAutobackupEncryptionPassword="zytest"\nsqlAuthenticationLogin="mysa"\nsqlAuthenticationPassword="zytest"\nlocation="westus"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\n\n# Create a storage account for SQL auto backup\naz storage account create \\\n    --name $sqlAutobackupStorageAccountName \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --kind StorageV2\n\n# Create a virtual network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create a network security group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Add security rule for RDP\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name "default-allow-rdp" \\\n    --priority 1000 \\\n    --source-address-prefixes "*" \\\n    --destination-port-ranges 3389 \\\n    --access Allow \\\n    --protocol Tcp \\\n    --direction Inbound\n\n# Add security rule for SQL\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name "default-allow-sql" \\\n    --priority 1500 \\\n    --source-address-prefixes "*" \\\n    --destination-port-ranges 1433 \\\n    --access Allow \\\n    --protocol Tcp \\\n    --direction Inbound\n\n# Create a public IP address\naz network public-ip create \\\n    --name $publicIpAddressName \\\n    --location $location \\\n    --allocation-method $publicIpAddressType\n\n# Create a network interface and associate with the NSG and public IP\nsubnetId=$(az network vnet subnet show --name $subnetName --vnet-name $virtualNetworkName --query id --output tsv)\nnsgId=$(az network nsg show --name $networkSecurityGroupName --query id --output tsv)\npublicIpId=$(az network public-ip show --name $publicIpAddressName --query id --output tsv)\n\naz network nic create \\\n    --name $networkInterfaceName \\\n    --location $location \\\n    --subnet $subnetId \\\n    --network-security-group $nsgId \\\n    --public-ip-address $publicIpId\n\n# Create the virtual machine\nnicId=$(az network nic show --name $networkInterfaceName --query id --output tsv)\n\naz vm create \\\n    --name $virtualMachineName \\\n    --location $location \\\n    --nics $nicId \\\n    --image "MicrosoftSQLServer:SQL2014SP2-WS2012R2:Enterprise:latest" \\\n    --size $virtualMachineSize \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --storage-sku $storageAccountType\n\n# Add data disks to the virtual machine\nfor (( i=0; i<$sqlStorageDisksCount; i++ ))\ndo\n    az vm disk attach \\\n        --vm-name $virtualMachineName \\\n        --name "${virtualMachineName}-datadisk${i}" \\\n        --new \\\n        --size-gb 1023 \\\n        --sku $storageAccountType \\\n        --caching ReadOnly\ndone\n\n# Install SQL IaaS Extension on the virtual machine\naz vm extension set \\\n    --name "SqlIaasExtension" \\\n    --vm-name $virtualMachineName \\\n    --publisher "Microsoft.SqlServer.Management" \\\n    --version "1.2" \\\n    --settings \'{"AutoTelemetrySettings":{"Region":"\'$location\'"},"AutoBackupSettings":{"Enable":true,"RetentionPeriod":"\'$sqlAutobackupRetentionPeriod\'","EnableEncryption":true}}\' \\\n    --protected-settings \'{"StorageUrl":"\'$storageAccountBlobPrimaryEndpoint\'","StorageAccessKey":"\'$storageAccountKey\'","Password":"\'$sqlAutobackupEncryptionPassword\'"}\'\n\n# Deploy nested template for preparing SQL VM\naz deployment group create \\\n    --name "prepareSqlVmDeployment" \\\n    --resource-group $resourceGroupName \\\n    --template-uri "${_artifactsLocation}nested/preparingSqlServerSa.json${_artifactsLocationSasToken}" \\\n    --parameters sqlVMName=$virtualMachineName location=$location adminUsername=$adminUsername adminPassword=$adminPassword sqlUsername=$sqlAuthenticationLogin sqlPassword=$sqlAuthenticationPassword disksCount=$sqlStorageDisksCount diskSizeInGB=1023 sqlEnginePort=$sqlPortNumber workloadType=$sqlStorageWorkloadType connectionType=$sqlConnectivityType sqlVMPrepareModulesURL="${_artifactsLocation}scripts/PrepareSqlServer.ps1.zip${_artifactsLocationSasToken}" sqlVMPrepareConfigurationFunction="PrepareSqlServerSa.ps1\\\\PrepareSqlServerSa"\n\n# Outputs\necho "Admin username: $adminUsername"\n```\n\nPlease note that this script assumes that you have already logged in to Azure CLI and set the appropriate subscription context. Additionally, the script assumes that you have the necessary permissions to create the resources in the specified location. Also, the storage account key and blob primary endpoint are not provided in the ARM template, so you will need to retrieve them using additional CLI commands or set them manually in the script.


verify_result
