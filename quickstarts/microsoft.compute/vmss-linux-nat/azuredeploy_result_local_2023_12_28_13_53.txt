arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_A1", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "16.04-LTS", "allowedValues": ["14.04.4-LTS", "16.04-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 14.04.4-LTS, 16.04-LTS."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "minValue": 5, "maxValue": 100, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"namingInfix": "[toLower(substring(concat(parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "longNamingInfix": "[toLower(parameters(\'vmssName\'))]", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "publicIPAddressName": "[concat(variables(\'namingInfix\'), \'pip\')]", "subnetName": "[concat(variables(\'namingInfix\'), \'subnet\')]", "loadBalancerName": "[concat(variables(\'namingInfix\'), \'lb\')]", "natPoolName": "[concat(variables(\'namingInfix\'), \'natpool\')]", "bePoolName": "[concat(variables(\'namingInfix\'), \'bepool\')]", "natStartPort": 50000, "natEndPort": 50119, "natBackendPort": 22, "nicName": "[concat(variables(\'namingInfix\'), \'nic\')]", "ipConfigName": "[concat(variables(\'namingInfix\'), \'ipconfig\')]", "osType": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-08-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-04-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[variables(\'longNamingInfix\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-04-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[variables(\'namingInfix\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-03-30", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "true", "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[variables(\'namingInfix\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools/\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools/\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}]}}]}}]}}}}]}


cli_script
Based on the provided ARM template and parameters, the following is the equivalent Azure CLI script in bash format. Note that the ARM template provided contains expressions to generate resource names and other values, so we\'ll need to simplify those expressions for the CLI script, and we\'ll assume that the unique names and IDs are already resolved.\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nvmSku="Standard_A1"\nubuntuOSVersion="16.04-LTS"\nvmssName="zytest"\ninstanceCount=1\nlocation="westus"\nadminUsername="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Derived values (simplified from ARM template expressions)\nnamingInfix="${vmssName:0:9}"\nlongNamingInfix="$vmssName"\nvirtualNetworkName="${namingInfix}vnet"\npublicIPAddressName="${namingInfix}pip"\nsubnetName="${namingInfix}subnet"\nloadBalancerName="${namingInfix}lb"\nnatPoolName="${namingInfix}natpool"\nbePoolName="${namingInfix}bepool"\nnicName="${namingInfix}nic"\nipConfigName="${namingInfix}ipconfig"\n\n# Resource Deployment\n# Create Virtual Network\naz network vnet create \\\n    --name "$virtualNetworkName" \\\n    --location "$location" \\\n    --address-prefix "10.0.0.0/16" \\\n    --subnet-name "$subnetName" \\\n    --subnet-prefix "10.0.0.0/24"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name "$publicIPAddressName" \\\n    --location "$location" \\\n    --allocation-method Dynamic \\\n    --dns-name "$longNamingInfix"\n\n# Create Load Balancer\naz network lb create \\\n    --name "$loadBalancerName" \\\n    --location "$location" \\\n    --frontend-ip-name "LoadBalancerFrontEnd" \\\n    --public-ip-address "$publicIPAddressName" \\\n    --backend-pool-name "$bePoolName"\n\n# Create Inbound NAT Pool\naz network lb inbound-nat-pool create \\\n    --resource-group <ResourceGroupName> \\\n    --lb-name "$loadBalancerName" \\\n    --name "$natPoolName" \\\n    --protocol Tcp \\\n    --frontend-port-range-start 50000 \\\n    --frontend-port-range-end 50119 \\\n    --backend-port 22 \\\n    --frontend-ip-name "LoadBalancerFrontEnd"\n\n# Create Virtual Machine Scale Set\naz vmss create \\\n    --name "$namingInfix" \\\n    --location "$location" \\\n    --vm-sku "$vmSku" \\\n    --instance-count "$instanceCount" \\\n    --admin-username "$adminUsername" \\\n    --authentication-type "$authenticationType" \\\n    --admin-password "$adminPasswordOrKey" \\\n    --image "Canonical:UbuntuServer:$ubuntuOSVersion:latest" \\\n    --vnet-name "$virtualNetworkName" \\\n    --subnet "$subnetName" \\\n    --load-balancer "$loadBalancerName" \\\n    --backend-pool-name "$bePoolName" \\\n    --nat-pool "$natPoolName"\n\n# Note: Replace <ResourceGroupName> with the actual name of your resource group\n```\n\nPlease replace `<ResourceGroupName>` with the actual name of your resource group where the resources should be deployed. Also, note that the script assumes that the unique names and IDs have been resolved appropriately, which would normally be handled by the ARM template\'s expressions.


verify_result
