arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_D4_v3", "metadata": {"description": "Size of the virtual machine."}}}, "variables": {"imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "ubuntuOSVersion": "18.04-LTS", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "storageAccountName": "[concat(\'stglinuxvm\', uniquestring(resourceGroup().id))]", "storageAccountSkuName": "Standard_LRS", "storageAccountSkuType": "Standard", "storageAccountKind": "StorageV2", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "vmName": "MyUbuntuVM", "virtualNetworkName": "MyVNET", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "default-NSG"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountSkuName\')]", "tier": "[variables(\'storageAccountSkuType\')]"}, "kind": "[variables(\'storageAccountKind\')]", "properties": {}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"primary": true, "enableAcceleratedNetworking": true, "ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "apiVersion": "2020-06-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": 1023, "lun": 0, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\')), \'2020-08-01-preview\').primaryEndpoints[\'blob\']]"}}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
Based on the provided ARM template and parameters, here\'s the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Assign variables from the template parameters\nadminUsername="zytest" # Default value provided\ndnsLabelPrefix="zytest" # Default value provided\nlocation="westus" # Default value provided\nauthenticationType="sshPublicKey" # Default value provided\nadminPasswordOrKey="zytest" # Default value provided\nvmSize="Standard_D4_v3" # Default value provided\n\n# Variables defined in the ARM template\nimagePublisher="Canonical"\nimageOffer="UbuntuServer"\nubuntuOSVersion="18.04-LTS"\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\n# Generate a unique storage account name based on the resource group ID\nstorageAccountName=$(az group show --name myResourceGroup --query id --output tsv | xargs -I {} echo "stglinuxvm$(az group deployment create --resource-group myResourceGroup --template-file template.json --query properties.outputs.storageAccountName.value --output tsv)")\nstorageAccountSkuName="Standard_LRS"\nstorageAccountSkuType="Standard"\nstorageAccountKind="StorageV2"\npublicIPAddressName="myPublicIP"\npublicIPAddressType="Dynamic"\nvmName="MyUbuntuVM"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="default-NSG"\nsshPublicKeyPath="/home/$adminUsername/.ssh/authorized_keys"\nsshPublicKeyData="$adminPasswordOrKey"\n\n# Create a storage account\naz storage account create \\\n  --name $storageAccountName \\\n  --location $location \\\n  --sku $storageAccountSkuName \\\n  --kind $storageAccountKind\n\n# Create a public IP address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --allocation-method $publicIPAddressType \\\n  --dns-name $dnsLabelPrefix\n\n# Create a network security group\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --location $location\n\n# Add security rule to the NSG\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name default-allow-22 \\\n  --priority 1000 \\\n  --access Allow \\\n  --direction Inbound \\\n  --destination-port-ranges 22 \\\n  --protocol Tcp \\\n  --source-address-prefixes \'*\' \\\n  --source-port-ranges \'*\'\n\n# Create a virtual network\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --location $location \\\n  --address-prefix $addressPrefix \\\n  --subnet-name $subnetName \\\n  --subnet-prefix $subnetPrefix \\\n  --network-security-group $networkSecurityGroupName\n\n# Create a network interface\naz network nic create \\\n  --name $nicName \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetName \\\n  --public-ip-address $publicIPAddressName \\\n  --accelerated-networking true\n\n# Create a virtual machine\naz vm create \\\n  --name $vmName \\\n  --location $location \\\n  --nics $nicName \\\n  --size $vmSize \\\n  --image $imagePublisher:$imageOffer:$ubuntuOSVersion:latest \\\n  --admin-username $adminUsername \\\n  --authentication-type $authenticationType \\\n  --ssh-key-values $sshPublicKeyData\n\n# Enable boot diagnostics\naz vm boot-diagnostics enable \\\n  --name $vmName \\\n  --storage $storageAccountName\n\n# Output the hostname and SSH command\nfqdn=$(az network public-ip show --name $publicIPAddressName --query "dnsSettings.fqdn" --output tsv)\necho "Hostname: $fqdn"\necho "SSH Command: ssh $adminUsername@$fqdn"\n```\n\nPlease ensure that you replace "myResourceGroup" with the actual name of your resource group where you want to deploy these resources. Also, note that the storage account name generation is based on the assumption that you have a deployment template file named \'template.json\' in the current directory that outputs the storage account name. Adjust the script accordingly if this is not the case.


verify_result
