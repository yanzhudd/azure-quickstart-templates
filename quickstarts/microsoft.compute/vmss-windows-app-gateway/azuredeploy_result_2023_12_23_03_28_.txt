arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.19.5.34762", "templateHash": "3336836635633257693"}}, "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "windowsOSVersion": {"type": "string", "defaultValue": "2022-datacenter-azure-edition", "allowedValues": ["2016-datacenter-gensecond", "2016-datacenter-server-core-g2", "2016-datacenter-server-core-smalldisk-g2", "2016-datacenter-smalldisk-g2", "2016-datacenter-with-containers-g2", "2016-datacenter-zhcn-g2", "2019-datacenter-core-g2", "2019-datacenter-core-smalldisk-g2", "2019-datacenter-core-with-containers-g2", "2019-datacenter-core-with-containers-smalldisk-g2", "2019-datacenter-gensecond", "2019-datacenter-smalldisk-g2", "2019-datacenter-with-containers-g2", "2019-datacenter-with-containers-smalldisk-g2", "2019-datacenter-zhcn-g2", "2022-datacenter-azure-edition", "2022-datacenter-azure-edition-core", "2022-datacenter-azure-edition-core-smalldisk", "2022-datacenter-azure-edition-smalldisk", "2022-datacenter-core-g2", "2022-datacenter-core-smalldisk-g2", "2022-datacenter-g2", "2022-datacenter-smalldisk-g2"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."}}, "securityType": {"type": "string", "defaultValue": "TrustedLaunch", "allowedValues": ["Standard", "TrustedLaunch"], "metadata": {"description": "Security Type of the Virtual Machine."}}, "vmssName": {"type": "string", "maxLength": 57, "metadata": {"description": "String used as a base for naming resources. Must be 3-57 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "maxValue": 1000, "minValue": 3, "metadata": {"description": "Number of VM instances (1000 or less)."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password on all VMs."}, "defaultValue": "zytest"}}, "variables": {"securityProfileJson": {"uefiSettings": {"secureBootEnabled": true, "vTpmEnabled": true}, "securityType": "[parameters(\'securityType\')]"}, "vmScaleSetName": "[toLower(substring(format(\'{0}{1}\', parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.8.0/21", "virtualNetworkName": "[format(\'{0}vnet\', variables(\'vmScaleSetName\'))]", "subnetName": "[format(\'{0}subnet\', variables(\'vmScaleSetName\'))]", "nicName": "[format(\'{0}nic\', variables(\'vmScaleSetName\'))]", "ipConfigName": "[format(\'{0}ipconfig\', variables(\'vmScaleSetName\'))]", "imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'windowsOSVersion\')]", "version": "latest"}, "appGwPublicIPAddressName": "[format(\'{0}appGwPip\', variables(\'vmScaleSetName\'))]", "appGwName": "[format(\'{0}appGw\', variables(\'vmScaleSetName\'))]", "appGwSubnetName": "[format(\'{0}appGwSubnet\', variables(\'vmScaleSetName\'))]", "appGwSubnetPrefix": "10.0.1.0/24", "appGwFrontendPort": 80, "appGwBackendPort": 80, "appGwBePoolName": "[format(\'{0}appGwBepool\', variables(\'vmScaleSetName\'))]"}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2022-11-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}, {"name": "[variables(\'appGwSubnetName\')]", "properties": {"addressPrefix": "[variables(\'appGwSubnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2022-11-01", "name": "[variables(\'appGwPublicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic"}}, {"type": "Microsoft.Network/applicationGateways", "apiVersion": "2022-11-01", "name": "[variables(\'appGwName\')]", "location": "[parameters(\'location\')]", "properties": {"sku": {"name": "Standard_Large", "tier": "Standard", "capacity": 10}, "gatewayIPConfigurations": [{"name": "appGwIpConfig", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'appGwSubnetName\'))]"}}}], "frontendIPConfigurations": [{"name": "appGwFrontendIP", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'appGwPublicIPAddressName\'))]"}}}], "frontendPorts": [{"name": "appGwFrontendPort", "properties": {"port": "[variables(\'appGwFrontendPort\')]"}}], "backendAddressPools": [{"name": "[variables(\'appGwBePoolName\')]"}], "backendHttpSettingsCollection": [{"name": "appGwBackendHttpSettings", "properties": {"port": "[variables(\'appGwBackendPort\')]", "protocol": "Http", "cookieBasedAffinity": "Disabled"}}], "httpListeners": [{"name": "appGwHttpListener", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/applicationGateways/frontendIPConfigurations\', variables(\'appGwName\'), \'appGwFrontendIP\')]"}, "frontendPort": {"id": "[resourceId(\'Microsoft.Network/applicationGateways/frontendPorts\', variables(\'appGwName\'), \'appGwFrontendPort\')]"}, "protocol": "Http"}}], "requestRoutingRules": [{"name": "rule1", "properties": {"ruleType": "Basic", "httpListener": {"id": "[resourceId(\'Microsoft.Network/applicationGateways/httpListeners\', variables(\'appGwName\'), \'appGwHttpListener\')]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/applicationGateways/backendAddressPools/\', variables(\'appGwName\'), variables(\'appGwBePoolName\'))]"}, "backendHttpSettings": {"id": "[resourceId(\'Microsoft.Network/applicationGateways/backendHttpSettingsCollection/\', variables(\'appGwName\'), \'appGwBackendHttpSettings\')]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'appGwPublicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "apiVersion": "2023-03-01", "name": "[variables(\'vmScaleSetName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": true, "singlePlacementGroup": false, "upgradePolicy": {"mode": "Automatic"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[variables(\'vmScaleSetName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "securityProfile": "[if(equals(parameters(\'securityType\'), \'TrustedLaunch\'), variables(\'securityProfileJson\'), null())]", "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "applicationGatewayBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/applicationGateways/backendAddressPools/\', variables(\'appGwName\'), variables(\'appGwBePoolName\'))]"}]}}]}}]}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/applicationGateways\', variables(\'appGwName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmSku="Standard_D2s_v3"\nwindowsOSVersion="2022-datacenter-azure-edition"\nsecurityType="TrustedLaunch"\nvmssName="zytest"\ninstanceCount=3\nadminUsername="zytest"\nlocation="westus"\nadminPassword="zytest"\n\n# Create virtual network\naz network vnet create --name ${vmssName}vnet --resource-group myResourceGroup --location $location --address-prefix 10.0.0.0/16\n\n# Create subnet\naz network vnet subnet create --name ${vmssName}subnet --resource-group myResourceGroup --vnet-name ${vmssName}vnet --address-prefix 10.0.8.0/21\n\n# Create application gateway subnet\naz network vnet subnet create --name ${vmssName}appGwSubnet --resource-group myResourceGroup --vnet-name ${vmssName}vnet --address-prefix 10.0.1.0/24\n\n# Create public IP\naz network public-ip create --name ${vmssName}appGwPip --resource-group myResourceGroup --location $location --allocation-method Dynamic\n\n# Create application gateway\naz network application-gateway create --name ${vmssName}appGw --location $location --resource-group myResourceGroup --capacity 10 --sku Standard_Large --public-ip-address ${vmssName}appGwPip --vnet-name ${vmssName}vnet --subnet ${vmssName}appGwSubnet\n\n# Create virtual machine scale set\naz vmss create --name ${vmssName} --resource-group myResourceGroup --location $location --vm-sku $vmSku --instance-count $instanceCount --admin-username $adminUsername --admin-password $adminPassword --image MicrosoftWindowsServer:WindowsServer:$windowsOSVersion:latest --vnet-name ${vmssName}vnet --subnet ${vmssName}subnet --public-ip-per-vm --lb ${vmssName}appGw --backend-pool-name ${vmssName}appGwBepool\n```\n\nPlease replace `myResourceGroup` with your actual resource group name. Also, please note that this script assumes that you have already logged in to Azure CLI and set the default subscription. If not, please login first by running `az login` and set the default subscription by running `az account set --subscription <your-subscription-id>`.


verify_result
