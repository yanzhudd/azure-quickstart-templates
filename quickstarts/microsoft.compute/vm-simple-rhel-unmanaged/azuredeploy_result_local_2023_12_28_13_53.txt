arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "vmName": {"type": "string", "metadata": {"description": "Name for the Virtual Machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "description"}}}, "variables": {"storageAccountName": "[concat(uniquestring(parameters(\'vmName\')), \'storage\')]", "imagePublisher": "RedHat", "imageOffer": "RHEL", "nicName": "[concat(uniquestring(parameters(\'vmName\')), \'nic\')]", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "storageAccountType": "Standard_LRS", "publicIPAddressName": "[concat(uniquestring(parameters(\'vmName\')), \'publicip\')]", "publicIPAddressType": "Dynamic", "virtualNetworkName": "[concat(uniquestring(parameters(\'vmName\')), \'vnet\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]"}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "7.8", "version": "latest"}, "osDisk": {"name": "[concat(parameters(\'vmName\'),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}, "dataDisks": [{"name": "[concat(parameters(\'vmName\'),\'_DataDisk1\')]", "diskSizeGB": 100, "lun": 0, "createOption": "Empty"}, {"name": "[concat(parameters(\'vmName\'),\'_DataDisk2\')]", "diskSizeGB": 100, "lun": 1, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\')), \'2020-08-01-preview\').primaryEndpoints[\'blob\']]"}}}}]}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\nadminUsername="zytest"\nvmName="zytest"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nvmSize="Standard_A1_v2"\n\n# Variables\nstorageAccountName=$(echo -n "$vmName" | md5sum | head -c 8)"storage"\nimagePublisher="RedHat"\nimageOffer="RHEL"\nnicName=$(echo -n "$vmName" | md5sum | head -c 8)"nic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nstorageAccountType="Standard_LRS"\npublicIPAddressName=$(echo -n "$vmName" | md5sum | head -c 8)"publicip"\npublicIPAddressType="Dynamic"\nvirtualNetworkName=$(echo -n "$vmName" | md5sum | head -c 8)"vnet"\nnetworkSecurityGroupName="$subnetName-nsg"\n\n# Create a storage account\naz storage account create --name $storageAccountName --location $location --sku $storageAccountType --kind StorageV2\n\n# Create a public IP address\naz network public-ip create --name $publicIPAddressName --location $location --allocation-method $publicIPAddressType\n\n# Create a Network Security Group and rule to allow SSH\naz network nsg create --name $networkSecurityGroupName --location $location\naz network nsg rule create --nsg-name $networkSecurityGroupName --name default-allow-22 --priority 1000 --access Allow --direction Inbound --destination-port-ranges 22 --protocol Tcp --source-address-prefix "*" --destination-address-prefix "*"\n\n# Create a virtual network with a subnet\naz network vnet create --name $virtualNetworkName --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetPrefix --network-security-group $networkSecurityGroupName\n\n# Create a network interface with a public IP address and connect to the subnet\naz network nic create --name $nicName --location $location --vnet-name $virtualNetworkName --subnet $subnetName --public-ip-address $publicIPAddressName\n\n# Create a virtual machine\nsshKeyPath="/home/$adminUsername/.ssh/authorized_keys"\nif [ "$authenticationType" == "sshPublicKey" ]; then\n  az vm create --name $vmName --location $location --nics $nicName --size $vmSize --image "$imagePublisher:$imageOffer:7.8:latest" --admin-username $adminUsername --ssh-key-value "$adminPasswordOrKey" --authentication-type $authenticationType\nelse\n  az vm create --name $vmName --location $location --nics $nicName --size $vmSize --image "$imagePublisher:$imageOffer:7.8:latest" --admin-username $adminUsername --admin-password "$adminPasswordOrKey" --authentication-type $authenticationType\nfi\n\n# Attach data disks to the VM\naz vm disk attach --vm-name $vmName --name "${vmName}_DataDisk1" --size-gb 100 --lun 0 --new\naz vm disk attach --vm-name $vmName --name "${vmName}_DataDisk2" --size-gb 100 --lun 1 --new\n\n# Enable boot diagnostics\nstorageUri=$(az storage account show --name $storageAccountName --query "primaryEndpoints.blob" --output tsv)\naz vm boot-diagnostics enable --name $vmName --storage $storageUri\n```\n\nPlease note that the `uniquestring` function used in ARM templates to generate unique names based on the input string has been replaced with a simple `md5sum` hash in the bash script to simulate the uniqueness. The `--authentication-type` parameter is determined based on the `authenticationType` variable. The `--ssh-key-value` or `--admin-password` is used accordingly. The data disks are attached using separate commands. Boot diagnostics are enabled using the storage account\'s primary blob endpoint.


verify_result
