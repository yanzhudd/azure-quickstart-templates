arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"dnsLabelPrefix": {"type": "string", "metadata": {"description": "Unique DNS Name for the Storage Account where the Virtual Machine\'s disks will be placed."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "customData": {"type": "string", "defaultValue": "echo customData", "metadata": {"description": "String passed down to the Virtual Machine."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "VM size"}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "18.04-LTS", "allowedValues": ["14.04-LTS", "16.04-LTS", "18.04-LTS", "20.04-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04-LTS,16.04-LTS,18.04-LTS,20.04-LTS."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"storageAccountName": "[concat(uniquestring(resourceGroup().id), \'sacustmdata\')]", "imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "nicName": "networkInterface1", "vmName": "vm1", "virtualNetworkName": "virtualNetwork1", "publicIPAddressName": "publicIp1", "addressPrefix": "10.0.0.0/16", "subnet1Name": "Subnet-1", "subnet1Prefix": "10.0.0.0/24", "publicIPAddressType": "Dynamic", "storageAccountType": "Standard_LRS", "apiVersion": "2015-06-15", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "default-NSG"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2021-01-01", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}}, {"apiVersion": "2015-06-15", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-08-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2015-06-15", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "[variables(\'subnet1Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2015-06-15", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\',variables(\'virtualNetworkName\'),variables(\'subnet1Name\'))]"}}}]}}, {"apiVersion": "2016-04-30-preview", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "customData": "[base64(parameters(\'customData\'))]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'storageAccountName\'), variables(\'apiVersion\')).primaryEndpoints[\'blob\']]"}}}}]}


cli_script
Based on the provided ARM template and parameters, here is the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Parameters\ndnsLabelPrefix="zytest"\nadminUsername="zytest"\ncustomData="echo customData"\nvmSize="Standard_D2_v3"\nubuntuOSVersion="18.04-LTS"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Derived from ARM template variables\nstorageAccountName="$(az group show --query id --output tsv | base64 | tr -d \'=\\n\' | cut -c1-24)sacustmdata"\nimagePublisher="Canonical"\nimageOffer="UbuntuServer"\nnicName="networkInterface1"\nvmName="vm1"\nvirtualNetworkName="virtualNetwork1"\npublicIPAddressName="publicIp1"\naddressPrefix="10.0.0.0/16"\nsubnet1Name="Subnet-1"\nsubnet1Prefix="10.0.0.0/24"\npublicIPAddressType="Dynamic"\nstorageAccountType="Standard_LRS"\napiVersion="2015-06-15"\nnetworkSecurityGroupName="default-NSG"\n\n# Create storage account\naz storage account create \\\n  --name $storageAccountName \\\n  --location $location \\\n  --sku $storageAccountType \\\n  --kind StorageV2\n\n# Create public IP address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --allocation-method $publicIPAddressType \\\n  --dns-name $dnsLabelPrefix\n\n# Create network security group and rule\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --location $location\n\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name default-allow-22 \\\n  --priority 1000 \\\n  --access Allow \\\n  --direction Inbound \\\n  --destination-port-ranges 22 \\\n  --protocol Tcp \\\n  --source-address-prefix \'*\' \\\n  --source-port-range \'*\' \\\n  --destination-address-prefix \'*\'\n\n# Create virtual network and subnet\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --location $location \\\n  --address-prefix $addressPrefix \\\n  --subnet-name $subnet1Name \\\n  --subnet-prefix $subnet1Prefix\n\naz network vnet subnet update \\\n  --vnet-name $virtualNetworkName \\\n  --name $subnet1Name \\\n  --network-security-group $networkSecurityGroupName\n\n# Create network interface\naz network nic create \\\n  --name $nicName \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnet1Name \\\n  --public-ip-address $publicIPAddressName\n\n# Create virtual machine\naz vm create \\\n  --name $vmName \\\n  --location $location \\\n  --nics $nicName \\\n  --image $imagePublisher:$imageOffer:$ubuntuOSVersion:latest \\\n  --size $vmSize \\\n  --admin-username $adminUsername \\\n  --authentication-type $authenticationType \\\n  --ssh-key-value "$adminPasswordOrKey" \\\n  --custom-data "$(echo $customData | base64)"\n\n# Enable boot diagnostics\nstorageUri=$(az storage account show --name $storageAccountName --query "primaryEndpoints.blob" --output tsv)\naz vm boot-diagnostics enable \\\n  --name $vmName \\\n  --storage $storageUri\n```\n\nPlease note that the above script assumes that you are logged in to the Azure CLI and have the necessary permissions to create resources in the subscription. Additionally, the script assumes that it is being run in a resource group context (i.e., `az group show` will return the current resource group\'s ID). Adjustments may be needed based on your specific Azure environment and requirements.


verify_result
