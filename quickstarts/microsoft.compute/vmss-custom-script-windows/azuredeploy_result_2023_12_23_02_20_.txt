arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of VMs in the VM Scale Set"}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "defaultValue": 2, "minValue": 2, "maxValue": 100}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password on all VMs."}, "defaultValue": "zytest"}, "location": {"type": "string", "metadata": {"description": "Default location"}, "defaultValue": "westus"}, "_artifactsLocationSasToken": {"defaultValue": "", "type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}}, "_artifactsLocation": {"defaultValue": "[deployment().properties.templateLink.uri]", "type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}}}, "variables": {"vnetName": "vnet", "subnetName": "subnet", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetName\'))]", "publicIPAddressName": "pip", "loadBalancerName": "loadBalancer", "loadBalancerFrontEndName": "loadBalancerFrontEnd", "loadBalancerBackEndName": "loadBalancerBackEnd", "loadBalancerProbeName": "loadBalancerHttpProbe", "loadBalancerNatPoolName": "loadBalancerNatPool", "scriptLocation": "[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/helloWorld.ps1\', parameters(\'_artifactsLocationSasToken\')))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-12-01", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'loadBalancerName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "true", "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite"}, "imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2016-Datacenter", "version": "latest"}}, "osProfile": {"computerNamePrefix": "[parameters(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "nic", "properties": {"primary": true, "ipConfigurations": [{"name": "ipconfig", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerBackEndName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerNatPoolName\'))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"name": "customScript", "properties": {"publisher": "Microsoft.Compute", "settings": {"fileUris": ["[variables(\'scriptLocation\')]"]}, "typeHandlerVersion": "1.8", "autoUpgradeMinorVersion": true, "protectedSettings": {"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File scripts/helloWorld.ps1"}, "type": "CustomScriptExtension"}}]}}}}, {"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'vnetName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-07-01", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-07-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[toLower(parameters(\'vmssName\'))]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-07-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "[variables(\'loadBalancerFrontEndName\')]", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'loadBalancerBackendName\')]"}], "loadBalancingRules": [{"name": "roundRobinLBRule", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), variables(\'loadBalancerFrontEndName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerBackendName\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'loadBalancerName\'), variables(\'loadBalancerProbeName\'))]"}}}], "probes": [{"name": "[variables(\'loadBalancerProbeName\')]", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": "5", "numberOfProbes": "2"}}], "inboundNatPools": [{"name": "[variables(\'loadBalancerNatPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), variables(\'loadBalancerFrontEndName\'))]"}, "protocol": "Tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50019, "backendPort": 3389}}]}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmSku="Standard_D2s_v3"\nvmssName="zytest"\ninstanceCount=2\nadminUsername="zytest"\nadminPassword="zytest"\nlocation="westus"\n_artifactsLocationSasToken=""\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n\n# Define variables\nvnetName="vnet"\nsubnetName="subnet"\npublicIPAddressName="pip"\nloadBalancerName="loadBalancer"\nloadBalancerFrontEndName="loadBalancerFrontEnd"\nloadBalancerBackEndName="loadBalancerBackEnd"\nloadBalancerProbeName="loadBalancerHttpProbe"\nloadBalancerNatPoolName="loadBalancerNatPool"\nscriptLocation="[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/helloWorld.ps1\', parameters(\'_artifactsLocationSasToken\')))]"\n\n# Create resources\naz network vnet create --name $vnetName --resource-group $resourceGroupName --location $location --address-prefix 10.0.0.0/16 --subnet-name $subnetName --subnet-prefix 10.0.0.0/24\n\naz network public-ip create --name $publicIPAddressName --resource-group $resourceGroupName --location $location --allocation-method Dynamic --dns-name $vmssName\n\naz network lb create --name $loadBalancerName --resource-group $resourceGroupName --location $location --frontend-ip-name $loadBalancerFrontEndName --public-ip-address $publicIPAddressName --backend-pool-name $loadBalancerBackEndName\n\naz network lb rule create --resource-group $resourceGroupName --lb-name $loadBalancerName --name roundRobinLBRule --protocol Tcp --frontend-port 80 --backend-port 80 --frontend-ip-name $loadBalancerFrontEndName --backend-pool-name $loadBalancerBackEndName\n\naz network lb probe create --resource-group $resourceGroupName --lb-name $loadBalancerName --name $loadBalancerProbeName --protocol Tcp --port 80 --interval 5 --count 2\n\naz network lb inbound-nat-pool create --resource-group $resourceGroupName --lb-name $loadBalancerName --name $loadBalancerNatPoolName --protocol Tcp --frontend-port-range-start 50000 --frontend-port-range-end 50019 --backend-port 3389 --frontend-ip-name $loadBalancerFrontEndName\n\naz vmss create --name $vmssName --resource-group $resourceGroupName --location $location --vm-sku $vmSku --instance-count $instanceCount --admin-username $adminUsername --admin-password $adminPassword --vnet-name $vnetName --subnet $subnetName --load-balancer $loadBalancerName --public-ip-address $publicIPAddressName --upgrade-policy-mode Manual --overprovision true\n```\n\nPlease replace `$resourceGroupName` with your actual resource group name.


verify_result
