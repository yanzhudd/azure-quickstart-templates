arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "defaultValue": "azureuser", "metadata": {"description": "User name for the Virtual Machine."}}, "sshKeyData": {"type": "string", "metadata": {"description": "SSH rsa public key file as a string."}, "defaultValue": "zytest"}, "vmName": {"type": "string", "defaultValue": "multinicvm", "metadata": {"description": "Name of the VM"}}, "vmSize": {"defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of the VM"}, "type": "string"}, "ubuntuOSVersion": {"type": "string", "defaultValue": "18.04-LTS", "allowedValues": ["12.04.5-LTS", "14.04.4-LTS", "15.10", "18.04-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.4-LTS, 15.10, 18.04-LTS."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "description"}}}, "variables": {"storageAccountName": "[concat(uniquestring(resourceGroup().id), \'samultinic\')]", "storageAccountType": "Standard_LRS", "imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "sshKeyPath": "[concat(\'/home/\',parameters(\'adminUsername\'),\'/.ssh/authorized_keys\')]", "nic1Name": "nic1", "nic2Name": "nic2", "vnetName": "vnet", "vnetId": "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'vnetName\'))]", "addressPrefix": "10.0.0.0/16", "subnet1Name": "Frontend", "subnet1Id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnet1Name\'))]", "subnet1Prefix": "10.0.1.0/24", "subnet1PrivateAddress": "10.0.1.5", "subnet2Name": "Web", "subnet2Id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnet2Name\'))]", "subnet2Prefix": "10.0.2.0/24", "subnet2PrivateAddress": "10.0.2.5", "publicIPAddressName": "[concat(uniquestring(resourceGroup().id), \'PublicIp\')]", "publicIPAddressType": "Dynamic", "publicIPAddressId": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]", "networkSecurityGroupName": "default-NSG"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2019-06-01", "location": "[parameters(\'location\')]", "name": "[variables(\'storageAccountName\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "name": "[variables(\'vnetName\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "[variables(\'subnet1Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}, {"name": "[variables(\'subnet2Name\')]", "properties": {"addressPrefix": "[variables(\'subnet2Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "name": "[variables(\'publicIPAddressName\')]", "properties": {"dnsSettings": {"domainNameLabel": "[parameters(\'vmName\')]"}, "idleTimeoutInMinutes": 30, "publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]"}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-05-01", "dependsOn": ["[variables(\'vnetId\')]", "[variables(\'publicIPAddressId\')]"], "location": "[parameters(\'location\')]", "name": "[variables(\'nic1Name\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAddress": "[variables(\'subnet1PrivateAddress\')]", "privateIPAllocationMethod": "Static", "PublicIpAddress": {"Id": "[variables(\'publicIPAddressId\')]"}, "subnet": {"id": "[variables(\'subnet1Id\')]"}}}]}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-05-01", "dependsOn": ["[variables(\'vnetId\')]"], "location": "[parameters(\'location\')]", "name": "[variables(\'nic2Name\')]", "properties": {"ipConfigurations": [{"name": "ipconfig2", "properties": {"privateIPAddress": "[variables(\'subnet2PrivateAddress\')]", "privateIPAllocationMethod": "Static", "subnet": {"id": "[variables(\'subnet2Id\')]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2020-06-01", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nic1Name\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nic2Name\'))]"], "location": "[parameters(\'location\')]", "name": "[parameters(\'vmName\')]", "properties": {"diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\')), \'2019-06-01\').primaryEndpoints.blob]"}}, "hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic1Name\'))]", "properties": {"primary": true}}, {"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic2Name\'))]", "properties": {"primary": false}}]}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[variables(\'sshKeyPath\')]", "keyData": "[parameters(\'sshKeyData\')]"}]}}}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}}}], "outputs": {"sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', parameters(\'vmName\'), \'.\', parameters(\'location\'), \'.cloudapp.azure.com\')]"}}}


cli_script
```bash\n#!/bin/bash\n\n# Define the parameters\nadminUsername="azureuser"\nsshKeyData="zytest"\nvmName="multinicvm"\nvmSize="Standard_D2_v3"\nubuntuOSVersion="18.04-LTS"\nlocation="westus"\n\n# Define the variables\nstorageAccountName=$(az group deployment show --query "properties.outputs.storageAccountName.value" -g $resourceGroupName -n $deploymentName)\nstorageAccountType="Standard_LRS"\nimagePublisher="Canonical"\nimageOffer="UbuntuServer"\nsshKeyPath="/home/$adminUsername/.ssh/authorized_keys"\nnic1Name="nic1"\nnic2Name="nic2"\nvnetName="vnet"\n# The following resourceId commands will be replaced with actual resource IDs once the resources are created.\nvnetId=$(az network vnet show --name $vnetName --resource-group $resourceGroupName --query "id" -o tsv)\naddressPrefix="10.0.0.0/16"\nsubnet1Name="Frontend"\nsubnet1Id=$(az network vnet subnet show --name $subnet1Name --vnet-name $vnetName --resource-group $resourceGroupName --query "id" -o tsv)\nsubnet1Prefix="10.0.1.0/24"\nsubnet1PrivateAddress="10.0.1.5"\nsubnet2Name="Web"\nsubnet2Id=$(az network vnet subnet show --name $subnet2Name --vnet-name $vnetName --resource-group $resourceGroupName --query "id" -o tsv)\nsubnet2Prefix="10.0.2.0/24"\nsubnet2PrivateAddress="10.0.2.5"\npublicIPAddressName=$(az group deployment show --query "properties.outputs.publicIPAddressName.value" -g $resourceGroupName -n $deploymentName)\npublicIPAddressType="Dynamic"\npublicIPAddressId=$(az network public-ip show --name $publicIPAddressName --resource-group $resourceGroupName --query "id" -o tsv)\nnetworkSecurityGroupName="default-NSG"\n\n# Create the storage account\naz storage account create \\\n  --name $storageAccountName \\\n  --location $location \\\n  --sku $storageAccountType \\\n  --kind StorageV2 \\\n  --resource-group $resourceGroupName\n\n# Create the network security group with a default rule\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --location $location \\\n  --resource-group $resourceGroupName\n\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name "default-allow-22" \\\n  --priority 1000 \\\n  --access "Allow" \\\n  --direction "Inbound" \\\n  --destination-port-ranges 22 \\\n  --protocol Tcp \\\n  --source-address-prefix "*" \\\n  --source-port-range "*" \\\n  --destination-address-prefix "*" \\\n  --resource-group $resourceGroupName\n\n# Create the virtual network with two subnets\naz network vnet create \\\n  --name $vnetName \\\n  --location $location \\\n  --address-prefix $addressPrefix \\\n  --subnet-name $subnet1Name \\\n  --subnet-prefix $subnet1Prefix \\\n  --network-security-group $networkSecurityGroupName \\\n  --resource-group $resourceGroupName\n\naz network vnet subnet create \\\n  --name $subnet2Name \\\n  --vnet-name $vnetName \\\n  --address-prefix $subnet2Prefix \\\n  --network-security-group $networkSecurityGroupName \\\n  --resource-group $resourceGroupName\n\n# Create the public IP address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --allocation-method $publicIPAddressType \\\n  --dns-name $vmName \\\n  --resource-group $resourceGroupName\n\n# Create the network interfaces\naz network nic create \\\n  --name $nic1Name \\\n  --location $location \\\n  --vnet-name $vnetName \\\n  --subnet $subnet1Name \\\n  --private-ip-address $subnet1PrivateAddress \\\n  --public-ip-address $publicIPAddressName \\\n  --resource-group $resourceGroupName\n\naz network nic create \\\n  --name $nic2Name \\\n  --location $location \\\n  --vnet-name $vnetName \\\n  --subnet $subnet2Name \\\n  --private-ip-address $subnet2PrivateAddress \\\n  --resource-group $resourceGroupName\n\n# Create the virtual machine\naz vm create \\\n  --name $vmName \\\n  --location $location \\\n  --nics $nic1Name $nic2Name \\\n  --size $vmSize \\\n  --image $imagePublisher:$imageOffer:$ubuntuOSVersion:latest \\\n  --admin-username $adminUsername \\\n  --ssh-key-value "$sshKeyData" \\\n  --authentication-type ssh \\\n  --storage-sku $storageAccountType \\\n  --os-disk-name "${vmName}_osdisk" \\\n  --resource-group $resourceGroupName\n\n# Output the SSH command to connect to the VM\nsshCommand="ssh $adminUsername@${vmName}.${location}.cloudapp.azure.com"\necho "Use the following command to connect to the VM:"\necho $sshCommand\n```\n\nPlease replace `$resourceGroupName` and `$deploymentName` with your actual Azure resource group name and deployment name where required. The script assumes that the storage account and public IP address names are generated by the ARM template outputs, which are not directly available in the CLI environment. Therefore, you would need to retrieve these values after the resources have been created or define them explicitly.


verify_result
