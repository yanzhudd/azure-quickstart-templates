arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "linuxvm", "metadata": {"description": "The name of you Virtual Machine."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "password", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(concat(\'linuxvm-\', uniqueString(resourceGroup().id)))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "18.04-LTS", "allowedValues": ["12.04.5-LTS", "14.04.5-LTS", "16.04.0-LTS", "18.04-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "VmSize": {"type": "string", "defaultValue": "Standard_B2s", "metadata": {"description": "The size of the VM"}}, "virtualNetworkName": {"type": "string", "defaultValue": "vNet", "metadata": {"description": "Name of the VNET"}}, "subnetName": {"type": "string", "defaultValue": "Subnet", "metadata": {"description": "Name of the subnet in the virtual network"}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "SecGroupNet", "metadata": {"description": "Name of the Network Security Group"}}, "zone": {"type": "string", "defaultValue": "1", "allowedValues": ["1", "2", "3"], "metadata": {"description": "Zone number for the virtual machine"}}}, "variables": {"publicIpAddressName": "[concat(parameters(\'vmName\'), \'PublicIP\' )]", "networkInterfaceName": "[concat(parameters(\'vmName\'),\'NetInt\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "osDiskType": "StandardSSD_LRS", "subnetAddressPrefix": "10.1.0.0/24", "addressPrefix": "10.1.0.0/16", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[parameters(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "SSH", "properties": {"priority": 1000, "protocol": "TCP", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "22"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-05-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetAddressPrefix\')]", "privateEndpointNetworkPolicies": "Enabled", "privateLinkServiceNetworkPolicies": "Enabled"}}]}}, {"type": "Microsoft.Network/publicIpAddresses", "apiVersion": "2020-05-01", "name": "[variables(\'publicIpAddressName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Basic", "tier": "Regional"}, "zones": ["[parameters(\'zone\')]"], "properties": {"publicIpAllocationMethod": "Dynamic", "publicIPAddressVersion": "IPv4", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}, "idleTimeoutInMinutes": 4}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-05-01", "name": "[variables(\'networkInterfaceName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/publicIpAddresses\', variables(\'publicIpAddressName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "privateIPAllocationMethod": "Dynamic", "publicIpAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\',parameters(\'networkSecurityGroupName\'))]"}}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2020-06-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"], "zones": ["[parameters(\'zone\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'VmSize\')]"}, "storageProfile": {"osDisk": {"createOption": "fromImage", "managedDisk": {"storageAccountType": "[variables(\'osDiskType\')]"}}, "imageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"}]}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}}}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}, "hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
Based on the provided ARM template and parameters, below is the translated equivalent Azure CLI (bash) script:\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmName="linuxvm"\nadminUsername="zytest"\nauthenticationType="password"\nadminPasswordOrKey="zytest"\ndnsLabelPrefix=$(echo "linuxvm-$(uuidgen | tr \'[:upper:]\' \'[:lower:]\')" | cut -c 1-63)\nubuntuOSVersion="18.04-LTS"\nlocation="westus"\nVmSize="Standard_B2s"\nvirtualNetworkName="vNet"\nsubnetName="Subnet"\nnetworkSecurityGroupName="SecGroupNet"\nzone="1"\n\n# Variables (constructed from parameters)\npublicIpAddressName="${vmName}PublicIP"\nnetworkInterfaceName="${vmName}NetInt"\nsubnetRef="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/${virtualNetworkName}/subnets/${subnetName}"\nosDiskType="StandardSSD_LRS"\nsubnetAddressPrefix="10.1.0.0/24"\naddressPrefix="10.1.0.0/16"\n\n# Create Network Security Group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --resource-group {resourceGroupName} \\\n    --location $location\n\n# Create a security rule for SSH\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --resource-group {resourceGroupName} \\\n    --name SSH \\\n    --protocol Tcp \\\n    --priority 1000 \\\n    --destination-port-range 22 \\\n    --access Allow \\\n    --direction Inbound \\\n    --source-address-prefix \'*\' \\\n    --source-port-range \'*\'\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group {resourceGroupName} \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetAddressPrefix\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIpAddressName \\\n    --resource-group {resourceGroupName} \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $dnsLabelPrefix \\\n    --zone $zone\n\n# Create Network Interface\naz network nic create \\\n    --name $networkInterfaceName \\\n    --resource-group {resourceGroupName} \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --network-security-group $networkSecurityGroupName \\\n    --public-ip-address $publicIpAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --resource-group {resourceGroupName} \\\n    --location $location \\\n    --name $vmName \\\n    --nics $networkInterfaceName \\\n    --image UbuntuLTS \\\n    --size $VmSize \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --admin-password $adminPasswordOrKey \\\n    --os-disk-size-gb 30 \\\n    --os-disk-name "${vmName}OsDisk" \\\n    --os-disk-caching ReadWrite \\\n    --os-disk-storage-account-type $osDiskType \\\n    --zone $zone\n\n# Output the admin username\necho "Admin username: $adminUsername"\n\n# Output the hostname\nhostname=$(az network public-ip show --name $publicIpAddressName --resource-group {resourceGroupName} --query "dnsSettings.fqdn" -o tsv)\necho "Hostname: $hostname"\n\n# Output the SSH command\necho "SSH Command: ssh $adminUsername@$hostname"\n```\n\nPlease replace `{subscriptionId}` and `{resourceGroupName}` with your actual subscription ID and resource group name where you intend to deploy these resources.\n\nNote: The script assumes that you have the Azure CLI installed and you are logged in to your Azure account. The `uuidgen` command is used to generate a unique string for the `dnsLabelPrefix`. The `toLower` and `uniqueString` functions from the ARM template are replaced with equivalent bash commands. The `if` function in the ARM template, used for the `linuxConfiguration`, is not directly translated because the Azure CLI `az vm create` command automatically handles the authentication type based on the `--authentication-type` parameter.


verify_result
