arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[concat(\'ddvm-\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "OSVersion": {"type": "string", "defaultValue": "2019-Datacenter", "allowedValues": ["2019-Datacenter", "2016-Datacenter", "2016-Datacenter-Server-Core", "2016-Datacenter-Server-Core-smalldisk", "2016-Datacenter-smalldisk", "2016-Datacenter-with-Containers", "2016-Nano-Server"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."}}, "numberOfDataDisks": {"type": "int", "minValue": 0, "maxValue": 16, "defaultValue": 16, "metadata": {"description": "The number of dataDisks to be returned in the output array."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D8s_v3", "metadata": {"description": "description"}}}, "variables": {"imagePublisher": "MicrosoftWindowsServer", "imageOffer": "WindowsServer", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "vmName": "VMDataDisks", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "networkSecurityGroupName": "default-NSG"}, "resources": [{"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'OSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "copy": [{"name": "dataDisks", "count": "[parameters(\'numberOfDataDisks\')]", "input": {"diskSizeGB": 1023, "lun": "[copyIndex(\'dataDisks\')]", "createOption": "Empty"}}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}}}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Variable declarations from the TemplateParameters\nadminUsername="zytest" # User name for the Virtual Machine.\nadminPassword="zytest" # Password for the Virtual Machine.\ndnsLabelPrefix=$(az group show --name $RESOURCE_GROUP --query id --output tsv | xargs -I {} echo "ddvm-$(az group deployment create --resource-group {} --template-file template.json --query \'properties.outputs.uniqueString.value\' --output tsv)")\nOSVersion="2019-Datacenter" # The Windows version for the VM.\nnumberOfDataDisks=16 # The number of dataDisks to be returned in the output array.\nlocation="westus" # Location for all resources.\nvmSize="Standard_D8s_v3" # Size of the VM.\n\n# Variable declarations from the ARMTemplate\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressName="myPublicIP"\npublicIPAddressType="Dynamic"\nvmName="VMDataDisks"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="default-NSG"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method $publicIPAddressType \\\n    --dns-name $dnsLabelPrefix \\\n    --query [id] --output tsv\n\n# Create Network Security Group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location \\\n    --query [id] --output tsv\n\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name "default-allow-3389" \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --protocol Tcp \\\n    --destination-port-range 3389 \\\n    --source-address-prefix "*" \\\n    --source-port-range "*" \\\n    --destination-address-prefix "*" \\\n    --output none\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix \\\n    --network-security-group $networkSecurityGroupName \\\n    --query [id] --output tsv\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --public-ip-address $publicIPAddressName \\\n    --query [id] --output tsv\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --image $imagePublisher:$imageOffer:$OSVersion:latest \\\n    --size $vmSize \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --output none\n\n# Add data disks to the VM\nfor ((i=0; i<$numberOfDataDisks; i++))\ndo\n    az vm disk attach \\\n        --vm-name $vmName \\\n        --name "${vmName}-datadisk-$i" \\\n        --new \\\n        --size-gb 1023 \\\n        --lun $i \\\n        --sku Premium_LRS \\\n        --output none\ndone\n\n# Retrieve the fully qualified domain name (FQDN)\nhostname=$(az network public-ip show --name $publicIPAddressName --query "dnsSettings.fqdn" --output tsv)\necho "The FQDN of the VM is: $hostname"\n```\n\nPlease note that the `dnsLabelPrefix` variable in the script is generated dynamically using the unique string function from the resource group ID, which is similar to the ARM template expression. Also, the script assumes the use of the existing resource group environment variable `$RESOURCE_GROUP`. Adjust the script as necessary to fit your environment and deployment needs.


verify_result
