arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "suseOSVersion": {"type": "string", "defaultValue": "sles-15-sp2", "allowedValues": ["sles-15-sp2", "sles-15-sp1", "sles-12-sp5"], "metadata": {"description": "The SLES version for the VM. This will pick the latest available image of this given SLES version."}}, "vmSize": {"type": "string", "metadata": {"description": "Size of the virtual machine"}, "defaultValue": "Standard_D2_v3"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"storageAccountName": "[concat(uniquestring(resourceGroup().id), \'slesvm\')]", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "publicIPAddressName": "myPublicIP", "vmName": "MySUSEVM", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2019-06-01", "name": "[variables(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage"}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-05-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-05-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-05-01", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]", "[variables(\'virtualNetworkName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2019-12-01", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'storageAccountName\')]", "[variables(\'nicName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "SUSE", "offer": "[parameters(\'suseOSVersion\')]", "sku": "gen1", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'vmName\'),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": 100, "lun": 0, "name": "[concat(variables(\'vmName\'),\'_DataDisk1\')]", "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\')), \'2019-06-01\').primaryEndpoints.blob]"}}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
Below is the translated bash script from the provided ARM template and parameters. Please note that ARM templates may include certain properties and configurations that do not directly translate to Azure CLI commands. The script below is an attempt to create equivalent resources using Azure CLI to the best of my knowledge.\n\n```bash\n#!/bin/bash\n\n# Parameters\nadminUsername="zytest"\ndnsLabelPrefix="zytest"\nsuseOSVersion="sles-15-sp2"\nvmSize="Standard_D2_v3"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Variables\nstorageAccountName=$(az group show --name $(az group list --query \'[0].name\' -o tsv) --query id -o tsv | sha1sum | head -c 8)\'slesvm\'\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressName="myPublicIP"\nvmName="MySUSEVM"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="${subnetName}-nsg"\nsshKeyPath="/home/${adminUsername}/.ssh/authorized_keys"\n\n# Create Storage Account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --kind Storage\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $dnsLabelPrefix\n\n# Create Network Security Group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Create Security Rule\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name default-allow-22 \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --port 22 \\\n    --protocol Tcp \\\n    --source-address-prefix \'*\' \\\n    --destination-address-prefix \'*\'\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix \\\n    --network-security-group $networkSecurityGroupName\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --public-ip-address $publicIPAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --size $vmSize \\\n    --storage-sku Standard_LRS \\\n    --image SUSE:$suseOSVersion:gen1:latest \\\n    --admin-username $adminUsername \\\n    --generate-ssh-keys \\\n    --authentication-type $authenticationType\n\n# If using SSH key for authentication, set the SSH key\nif [ "$authenticationType" == "sshPublicKey" ]; then\n    az vm user update \\\n        --resource-group $(az group list --query \'[0].name\' -o tsv) \\\n        --name $vmName \\\n        --username $adminUsername \\\n        --ssh-key-value "$adminPasswordOrKey"\nfi\n\n# Enable Boot Diagnostics\nstorageUri=$(az storage account show --name $storageAccountName --query \'primaryEndpoints.blob\' -o tsv)\naz vm boot-diagnostics enable \\\n    --name $vmName \\\n    --storage $storageUri\n\n# Output hostname and ssh command\nhostname=$(az network public-ip show --name $publicIPAddressName --query \'dnsSettings.fqdn\' -o tsv)\nsshCommand="ssh $adminUsername@$hostname"\necho "Hostname: $hostname"\necho "SSH Command: $sshCommand"\n```\n\nRemember to replace the group name and resource names with the actual names you are using in your Azure environment. The script assumes that you are logged in to your Azure account using the Azure CLI and have the necessary permissions to create these resources.


verify_result
