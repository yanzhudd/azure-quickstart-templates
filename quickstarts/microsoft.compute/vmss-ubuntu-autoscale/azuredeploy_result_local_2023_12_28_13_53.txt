arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_A1", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "16.04-LTS", "allowedValues": ["14.04.4-LTS", "16.04-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 15.10, 14.04.4-LTS."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "minValue": 5, "maxValue": 100, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"namingInfix": "[toLower(substring(concat(parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "longNamingInfix": "[toLower(parameters(\'vmssName\'))]", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "publicIPAddressName": "[concat(variables(\'namingInfix\'), \'pip\')]", "subnetName": "[concat(variables(\'namingInfix\'), \'subnet\')]", "loadBalancerName": "[concat(variables(\'namingInfix\'), \'lb\')]", "publicIPAddressID": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]", "natPoolName": "[concat(variables(\'namingInfix\'), \'natpool\')]", "bePoolName": "[concat(variables(\'namingInfix\'), \'bepool\')]", "natStartPort": 50000, "natEndPort": 50119, "natBackendPort": 22, "nicName": "[concat(variables(\'namingInfix\'), \'nic\')]", "ipConfigName": "[concat(variables(\'namingInfix\'), \'ipconfig\')]", "osType": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-08-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-04-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[variables(\'longNamingInfix\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-04-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[variables(\'publicIPAddressID\')]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[variables(\'namingInfix\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-03-30", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "true", "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[variables(\'namingInfix\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools/\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools/\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}]}}]}}]}}}}, {"type": "Microsoft.Insights/autoscaleSettings", "apiVersion": "2015-04-01", "name": "autoscalewad", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachineScaleSets/\', variables(\'namingInfix\'))]"], "properties": {"name": "autoscalewad", "targetResourceUri": "[concat(\'/subscriptions/\',subscription().subscriptionId, \'/resourceGroups/\',  resourceGroup().name, \'/providers/Microsoft.Compute/virtualMachineScaleSets/\', variables(\'namingInfix\'))]", "enabled": true, "profiles": [{"name": "Profile1", "capacity": {"minimum": "1", "maximum": "10", "default": "1"}, "rules": [{"metricTrigger": {"metricName": "Percentage CPU", "metricResourceUri": "[concat(\'/subscriptions/\',subscription().subscriptionId, \'/resourceGroups/\',  resourceGroup().name, \'/providers/Microsoft.Compute/virtualMachineScaleSets/\', variables(\'namingInfix\'))]", "timeGrain": "PT1M", "statistic": "Average", "timeWindow": "PT5M", "timeAggregation": "Average", "operator": "GreaterThan", "threshold": 60}, "scaleAction": {"direction": "Increase", "type": "ChangeCount", "value": "1", "cooldown": "PT1M"}}, {"metricTrigger": {"metricName": "Percentage CPU", "metricResourceUri": "[concat(\'/subscriptions/\',subscription().subscriptionId, \'/resourceGroups/\',  resourceGroup().name, \'/providers/Microsoft.Compute/virtualMachineScaleSets/\', variables(\'namingInfix\'))]", "timeGrain": "PT1M", "statistic": "Average", "timeWindow": "PT5M", "timeAggregation": "Average", "operator": "LessThan", "threshold": 30}, "scaleAction": {"direction": "Decrease", "type": "ChangeCount", "value": "1", "cooldown": "PT5M"}}]}]}}]}


cli_script
Based on the provided ARM template and parameters, here is the equivalent Azure CLI bash script:\n\n```bash\n#!/bin/bash\n\n# Define the parameters\nvmSku="Standard_A1"\nubuntuOSVersion="16.04-LTS"\nvmssName="zytest"\ninstanceCount=5\nadminUsername="zytest"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Create a Virtual Network\naz network vnet create \\\n    --name "${vmssName}vnet" \\\n    --location "$location" \\\n    --address-prefixes "10.0.0.0/16" \\\n    --subnet-name "${vmssName}subnet" \\\n    --subnet-prefix "10.0.0.0/24"\n\n# Create a public IP address\naz network public-ip create \\\n    --name "${vmssName}pip" \\\n    --location "$location" \\\n    --allocation-method Dynamic \\\n    --dns-name "${vmssName}"\n\n# Create a Load Balancer\naz network lb create \\\n    --name "${vmssName}lb" \\\n    --location "$location" \\\n    --frontend-ip-name "LoadBalancerFrontEnd" \\\n    --public-ip-address "${vmssName}pip" \\\n    --backend-pool-name "${vmssName}bepool"\n\n# Create NAT pool for the Load Balancer\naz network lb inbound-nat-pool create \\\n    --lb-name "${vmssName}lb" \\\n    --name "${vmssName}natpool" \\\n    --protocol Tcp \\\n    --frontend-port-range-start 50000 \\\n    --frontend-port-range-end 50119 \\\n    --backend-port 22 \\\n    --frontend-ip-name "LoadBalancerFrontEnd"\n\n# Create a Virtual Machine Scale Set\naz vmss create \\\n    --name "${vmssName}" \\\n    --location "$location" \\\n    --vm-sku "$vmSku" \\\n    --instance-count "$instanceCount" \\\n    --admin-username "$adminUsername" \\\n    --authentication-type "$authenticationType" \\\n    --admin-password "$adminPasswordOrKey" \\\n    --image "Canonical:UbuntuServer:$ubuntuOSVersion:latest" \\\n    --vnet-name "${vmssName}vnet" \\\n    --subnet "${vmssName}subnet" \\\n    --lb "${vmssName}lb" \\\n    --backend-pool-name "${vmssName}bepool" \\\n    --upgrade-policy-mode "Manual"\n\n# Create an Autoscale Setting\naz monitor autoscale create \\\n    --resource-group "<your-resource-group-name>" \\\n    --name "autoscalewad" \\\n    --location "$location" \\\n    --target "/subscriptions/<your-subscription-id>/resourceGroups/<your-resource-group-name>/providers/Microsoft.Compute/virtualMachineScaleSets/${vmssName}" \\\n    --min-count 1 \\\n    --max-count 10 \\\n    --count 1 \\\n    --rules "Percentage CPU > 60 average 5m then increase count by 1" \\\n            "Percentage CPU < 30 average 5m then decrease count by 1"\n\n# Note: Replace <your-resource-group-name> and <your-subscription-id> with your actual resource group name and subscription ID.\n```\n\nPlease make sure to replace `<your-resource-group-name>` and `<your-subscription-id>` with your actual resource group name and subscription ID where required. The script assumes that the resource group already exists. If not, you will need to create it using `az group create` before running this script.


verify_result
