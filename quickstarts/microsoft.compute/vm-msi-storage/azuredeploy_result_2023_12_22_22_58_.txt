arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.19.5.34762", "templateHash": "585471578788851519"}}, "parameters": {"vmName": {"type": "string", "defaultValue": "vm-msi", "metadata": {"description": "The name of you Virtual Machine."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(format(\'vm-msi-{0}\', uniqueString(resourceGroup().id)))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "18_04-lts-gen2", "allowedValues": ["18_04-daily-lts-gen2", "18_04-lts-gen2"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "VmSize": {"type": "string", "defaultValue": "Standard_B2s", "metadata": {"description": "The size of the VM"}}, "virtualNetworkName": {"type": "string", "defaultValue": "vNet", "metadata": {"description": "Name of the VNET"}}, "subnetName": {"type": "string", "defaultValue": "Subnet", "metadata": {"description": "Name of the subnet in the virtual network"}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "SecGroupNet", "metadata": {"description": "Name of the Network Security Group"}}, "storageAccountResourceGroupName": {"type": "string", "metadata": {"description": "Resource group name for the storage account role assignment"}, "defaultValue": "zytest"}, "storageAccountName": {"type": "string", "metadata": {"description": "Storage account name the MSI will be given access to"}, "defaultValue": "zytest"}, "securityType": {"type": "string", "defaultValue": "TrustedLaunch", "allowedValues": ["Standard", "TrustedLaunch"], "metadata": {"description": "Security Type of the Virtual Machine."}}, "msiRole": {"type": "string", "defaultValue": "StorageBlobDataReader", "allowedValues": ["StorageBlobDataContributor", "StorageBlobDataOwner", "StorageBlobDataReader"], "metadata": {"description": "Role to assign to the MSI on the storage account"}}}, "variables": {"extensionName": "GuestAttestation", "extensionPublisher": "Microsoft.Azure.Security.LinuxAttestation", "extensionVersion": "1.0", "maaTenantName": "GuestAttestation", "securityProfileJson": {"uefiSettings": {"secureBootEnabled": true, "vTpmEnabled": true}, "securityType": "[parameters(\'securityType\')]"}, "publicIpAddressName": "[format(\'{0}PublicIP\', parameters(\'vmName\'))]", "networkInterfaceName": "[format(\'{0}NetInt\', parameters(\'vmName\'))]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "osDiskType": "StandardSSD_LRS", "subnetAddressPrefix": "10.1.0.0/24", "addressPrefix": "10.1.0.0/16", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[format(\'/home/{0}/.ssh/authorized_keys\', parameters(\'adminUsername\'))]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "roleDefinitionId": {"StorageBlobDataContributor": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'ba92f5b4-2d11-453d-a403-e96b0029c9fe\')]", "StorageBlobDataOwner": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'b7e6dc6d-f1e8-4753-8033-0f276bb0955b\')]", "StorageBlobDataReader": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'2a2b9908-6ea1-4ae2-8e65-a410df84e7d1\')]"}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2022-11-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetAddressPrefix\')]", "privateEndpointNetworkPolicies": "Enabled", "privateLinkServiceNetworkPolicies": "Enabled"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2022-11-01", "name": "[variables(\'publicIpAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "publicIPAddressVersion": "IPv4", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}, "idleTimeoutInMinutes": 4}, "sku": {"name": "Basic", "tier": "Regional"}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2022-11-01", "name": "[parameters(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "SSH", "properties": {"priority": 1000, "protocol": "TCP", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "22"}}]}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2022-11-01", "name": "[variables(\'networkInterfaceName\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIpAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]"}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIpAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2023-03-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "identity": {"type": "SystemAssigned"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'VmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), null(), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"osDisk": {"createOption": "fromImage", "managedDisk": {"storageAccountType": "[variables(\'osDiskType\')]"}}, "imageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}}, "securityProfile": "[if(equals(parameters(\'securityType\'), \'TrustedLaunch\'), variables(\'securityProfileJson\'), null())]", "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"}]}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"]}, {"condition": "[and(equals(parameters(\'securityType\'), \'TrustedLaunch\'), and(equals(variables(\'securityProfileJson\').uefiSettings.secureBootEnabled, true()), equals(variables(\'securityProfileJson\').uefiSettings.vTpmEnabled, true())))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2023-03-01", "name": "[format(\'{0}/{1}\', parameters(\'vmName\'), \'GuestAttestation\')]", "location": "[parameters(\'location\')]", "properties": {"publisher": "[variables(\'extensionPublisher\')]", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "enableAutomaticUpgrade": true, "settings": {"AttestationConfig": {"MaaSettings": {"maaEndpoint": "", "maaTenantName": "[variables(\'maaTenantName\')]"}, "AscSettings": {"ascReportingEndpoint": "", "ascReportingFrequency": ""}, "useCustomToken": "false", "disableAlerts": "false"}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}, {"type": "Microsoft.Resources/deployments", "apiVersion": "2022-09-01", "name": "assignRole", "resourceGroup": "[parameters(\'storageAccountResourceGroupName\')]", "properties": {"expressionEvaluationOptions": {"scope": "inner"}, "mode": "Incremental", "parameters": {"storageAccountName": {"value": "[parameters(\'storageAccountName\')]"}, "assignedRoleDefinitionId": {"value": "[variables(\'roleDefinitionId\')[parameters(\'msiRole\')]]"}, "principalId": {"value": "[reference(resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\')), \'2023-03-01\', \'full\').identity.principalId]"}}, "template": {"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.19.5.34762", "templateHash": "12777654874888638084"}}, "parameters": {"storageAccountName": {"type": "string"}, "assignedRoleDefinitionId": {"type": "string"}, "principalId": {"type": "string"}}, "variables": {"roleName": "[guid(parameters(\'assignedRoleDefinitionId\'), parameters(\'principalId\'), parameters(\'storageAccountName\'))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts/providers/roleAssignments", "apiVersion": "2022-04-01", "name": "[format(\'{0}/Microsoft.Authorization/{1}\', parameters(\'storageAccountName\'), variables(\'roleName\'))]", "properties": {"roleDefinitionId": "[parameters(\'assignedRoleDefinitionId\')]", "principalId": "[parameters(\'principalId\')]", "principalType": "ServicePrincipal"}}]}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}, "hostname": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIpAddressName\')), \'2022-11-01\').dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[format(\'ssh {0}@{1}\', parameters(\'adminUsername\'), reference(resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIpAddressName\')), \'2022-11-01\').dnsSettings.fqdn)]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmName="vm-msi"\nadminUsername="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\ndnsLabelPrefix=$(echo "vm-msi-$(az group show --name myResourceGroup --query id -o tsv | shasum | head -c 8)")\nubuntuOSVersion="18_04-lts-gen2"\nlocation="westus"\nVmSize="Standard_B2s"\nvirtualNetworkName="vNet"\nsubnetName="Subnet"\nnetworkSecurityGroupName="SecGroupNet"\nstorageAccountResourceGroupName="zytest"\nstorageAccountName="zytest"\nsecurityType="TrustedLaunch"\nmsiRole="StorageBlobDataReader"\n\n# Create virtual network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --address-prefix 10.1.0.0/16 \\\n    --subnet-name $subnetName \\\n    --subnet-prefix 10.1.0.0/24\n\n# Create public IP address\naz network public-ip create \\\n    --name "${vmName}PublicIP" \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --version IPv4 \\\n    --dns-name $dnsLabelPrefix \\\n    --idle-timeout 4\n\n# Create network security group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --resource-group myResourceGroup \\\n    --location $location\n\n# Add security rule to the NSG\naz network nsg rule create \\\n    --name "SSH" \\\n    --nsg-name $networkSecurityGroupName \\\n    --resource-group myResourceGroup \\\n    --priority 1000 \\\n    --protocol Tcp \\\n    --destination-port-range 22 \\\n    --access Allow \\\n    --direction Inbound\n\n# Create network interface\naz network nic create \\\n    --name "${vmName}NetInt" \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --subnet $subnetName \\\n    --vnet-name $virtualNetworkName \\\n    --public-ip-address "${vmName}PublicIP" \\\n    --network-security-group $networkSecurityGroupName\n\n# Create virtual machine\naz vm create \\\n    --name $vmName \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --nics "${vmName}NetInt" \\\n    --public-ip-address "${vmName}PublicIP" \\\n    --image UbuntuLTS \\\n    --size $VmSize \\\n    --admin-username $adminUsername \\\n    --generate-ssh-keys \\\n    --storage-sku StandardSSD_LRS \\\n    --os-disk-size-gb 30 \\\n    --authentication-type $authenticationType \\\n    --admin-password $adminPasswordOrKey \\\n    --assign-identity\n\n# Assign role to the MSI on the storage account\nprincipalId=$(az vm show --name $vmName --resource-group myResourceGroup --query identity.principalId -o tsv)\naz role assignment create \\\n    --role $msiRole \\\n    --assignee $principalId \\\n    --scope /subscriptions/{subscriptionId}/resourceGroups/$storageAccountResourceGroupName/providers/Microsoft.Storage/storageAccounts/$storageAccountName\n```\n\nPlease replace `{subscriptionId}` with your actual Azure subscription ID.


verify_result
