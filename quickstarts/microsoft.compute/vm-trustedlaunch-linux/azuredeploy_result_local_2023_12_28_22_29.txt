arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.13.1.58284", "templateHash": "5654752404139762531"}}, "parameters": {"vmName": {"type": "string", "defaultValue": "myTVM", "metadata": {"description": "The name of you virtual machine."}}, "sku": {"type": "string", "defaultValue": "Ubuntu-2004", "allowedValues": ["Ubuntu-1804", "Ubuntu-2004", "Ubuntu-2204", "RHEL-83", "SUSE-15-SP2"], "metadata": {"description": "The OS for the virtual machine. This will pick the latest fully patched image of the given OS."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "The size of the virtual machine"}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the virtual machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "password", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the virtual machine. SSH Public key is recommended."}}, "adminPasswordOrKey": {"type": "secureString", "metadata": {"description": "SSH Public Key or password for the virtual machine. SSH Public key is recommended."}, "defaultValue": "zytest"}, "secureBoot": {"type": "bool", "defaultValue": true, "metadata": {"description": "Secure Boot setting of the virtual machine."}}, "vTPM": {"type": "bool", "defaultValue": true, "metadata": {"description": "vTPM setting of the virtual machine."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(format(\'{0}-{1}\', parameters(\'vmName\'), uniqueString(resourceGroup().id)))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the virtual machine."}}, "publicIpName": {"type": "string", "defaultValue": "myPublicIP", "metadata": {"description": "Name for the Public IP used to access the virtual machine."}}, "publicIPAllocationMethod": {"type": "string", "defaultValue": "Dynamic", "allowedValues": ["Dynamic", "Static"], "metadata": {"description": "Allocation method for the Public IP used to access the virtual machine."}}, "publicIpSku": {"type": "string", "defaultValue": "Basic", "allowedValues": ["Basic", "Standard"], "metadata": {"description": "SKU for the Public IP used to access the virtual machine."}}, "nicName": {"type": "string", "defaultValue": "nic", "metadata": {"description": "Name of the network interface"}}, "virtualNetworkName": {"type": "string", "defaultValue": "vnet", "metadata": {"description": "Name of the virtual network"}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "nsg", "metadata": {"description": "Name of the network security group"}}, "maaEndpoint": {"type": "string", "defaultValue": "", "metadata": {"description": "Custom Attestation Endpoint to attest to. By default, MAA and ASC endpoints are empty and Azure values are populated based on the location of the VM."}}}, "variables": {"imageReference": {"Ubuntu-1804": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18_04-lts-gen2", "version": "latest"}, "Ubuntu-2004": {"publisher": "Canonical", "offer": "0001-com-ubuntu-server-focal", "sku": "20_04-lts-gen2", "version": "latest"}, "Ubuntu-2204": {"publisher": "Canonical", "offer": "0001-com-ubuntu-server-jammy", "sku": "22_04-lts-gen2", "version": "latest"}, "RHEL-83": {"publisher": "RedHat", "offer": "RHEL", "sku": "83-gen2", "version": "latest"}, "SUSE-15-SP2": {"publisher": "SUSE", "offer": "SLES-15-SP2", "sku": "gen2", "version": "latest"}}, "addressPrefix": "10.0.0.0/16", "disableAlerts": "false", "extensionName": "GuestAttestation", "extensionPublisher": "Microsoft.Azure.Security.LinuxAttestation", "extensionVersion": "1.0", "maaTenantName": "GuestAttestation", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), variables(\'subnetName\'))]", "useAlternateToken": "false", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[format(\'/home/{0}/.ssh/authorized_keys\', parameters(\'adminUsername\'))]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2022-05-01", "name": "[parameters(\'publicIpName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[parameters(\'publicIpSku\')]"}, "properties": {"publicIPAllocationMethod": "[parameters(\'publicIPAllocationMethod\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2022-05-01", "name": "[parameters(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "SSH", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourcePortRange": "*", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2022-05-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2022-05-01", "name": "[parameters(\'nicName\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2022-03-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "identity": {"type": "SystemAssigned"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), null(), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"osDisk": {"createOption": "FromImage", "managedDisk": {"storageAccountType": "StandardSSD_LRS"}}, "imageReference": "[variables(\'imageReference\')[parameters(\'sku\')]]"}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', parameters(\'nicName\'))]"}]}, "securityProfile": {"uefiSettings": {"secureBootEnabled": "[parameters(\'secureBoot\')]", "vTpmEnabled": "[parameters(\'vTPM\')]"}, "securityType": "TrustedLaunch"}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', parameters(\'nicName\'))]"]}, {"condition": "[and(parameters(\'vTPM\'), parameters(\'secureBoot\'))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2022-03-01", "name": "[format(\'{0}/{1}\', parameters(\'vmName\'), variables(\'extensionName\'))]", "location": "[parameters(\'location\')]", "properties": {"publisher": "[variables(\'extensionPublisher\')]", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "settings": {"AttestationConfig": {"MaaSettings": {"maaEndpoint": "[parameters(\'maaEndpoint\')]", "maaTenantName": "[variables(\'maaTenantName\')]"}, "AscSettings": {"ascReportingEndpoint": "[substring(parameters(\'maaEndpoint\'), 0, 0)]", "ascReportingFrequency": "[substring(parameters(\'maaEndpoint\'), 0, 0)]"}, "useCustomToken": "[variables(\'useAlternateToken\')]", "disableAlerts": "[variables(\'disableAlerts\')]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}], "outputs": {"hostname": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\')), \'2022-05-01\').dnsSettings.fqdn]"}}}


cli_script
Below is the Bash script that translates the provided ARM template into Azure CLI commands. I\'ve converted the parameters into variables and translated each resource into its corresponding Azure CLI command. Note that the ARM template uses expressions like `[parameters(\'parameterName\')]` and `[variables(\'variableName\')]`, which have been replaced with the appropriate Bash variables.\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmName="myTVM"\nsku="Ubuntu-2004"\nvmSize="Standard_D2s_v3"\nadminUsername="zytest"\nauthenticationType="password"\nadminPasswordOrKey="zytest"\nsecureBoot=true\nvTPM=true\nlocation="westus"\ndnsLabelPrefix="$(echo $vmName | tr \'[:upper:]\' \'[:lower:]\')-$(echo -n $RANDOM | md5sum | head -c 10)"\npublicIpName="myPublicIP"\npublicIPAllocationMethod="Dynamic"\npublicIpSku="Basic"\nnicName="nic"\nvirtualNetworkName="vnet"\nnetworkSecurityGroupName="nsg"\nmaaEndpoint=""\n\n# Variables\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name "$publicIpName" \\\n    --location "$location" \\\n    --allocation-method "$publicIPAllocationMethod" \\\n    --sku "$publicIpSku" \\\n    --dns-name "$dnsLabelPrefix" \\\n    --query "publicIp.id" \\\n    --output tsv\n\n# Create Network Security Group and Rule\naz network nsg create \\\n    --name "$networkSecurityGroupName" \\\n    --location "$location"\n\naz network nsg rule create \\\n    --nsg-name "$networkSecurityGroupName" \\\n    --name "SSH" \\\n    --priority 1000 \\\n    --access "Allow" \\\n    --direction "Inbound" \\\n    --destination-port-ranges "22" \\\n    --protocol "Tcp" \\\n    --source-port-ranges "*" \\\n    --source-address-prefixes "*" \\\n    --destination-address-prefixes "*" \\\n    --location "$location"\n\n# Create Virtual Network and Subnet\naz network vnet create \\\n    --name "$virtualNetworkName" \\\n    --location "$location" \\\n    --address-prefix "$addressPrefix" \\\n    --subnet-name "$subnetName" \\\n    --subnet-prefix "$subnetPrefix" \\\n    --network-security-group "$networkSecurityGroupName"\n\n# Create Network Interface\naz network nic create \\\n    --name "$nicName" \\\n    --location "$location" \\\n    --vnet-name "$virtualNetworkName" \\\n    --subnet "$subnetName" \\\n    --public-ip-address "$publicIpName"\n\n# Create Virtual Machine\naz vm create \\\n    --name "$vmName" \\\n    --location "$location" \\\n    --size "$vmSize" \\\n    --image "$sku" \\\n    --admin-username "$adminUsername" \\\n    --authentication-type "$authenticationType" \\\n    --admin-password "$adminPasswordOrKey" \\\n    --nics "$nicName" \\\n    --generate-ssh-keys\n\n# If vTPM and secureBoot are enabled, add the extension\nif [ "$vTPM" = true ] && [ "$secureBoot" = true ]; then\n    az vm extension set \\\n        --vm-name "$vmName" \\\n        --name "GuestAttestation" \\\n        --publisher "Microsoft.Azure.Security.LinuxAttestation" \\\n        --settings \'{"AttestationConfig":{"MaaSettings":{"maaEndpoint":"\'"$maaEndpoint"\'","maaTenantName":"GuestAttestation"},"AscSettings":{"ascReportingEndpoint":"","ascReportingFrequency":""},"useCustomToken":false,"disableAlerts":false}}\'\nfi\n\n# Get the fully qualified domain name of the public IP\nfqdn=$(az network public-ip show --name "$publicIpName" --query "dnsSettings.fqdn" --output tsv)\necho "Hostname: $fqdn"\n```\n\nPlease note that the `dnsLabelPrefix` is generated using a unique string function in the ARM template, which I approximated with a random string in Bash. Also, the `imageReference` variable from the ARM template is not directly used in Azure CLI, as the `az vm create` command determines the image based on the `--image` parameter. You may need to adjust the `--image` parameter based on the SKU provided in the ARM template\'s variables section.\n\nThe script assumes you have the Azure CLI installed and logged in to an Azure account with the necessary permissions to create these resources. Make sure to review and test the script in a safe environment before running it in a production environment.


verify_result
