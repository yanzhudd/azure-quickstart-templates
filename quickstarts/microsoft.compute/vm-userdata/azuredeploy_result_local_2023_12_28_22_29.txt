arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"dnsLabelPrefix": {"type": "string", "defaultValue": "[uniqueString(resourceGroup().id)]", "metadata": {"description": "Unique DNS Name for the public IP address"}}, "adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "userData": {"type": "string", "metadata": {"description": "String passed down to the Virtual Machine."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "VM size"}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "18.04-LTS", "allowedValues": ["12.04.5-LTS", "14.04.5-LTS", "16.04.0-LTS", "18.04-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.10."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "nicName": "networkInterface1", "vmName": "vm1", "virtualNetworkName": "virtualNetwork1", "publicIPAddressName": "publicIp1", "addressPrefix": "10.0.0.0/16", "subnet1Name": "Subnet-1", "subnet1Prefix": "10.0.0.0/24", "publicIPAddressType": "Dynamic", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "default-NSG"}, "resources": [{"apiVersion": "2019-06-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-08-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2019-06-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "[variables(\'subnet1Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2019-06-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]", "[variables(\'virtualNetworkName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnet1Name\'))]"}}}]}}, {"apiVersion": "2021-03-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'nicName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "userData": "[base64(parameters(\'userData\'))]", "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}]}


cli_script
Below is the translated bash script from the given ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\ndnsLabelPrefix=$(az deployment group create --query "properties.outputs.dnsLabelPrefix.value" -o tsv)\nadminUsername="zytest"\nuserData="zytest"\nvmSize="Standard_D2_v3"\nubuntuOSVersion="18.04-LTS"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Variables\nimagePublisher="Canonical"\nimageOffer="UbuntuServer"\nnicName="networkInterface1"\nvmName="vm1"\nvirtualNetworkName="virtualNetwork1"\npublicIPAddressName="publicIp1"\naddressPrefix="10.0.0.0/16"\nsubnet1Name="Subnet-1"\nsubnet1Prefix="10.0.0.0/24"\npublicIPAddressType="Dynamic"\nnetworkSecurityGroupName="default-NSG"\nlinuxConfiguration=$(jq -n --arg username "$adminUsername" --arg key "$adminPasswordOrKey" \'{"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": ("/home/" + $username + "/.ssh/authorized_keys"), "keyData": $key}]}}\')\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method $publicIPAddressType \\\n    --dns-name $dnsLabelPrefix\n\n# Create Network Security Group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Create Security Rule\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name "default-allow-22" \\\n    --priority 1000 \\\n    --access "Allow" \\\n    --direction "Inbound" \\\n    --destination-port-ranges 22 \\\n    --protocol Tcp \\\n    --source-address-prefix "*" \\\n    --source-port-range "*" \\\n    --destination-address-prefix "*"\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnet1Name \\\n    --subnet-prefix $subnet1Prefix \\\n    --network-security-group $networkSecurityGroupName\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnet1Name \\\n    --public-ip-address $publicIPAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --size $vmSize \\\n    --image $imagePublisher:$imageOffer:$ubuntuOSVersion:latest \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --ssh-key-values "$adminPasswordOrKey" \\\n    --custom-data "$userData" \\\n    --os-disk-name "${vmName}_osdisk" \\\n    --generate-ssh-keys\n\n# Conditional Linux Configuration\nif [ "$authenticationType" == "sshPublicKey" ]; then\n    az vm update \\\n        --name $vmName \\\n        --resource-group <ResourceGroupName> \\\n        --set osProfile.linuxConfiguration="$linuxConfiguration"\nfi\n```\n\nPlease note that you need to replace `<ResourceGroupName>` with the actual resource group name where the resources are being deployed. The `dnsLabelPrefix` is generated using a unique string function in ARM, but in the CLI script, you\'ll need to handle that differently, possibly by using the `az deployment group create` command with a query to get the output value, or by generating a unique string in bash.\n\nAdditionally, the `adminPasswordOrKey` parameter is declared as a secure string in the ARM template. In the script, you should replace the placeholder `"zytest"` with the actual SSH key or password you want to use, ensuring that sensitive data is handled securely.\n\nLastly, for the `userData` field, the ARM template uses a base64 encoding function. In the CLI script, you should encode the `userData` value to base64 if required by your use case.


verify_result
