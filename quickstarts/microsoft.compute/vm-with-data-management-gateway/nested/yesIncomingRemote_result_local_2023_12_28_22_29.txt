arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "zytest"}, "networkSecurityGroupName": {"type": "string", "defaultValue": "zytest"}, "publicIPAddressName": {"type": "string", "defaultValue": "zytest"}, "existingVnetLocation": {"type": "string", "defaultValue": "zytest"}}, "variables": {"dnsLabelPrefix": "[concat(toLower(parameters(\'vmName\')), uniquestring(resourceGroup().id, parameters(\'vmName\')))]"}, "resources": [{"apiVersion": "2016-03-30", "type": "Microsoft.Network/publicIPAddresses", "name": "[parameters(\'publicIPAddressName\')]", "location": "[parameters(\'existingVnetLocation\')]", "tags": {"vmname": "[parameters(\'vmName\')]"}, "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[variables(\'dnsLabelPrefix\')]"}}}, {"name": "[parameters(\'networkSecurityGroupName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2016-09-01", "location": "[parameters(\'existingVnetLocation\')]", "tags": {"vmname": "[parameters(\'vmName\')]"}, "properties": {"securityRules": [{"name": "default-allow-rdp", "properties": {"priority": 1000, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "3389", "access": "Allow", "direction": "Inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}, {"name": "ResourceManager", "properties": {"priority": 1010, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "8050", "access": "Allow", "direction": "Inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}], "outputs": {"hostname": {"type": "string", "value": "[reference(parameters(\'publicIPAddressName\')).dnsSettings.fqdn]"}}}


cli_script
Below is the equivalent Azure CLI script translated from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Define variables from template parameters\nvmName="zytest"\nnetworkSecurityGroupName="zytest"\npublicIPAddressName="zytest"\nexistingVnetLocation="zytest"\n\n# Create the public IP address\n# Note: Azure CLI does not support setting the DNS label prefix directly.\n# You need to generate the unique DNS label prefix programmatically if required.\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $existingVnetLocation \\\n    --allocation-method Dynamic \\\n    --tags vmname=$vmName\n\n# Create the network security group with security rules\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $existingVnetLocation \\\n    --tags vmname=$vmName\n\n# Add security rule for default-allow-rdp\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name "default-allow-rdp" \\\n    --priority 1000 \\\n    --source-address-prefixes "*" \\\n    --destination-address-prefixes "*" \\\n    --protocol Tcp \\\n    --destination-port-ranges 3389 \\\n    --access Allow \\\n    --direction Inbound \\\n    --source-port-ranges "*"\n\n# Add security rule for ResourceManager\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name "ResourceManager" \\\n    --priority 1010 \\\n    --source-address-prefixes "*" \\\n    --destination-address-prefixes "*" \\\n    --protocol Tcp \\\n    --destination-port-ranges 8050 \\\n    --access Allow \\\n    --direction Inbound \\\n    --source-port-ranges "*"\n\n# Output the fully qualified domain name (FQDN) of the public IP address\n# Note: The FQDN is not immediately available after public IP creation, it may take a short time to be active.\nfqdn=$(az network public-ip show --name $publicIPAddressName --query "dnsSettings.fqdn" -o tsv)\necho "The FQDN of the public IP address is: $fqdn"\n```\n\nPlease note that the unique DNS label prefix calculation using `uniquestring` function is not directly translatable to Azure CLI, as Azure CLI does not have a built-in function equivalent to ARM template\'s `uniquestring`. You would need to generate a unique DNS label prefix using a custom method or script if required. The output command assumes that the public IP address has been successfully created and its DNS settings have been configured.


verify_result
