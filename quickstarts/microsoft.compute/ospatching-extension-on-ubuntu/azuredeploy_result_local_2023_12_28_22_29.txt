arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSize": {"type": "string", "metadata": {"description": "Size of vm"}, "defaultValue": "Standard_D2_v3"}, "username": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "newStorageAccountName": {"type": "string", "metadata": {"description": "Unique DNS Name for the Storage Account where the Virtual Machine\'s disks will be placed."}, "defaultValue": "zytest"}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "rebootAfterPatch": {"type": "string", "defaultValue": "Auto", "metadata": {"description": "The reboot behavior after patching."}, "allowedValues": ["RebootIfNeed", "Required", "NotRequired", "Auto"]}, "category": {"type": "string", "defaultValue": "ImportantAndRecommended", "metadata": {"description": "Type of patches to install."}, "allowedValues": ["Important", "ImportantAndRecommended"]}, "installDuration": {"type": "string", "defaultValue": "01:00", "metadata": {"description": "The allowed total time for installation."}}, "oneoff": {"type": "bool", "defaultValue": false, "metadata": {"description": "Patch the OS immediately."}, "allowedValues": [true, false]}, "dayOfWeek": {"type": "string", "defaultValue": "Sunday|Wednesday", "metadata": {"description": "The patching date (of the week)You can specify multiple days in a week."}}, "startTime": {"type": "string", "defaultValue": "03:00", "metadata": {"description": "Start time of patching."}}, "idleTestScript": {"type": "string", "defaultValue": "", "metadata": {"description": "The uri of the idle test script"}}, "healthyTestScript": {"type": "string", "defaultValue": "", "metadata": {"description": "The uri of the healthy test script"}}, "storageAccountName": {"type": "string", "defaultValue": "zytest", "metadata": {"description": "The name of storage account."}}, "storageAccountResourceId": {"type": "string", "defaultValue": "", "metadata": {"description": "ResourceId for Storage account."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"scenarioPrefix": "ospatchingLinux", "imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "ubuntuOSVersion": "18.04-LTS", "nicName": "[concat(variables(\'scenarioPrefix\'),\'Nic\')]", "vnetAddressPrefix": "10.0.0.0/16", "subnetName": "[concat(variables(\'scenarioPrefix\'),\'Subnet\')]", "subnetPrefix": "10.0.0.0/24", "storageAccountType": "Standard_LRS", "publicIPAddressName": "[concat(variables(\'scenarioPrefix\'),\'PublicIp\')]", "publicIPAddressType": "Dynamic", "vmName": "[concat(variables(\'scenarioPrefix\'),\'VM\')]", "virtualNetworkName": "[concat(variables(\'scenarioPrefix\'),\'Vnet\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'username\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[parameters(\'newStorageAccountName\')]", "apiVersion": "2021-04-01", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'vnetAddressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2019-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', parameters(\'newStorageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'username\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'vmName\'),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmName\'),\'/installospatching\')]", "apiVersion": "2019-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/\', variables(\'vmName\'))]"], "properties": {"publisher": "Microsoft.OSTCExtensions", "type": "OSPatchingForLinux", "typeHandlerVersion": "2.0", "settings": {"disabled": false, "stop": false, "rebootAfterPatch": "[parameters(\'rebootAfterPatch\')]", "category": "[parameters(\'category\')]", "installDuration": "[parameters(\'installDuration\')]", "oneoff": "[parameters(\'oneoff\')]", "intervalOfWeeks": "1", "dayOfWeek": "[parameters(\'dayOfWeek\')]", "startTime": "[parameters(\'startTime\')]", "vmStatusTest": {"local": false, "idleTestScript": "[parameters(\'idleTestScript\')]", "healthyTestScript": "[parameters(\'healthyTestScript\')]"}}, "protectedSettings": {"storageAccountName": "[parameters(\'storageAccountName\')]", "storageAccountKey": "[listKeys(parameters(\'storageAccountResourceId\'), \'2021-04-01\').keys[0].value]"}}}]}


cli_script
Below is the equivalent Azure CLI script for the provided ARM template. I have translated the resources into their corresponding Azure CLI commands and converted the parameters into bash variables. The script assumes that you have the Azure CLI installed and are authenticated to an Azure subscription.\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nvmSize="Standard_D2_v3"\nusername="zytest"\nnewStorageAccountName="zytest"\ndnsNameForPublicIP="zytest"\nrebootAfterPatch="Auto"\ncategory="ImportantAndRecommended"\ninstallDuration="01:00"\noneoff=false\ndayOfWeek="Sunday|Wednesday"\nstartTime="03:00"\nidleTestScript=""\nhealthyTestScript=""\nstorageAccountName="zytest"\nstorageAccountResourceId=""\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Variables\nscenarioPrefix="ospatchingLinux"\nimagePublisher="Canonical"\nimageOffer="UbuntuServer"\nubuntuOSVersion="18.04-LTS"\nnicName="${scenarioPrefix}Nic"\nvnetAddressPrefix="10.0.0.0/16"\nsubnetName="${scenarioPrefix}Subnet"\nsubnetPrefix="10.0.0.0/24"\nstorageAccountType="Standard_LRS"\npublicIPAddressName="${scenarioPrefix}PublicIp"\npublicIPAddressType="Dynamic"\nvmName="${scenarioPrefix}VM"\nvirtualNetworkName="${scenarioPrefix}Vnet"\nsubnetRef=$(az network vnet subnet show --name $subnetName --vnet-name $virtualNetworkName --query id --output tsv)\nlinuxConfiguration=$(echo "{\\"disablePasswordAuthentication\\": true, \\"ssh\\": {\\"publicKeys\\": [{\\"path\\": \\"/home/$username/.ssh/authorized_keys\\", \\"keyData\\": \\"$adminPasswordOrKey\\"}]}}")\n\n# Create a new storage account\naz storage account create \\\n  --name $newStorageAccountName \\\n  --location $location \\\n  --sku $storageAccountType \\\n  --kind StorageV2\n\n# Create a public IP address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --allocation-method $publicIPAddressType \\\n  --dns-name $dnsNameForPublicIP\n\n# Create a virtual network\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --location $location \\\n  --address-prefixes $vnetAddressPrefix \\\n  --subnet-name $subnetName \\\n  --subnet-prefix $subnetPrefix\n\n# Create a network interface\naz network nic create \\\n  --name $nicName \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetName \\\n  --public-ip-address $publicIPAddressName\n\n# Create a virtual machine\naz vm create \\\n  --name $vmName \\\n  --location $location \\\n  --nics $nicName \\\n  --size $vmSize \\\n  --image $imagePublisher:$imageOffer:$ubuntuOSVersion:latest \\\n  --admin-username $username \\\n  --authentication-type $authenticationType \\\n  --admin-password-or-ssh-key $adminPasswordOrKey \\\n  --custom-data $linuxConfiguration\n\n# Install OSPatching extension on the virtual machine\naz vm extension set \\\n  --vm-name $vmName \\\n  --name installospatching \\\n  --publisher Microsoft.OSTCExtensions \\\n  --extension-type OSPatchingForLinux \\\n  --settings "{\\"disabled\\": false, \\"stop\\": false, \\"rebootAfterPatch\\": \\"$rebootAfterPatch\\", \\"category\\": \\"$category\\", \\"installDuration\\": \\"$installDuration\\", \\"oneoff\\": $oneoff, \\"intervalOfWeeks\\": \\"1\\", \\"dayOfWeek\\": \\"$dayOfWeek\\", \\"startTime\\": \\"$startTime\\", \\"vmStatusTest\\": {\\"local\\": false, \\"idleTestScript\\": \\"$idleTestScript\\", \\"healthyTestScript\\": \\"$healthyTestScript\\"}}" \\\n  --protected-settings "{\\"storageAccountName\\": \\"$storageAccountName\\", \\"storageAccountKey\\": \\"$(az storage account keys list --account-name $storageAccountName --query \'[0].value\' --output tsv)\\"}"\n```\n\nPlease note that this script assumes that the storage account and virtual network exist or are created successfully before attempting to create the network interface and virtual machine. Additionally, the `az vm extension set` command is used to install the OSPatching extension, and the `az storage account keys list` command is used to retrieve the storage account key for the protected settings. Adjust the script as needed based on your actual Azure environment and requirements.


verify_result
