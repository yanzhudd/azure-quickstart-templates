arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "minLength": 3, "maxLength": 61, "defaultValue": "zytest"}, "capacity": {"type": "int", "metadata": {"description": "Number of VM instances (20 or less)."}, "defaultValue": 2, "minValue": 1, "maxValue": 20}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password on all VMs. It must be at least 12 characters in length."}, "minLength": 12, "defaultValue": "zytest"}, "sourceImageVhdUri": {"type": "string", "metadata": {"description": "The source of the blob containing the custom image, must be in the same region of the deployment."}, "defaultValue": "zytest"}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}, "defaultValue": ""}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"vmssuniqueName": "[toLower(take(concat(take(parameters(\'vmssName\'),6), uniqueString(resourceGroup().id)), 9))]", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(variables(\'vmssuniqueName\'), \'vnet\')]", "subnetName": "[concat(variables(\'vmssuniqueName\'), \'subnet\')]", "lbName": "[concat(variables(\'vmssuniqueName\'), \'lb\')]", "bepoolName": "[concat(variables(\'lbName\'), \'bepool\')]", "fepoolName": "[concat(variables(\'lbName\'), \'fepool\')]", "bepoolID": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'lbName\'), variables(\'bepoolName\'))]", "feIpConfigName": "[concat(variables(\'fepoolName\'), \'IpConfig\')]", "feIpConfigId": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'lbName\'), variables(\'feIpConfigName\'))]", "pipName": "[concat(variables(\'vmssuniqueName\'), \'pip\')]", "nicName": "[concat(variables(\'vmssuniqueName\'), \'nic\')]", "natPoolName": "[concat(variables(\'lbName\'), \'natpool\')]", "ipConfigName": "[concat(variables(\'vmssuniqueName\'), \'ipconfig\')]", "httpProbeName": "httpProbe", "httpsProbeName": "httpsProbe", "imageName": "myCustomImage"}, "resources": [{"type": "Microsoft.Compute/images", "apiVersion": "2020-06-01", "name": "[variables(\'imageName\')]", "location": "[parameters(\'location\')]", "properties": {"hyperVGeneration": "V1", "storageProfile": {"osDisk": {"osType": "Linux", "osState": "Generalized", "blobUri": "[parameters(\'sourceImageVhdUri\')]", "storageAccountType": "Standard_LRS"}}}}, {"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-06-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'pipName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-06-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[variables(\'vmssuniqueName\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'lbName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-06-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'pipName\'))]"], "tags": {"displayName": "Load Balancer"}, "properties": {"frontendIPConfigurations": [{"name": "[variables(\'feIpConfigName\')]", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'pipName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bepoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[variables(\'feIpConfigId\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 10022, "frontendPortRangeEnd": 11022, "backendPort": 22}}], "loadBalancingRules": [{"name": "HTTPRule", "properties": {"loadDistribution": "Default", "frontendIPConfiguration": {"id": "[variables(\'feIpConfigId\')]"}, "backendAddressPool": {"id": "[variables(\'bepoolID\')]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'lbName\'), variables(\'httpsProbeName\'))]"}}}, {"name": "HTTPSRule", "properties": {"loadDistribution": "Default", "frontendIPConfiguration": {"id": "[variables(\'feIpConfigId\')]"}, "backendAddressPool": {"id": "[variables(\'bepoolId\')]"}, "protocol": "Tcp", "frontendPort": 443, "backendPort": 443, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'lbName\'), variables(\'httpsProbeName\'))]"}}}], "probes": [{"name": "[variables(\'httpProbeName\')]", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}, {"name": "[variables(\'httpsProbeName\')]", "properties": {"protocol": "Tcp", "port": 443, "intervalInSeconds": 5, "numberOfProbes": 2}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[variables(\'vmssuniqueName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-06-01", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Compute/images\',variables(\'imageName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'capacity\')]"}, "properties": {"upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"imageReference": {"id": "[resourceId(\'Microsoft.Compute/images\', variables(\'imageName\'))]"}}, "osProfile": {"computerNamePrefix": "[variables(\'vmssuniqueName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'lbName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'lbName\'), variables(\'natPoolName\'))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"name": "updatescriptextension", "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/updateapp.sh\', parameters(\'_artifactsLocationSasToken\')))]", "[uri(parameters(\'_artifactsLocation\'), concat(\'app/package.tar.gz\', parameters(\'_artifactsLocationSasToken\')))]"], "commandToExecute": "[format(\'sudo bash {0} \\"{1}\\" {2} {3}\', \'updateapp.sh\', \'package.tar.gz\', \'/nodeserver\', \'mainsite.service\')]"}}}]}}}}, {"type": "Microsoft.Insights/autoscaleSettings", "apiVersion": "2015-04-01", "name": "autoscalesettings", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachineScaleSets\', variables(\'vmssuniqueName\'))]"], "properties": {"name": "autoscalesettings", "targetResourceUri": "[resourceId(\'Microsoft.Compute/virtualMachineScaleSets\', variables(\'vmssuniqueName\'))]", "enabled": true, "profiles": [{"name": "Profile1", "capacity": {"minimum": "2", "maximum": "20", "default": "[parameters(\'capacity\')]"}, "rules": [{"metricTrigger": {"metricName": "Percentage CPU", "metricResourceUri": "[resourceId(\'Microsoft.Compute/virtualMachineScaleSets\', variables(\'vmssuniqueName\'))]", "timeGrain": "PT1M", "statistic": "Average", "timeWindow": "PT5M", "timeAggregation": "Average", "operator": "GreaterThan", "threshold": 40.0}, "scaleAction": {"direction": "Increase", "type": "ChangeCount", "value": "1", "cooldown": "PT1M"}}, {"metricTrigger": {"metricName": "Percentage CPU", "metricResourceUri": "[resourceId(\'Microsoft.Compute/virtualMachineScaleSets\', variables(\'vmssuniqueName\'))]", "timeGrain": "PT1M", "statistic": "Average", "timeWindow": "PT5M", "timeAggregation": "Average", "operator": "LessThan", "threshold": 30.0}, "scaleAction": {"direction": "Decrease", "type": "ChangeCount", "value": "1", "cooldown": "PT5M"}}]}]}}], "outputs": {"fqdn": {"value": "[reference(resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'pipName\')),\'2020-06-01\').dnsSettings.fqdn]", "type": "string"}}}


cli_script
```bash\n#!/bin/bash\n\n# Parameters\nvmSku="Standard_D2s_v3"\nvmssName="zytest"\ncapacity=2\nadminUsername="zytest"\nadminPassword="zytest"\nsourceImageVhdUri="zytest"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\nlocation="westus"\n\n# Variables\nvmssuniqueName=$(echo -n "${vmssName}$(az group show --query id --output tsv | tr -d \'\\n\' | sha256sum)" | head -c 9 | tr \'[:upper:]\' \'[:lower:]\')\naddressPrefix="10.0.0.0/16"\nsubnetPrefix="10.0.0.0/24"\nvirtualNetworkName="${vmssuniqueName}vnet"\nsubnetName="${vmssuniqueName}subnet"\nlbName="${vmssuniqueName}lb"\nbepoolName="${lbName}bepool"\nfepoolName="${lbName}fepool"\npipName="${vmssuniqueName}pip"\nnicName="${vmssuniqueName}nic"\nnatPoolName="${lbName}natpool"\nipConfigName="${vmssuniqueName}ipconfig"\nhttpProbeName="httpProbe"\nhttpsProbeName="httpsProbe"\nimageName="myCustomImage"\n\n# Create a custom image\naz image create \\\n    --name $imageName \\\n    --location $location \\\n    --source $sourceImageVhdUri \\\n    --os-type Linux \\\n    --hyper-v-generation V1 \\\n    --storage-sku Standard_LRS\n\n# Create a virtual network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create a public IP address\naz network public-ip create \\\n    --name $pipName \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $vmssuniqueName\n\n# Create a load balancer\naz network lb create \\\n    --name $lbName \\\n    --location $location \\\n    --public-ip-address $pipName \\\n    --frontend-ip-name $fepoolName \\\n    --backend-pool-name $bepoolName\n\n# Create inbound NAT pool\naz network lb inbound-nat-pool create \\\n    --resource-group $RESOURCE_GROUP \\\n    --lb-name $lbName \\\n    --name $natPoolName \\\n    --protocol Tcp \\\n    --frontend-port-range-start 10022 \\\n    --frontend-port-range-end 11022 \\\n    --backend-port 22 \\\n    --frontend-ip-name $fepoolName\n\n# Create a VM Scale Set\naz vmss create \\\n    --name $vmssuniqueName \\\n    --resource-group $RESOURCE_GROUP \\\n    --location $location \\\n    --vm-sku $vmSku \\\n    --capacity $capacity \\\n    --image $imageName \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --load-balancer $lbName \\\n    --backend-pool-name $bepoolName \\\n    --upgrade-policy-mode Manual \\\n    --overprovision false\n\n# Create autoscale settings\naz monitor autoscale create \\\n    --resource-group $RESOURCE_GROUP \\\n    --name "autoscalesettings" \\\n    --target $vmssuniqueName \\\n    --min-count 2 \\\n    --max-count 20 \\\n    --count $capacity \\\n    --location $location \\\n    --rules "Percentage CPU > 40 avg 5m" "Percentage CPU < 30 avg 5m"\n\n# Retrieve FQDN of the public IP address\nfqdn=$(az network public-ip show --name $pipName --query "[dnsSettings.fqdn]" --output tsv)\n\necho "FQDN: $fqdn"\n```\n\nPlease note that the `RESOURCE_GROUP` variable is not provided in the ARM template, so you will need to set it to the appropriate resource group where you intend to deploy these resources. Additionally, the `az vmss create` command has been simplified to match the ARM template\'s intent, and specific details such as extension profiles are omitted. You may need to customize the script further to match the exact deployment details.


verify_result
