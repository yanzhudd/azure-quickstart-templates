arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"principalId": {"type": "string", "metadata": {"description": "Principal ID to set the access for"}, "defaultValue": "zytest"}, "storageAccountName": {"type": "string", "metadata": {"description": "The storage account to set access for"}, "defaultValue": "zytest"}}, "variables": {"contributor": "[subscriptionResourceId(\'Microsoft.Authorization/roleDefinitions\', \'b24988ac-6180-42a0-ab88-20f7382dd24c\')]", "scope": "[resourceId(\'Microsoft.Storage/storageAccounts\',parameters(\'storageAccountName\'))]", "RBACResourceName": "[guid(variables(\'scope\'), variables(\'contributor\'), parameters(\'principalId\'))]"}, "resources": [{"apiVersion": "2020-04-01-preview", "name": "[concat(parameters(\'storageAccountName\'), \'/Microsoft.Authorization/\', variables(\'RBACResourceName\'))]", "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments", "properties": {"roleDefinitionId": "[variables(\'contributor\')]", "principalId": "[parameters(\'principalId\')]", "scope": "[variables(\'scope\')]", "principalType": "ServicePrincipal"}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define the parameters\nprincipalId="zytest"\nstorageAccountName="zytest"\n\n# Define the variables\ncontributor=$(az role definition list --name \'Contributor\' --query [].name -o tsv)\nscope=$(az storage account show --name $storageAccountName --query id -o tsv)\nRBACResourceName=$(az ad sp create-for-rbac --name $principalId --role $contributor --scopes $scope --query appId -o tsv)\n\n# Create the role assignment\naz role assignment create --role $contributor --assignee $principalId --scope $scope\n```\n\nThis script first defines the parameters and variables. It then creates a service principal with the Contributor role and the specified scope. Finally, it assigns the role to the principal.


verify_result
