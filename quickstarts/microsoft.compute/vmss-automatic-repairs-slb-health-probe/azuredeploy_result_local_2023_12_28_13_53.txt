arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "imagePublisher": {"type": "string", "defaultValue": "Canonical"}, "imageOffer": {"type": "string", "defaultValue": "UbuntuServer"}, "imageSku": {"type": "string", "defaultValue": "18.04-LTS"}, "imageOSVersion": {"type": "string", "defaultValue": "latest"}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "defaultValue": 2, "metadata": {"description": "Number of VM instances (100 or less)."}, "maxValue": 100, "minValue": 2}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password on all VMs."}, "defaultValue": "zytest"}, "healthProbePort": {"type": "int", "defaultValue": 80, "metadata": {"description": "Local http port on VM at which health extension to probe"}}, "healthProbeProtocol": {"type": "string", "defaultValue": "http", "metadata": {"description": "Protocol used by health extension to probe app health"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for the VM scale set"}}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located including a trailing \'/\'"}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."}, "defaultValue": ""}}, "variables": {"addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "namingInfix": "[toLower(substring(concat(parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "lbName": "[concat(variables(\'namingInfix\'), \'lb\')]", "bepoolName": "[concat(variables(\'lbName\'), \'bepool\')]", "fepoolName": "[concat(variables(\'lbName\'), \'fepool\')]", "feIpConfigName": "[concat(variables(\'fepoolName\'), \'IpConfig\')]", "probeName": "[concat(variables(\'lbName\'), \'probe\')]", "bepoolID": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools/\', variables(\'lbName\'), variables(\'bepoolName\'))]", "feIpConfigId": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations/\', variables(\'lbName\'), variables(\'feIpConfigName\'))]", "platformImageReference": {"publisher": "[parameters(\'imagePublisher\')]", "offer": "[parameters(\'imageOffer\')]", "sku": "[parameters(\'imageSku\')]", "version": "[parameters(\'imageOSVersion\')]"}, "imageReference": "[variables(\'platformImageReference\')]"}, "resources": [{"apiVersion": "2019-12-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'lbName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard"}, "apiVersion": "2019-12-01", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "[variables(\'feIpConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bepoolName\')]"}], "loadBalancingRules": [{"name": "ProbeRule", "properties": {"loadDistribution": "Default", "frontendIPConfiguration": {"id": "[variables(\'feIpConfigId\')]"}, "backendAddressPool": {"id": "[variables(\'bepoolID\')]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes/\', variables(\'lbName\'), variables(\'probeName\'))]"}}}], "probes": [{"name": "[variables(\'probeName\')]", "properties": {"protocol": "[parameters(\'healthProbeProtocol\')]", "port": "[parameters(\'healthProbePort\')]", "requestPath": "/", "intervalInSeconds": 5, "numberOfProbes": 2}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "apiVersion": "2019-03-01", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "tags": {"vmsstag": "automaticrepairs"}, "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'lbName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"upgradePolicy": {"mode": "Manual"}, "automaticRepairsPolicy": {"enabled": true, "gracePeriod": "PT30M"}, "virtualMachineProfile": {"storageProfile": {"imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "vmss", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "extensionProfile": {"extensions": [{"name": "CustomScriptToInstallApache", "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[uri(parameters(\'_artifactsLocation\'), concat(\'install_apache.sh\', parameters(\'_artifactsLocationSasToken\')))]"], "commandToExecute": "sh install_apache.sh"}}}]}, "networkProfile": {"healthProbe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes/\', variables(\'lbName\'), variables(\'probeName\'))]"}, "networkInterfaceConfigurations": [{"name": "nic1", "properties": {"primary": true, "ipConfigurations": [{"name": "ip1", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[variables(\'bepoolID\')]"}], "publicipaddressconfiguration": {"name": "pub1", "properties": {"idleTimeoutInMinutes": 15}}}}]}}]}}}}]}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameters. Please note that some resource names and IDs are generated dynamically within the ARM template using functions like `uniqueString`, `substring`, and `concat`. These functions cannot be directly translated to Azure CLI and would typically require you to implement equivalent logic in the bash script or pre-define the names.\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmSku="Standard_D2s_v3"\nimagePublisher="Canonical"\nimageOffer="UbuntuServer"\nimageSku="18.04-LTS"\nimageOSVersion="latest"\nvmssName="zytest"\ninstanceCount=2\nadminUsername="zytest"\nadminPassword="zytest" # Please ensure to secure this in production use\nhealthProbePort=80\nhealthProbeProtocol="http"\nlocation="westus"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\n\n# Variables (Some variables are ARM template specific and need to be manually set)\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\n# namingInfix would be a unique string based on the vmssName and the resource group ID\nnamingInfix="uniqueNamingInfix" # Replace with actual unique naming infix\nvirtualNetworkName="${namingInfix}vnet"\nlbName="${namingInfix}lb"\nbepoolName="${lbName}bepool"\nfepoolName="${lbName}fepool"\nfeIpConfigName="${fepoolName}IpConfig"\nprobeName="${lbName}probe"\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group MyResourceGroup \\ # Replace with your actual resource group name\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create Load Balancer\naz network lb create \\\n    --name $lbName \\\n    --resource-group MyResourceGroup \\ # Replace with your actual resource group name\n    --location $location \\\n    --sku Standard \\\n    --frontend-ip-name $feIpConfigName \\\n    --backend-pool-name $bepoolName \\\n    --subnet $subnetName \\\n    --vnet-name $virtualNetworkName\n\n# Create a Load Balancer Probe\naz network lb probe create \\\n    --lb-name $lbName \\\n    --resource-group MyResourceGroup \\ # Replace with your actual resource group name\n    --name $probeName \\\n    --protocol $healthProbeProtocol \\\n    --port $healthProbePort \\\n    --path "/" \\\n    --interval 5 \\\n    --threshold 2\n\n# Create a Load Balancer Rule\naz network lb rule create \\\n    --lb-name $lbName \\\n    --resource-group MyResourceGroup \\ # Replace with your actual resource group name\n    --name ProbeRule \\\n    --protocol Tcp \\\n    --frontend-port 80 \\\n    --backend-port 80 \\\n    --frontend-ip-name $feIpConfigName \\\n    --backend-pool-name $bepoolName \\\n    --probe-name $probeName \\\n    --idle-timeout 5 \\\n    --enable-floating-ip false\n\n# Create Virtual Machine Scale Set\naz vmss create \\\n    --name $vmssName \\\n    --resource-group MyResourceGroup \\ # Replace with your actual resource group name\n    --location $location \\\n    --vm-sku $vmSku \\\n    --instance-count $instanceCount \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --image "publisher=$imagePublisher offer=$imageOffer sku=$imageSku version=$imageOSVersion" \\\n    --upgrade-policy-mode Manual \\\n    --load-balancer $lbName \\\n    --health-probe $probeName \\\n    --custom-data "install_apache.sh" \\ # Replace with actual script content or path\n    --tags vmsstag=automaticrepairs\n\n# Note: The --custom-data option expects a file containing the script to run on the VMSS instances.\n# You need to create the \'install_apache.sh\' script file with the appropriate commands to install Apache.\n```\n\nPlease make sure to replace `MyResourceGroup` with your actual resource group name and adjust the `namingInfix` to match the logic used in your ARM template for generating unique names. The `--custom-data` option in the `az vmss create` command should point to a file containing the script you want to run on the VMSS instances. The script content or path should be provided accordingly.


verify_result
