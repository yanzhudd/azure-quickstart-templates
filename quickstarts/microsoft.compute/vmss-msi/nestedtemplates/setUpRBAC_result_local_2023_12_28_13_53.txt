arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"principalId": {"type": "string", "metadata": {"description": "Principal ID to set the access for"}, "defaultValue": "zytest"}, "storageAccountName": {"type": "string", "metadata": {"description": "The storage account to set access for"}, "defaultValue": "zytest"}}, "variables": {"contributor": "[subscriptionResourceId(\'Microsoft.Authorization/roleDefinitions\', \'b24988ac-6180-42a0-ab88-20f7382dd24c\')]", "scope": "[resourceId(\'Microsoft.Storage/storageAccounts\',parameters(\'storageAccountName\'))]", "RBACResourceName": "[guid(variables(\'scope\'), variables(\'contributor\'), parameters(\'principalId\'))]"}, "resources": [{"apiVersion": "2020-04-01-preview", "name": "[concat(parameters(\'storageAccountName\'), \'/Microsoft.Authorization/\', variables(\'RBACResourceName\'))]", "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments", "properties": {"roleDefinitionId": "[variables(\'contributor\')]", "principalId": "[parameters(\'principalId\')]", "scope": "[variables(\'scope\')]", "principalType": "ServicePrincipal"}}]}


cli_script
Based on the given ARM template and parameters, here\'s the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Parameters\nprincipalId="zytest" # Default value for principalId, replace with actual value if provided\nstorageAccountName="zytest" # Default value for storageAccountName, replace with actual value if provided\n\n# Variables (calculated from parameters and hardcoded values)\ncontributorRoleId="b24988ac-6180-42a0-ab88-20f7382dd24c" # Role definition ID for Contributor role\nstorageAccountId=$(az storage account show --name $storageAccountName --query id -o tsv)\nrbacResourceName=$(az ad sp create-for-rbac --name $storageAccountName --role $contributorRoleId --scopes $storageAccountId --query objectId -o tsv)\n\n# Assign the role to the principal (Service Principal in this case)\naz role assignment create \\\n  --role $contributorRoleId \\\n  --assignee-object-id $principalId \\\n  --assignee-principal-type ServicePrincipal \\\n  --scope $storageAccountId \\\n  --name $rbacResourceName\n\n# Explanation:\n# The script sets up a role assignment for the given principalId to the specified storage account.\n# It assigns the \'Contributor\' role to the principal for the scope of the storage account.\n```\n\nPlease note that you might need to replace the default values for `principalId` and `storageAccountName` with actual values if they are provided separately. Additionally, the `az ad sp create-for-rbac` command is used to simulate the creation of a unique role assignment name (`rbacResourceName`), which may not be necessary if you are simply assigning a role. If you are not creating a new service principal, you can remove that line and directly use the role assignment command with the appropriate values.


verify_result
