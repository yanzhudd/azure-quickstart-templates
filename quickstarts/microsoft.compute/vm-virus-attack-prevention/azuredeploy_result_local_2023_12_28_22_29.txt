arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"_artifactsLocation": {"type": "string", "defaultValue": "[deployment().properties.templateLink.uri]", "metadata": {"description": "this will be the location for artifacts"}}, "_artifactsLocationSasToken": {"type": "securestring", "defaultValue": "", "metadata": {"description": "this will be the sas key to access artifacts"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "your resources will be created in this location"}}, "omsSku": {"type": "string", "defaultValue": "PerNode", "allowedValues": ["Free", "Standalone", "PerNode"], "metadata": {"description": "this will be you SKU for OMS"}}, "vNetName": {"type": "string", "defaultValue": "virus-attack-vnet", "metadata": {"description": "this will be name of the VNET"}}, "vNetAddressSpace": {"type": "string", "defaultValue": "10.1.0.0/16", "metadata": {"description": "this will be address space for VNET"}}, "subnetName": {"type": "string", "defaultValue": "subnet-01", "metadata": {"description": "this will be name of the subnet"}}, "subnetAddressSpace": {"type": "string", "defaultValue": "10.1.0.0/24", "metadata": {"description": "this will be address space for subnet"}}, "nsgNamePrefix": {"type": "string", "defaultValue": "virus-attack", "metadata": {"description": "this will be prefix used for NSG"}}, "pipAddressType": {"type": "string", "defaultValue": "dynamic", "allowedValues": ["dynamic", "static"], "metadata": {"description": "this will be the type of public IP address used for the VM name"}}, "vmNamePrefix": {"type": "string", "defaultValue": "vm", "metadata": {"description": "this will be the prefix used for the VM name"}}, "adminUserName": {"type": "string", "metadata": {"description": "this will be the user name of the VMs deployed"}, "defaultValue": "zytest"}, "adminUserPassword": {"type": "securestring", "metadata": {"description": "this will be the password of the user created on the user"}, "defaultValue": "zytest"}, "resourceGroupName": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "this will be the name of the resource group where resources are deployed"}}}, "variables": {"omsWorkspaceName": "[concat(\'Virus-Attack\',\'-\',substring(uniqueString(resourceGroup().id),0,5))]", "omsSolutions": ["Security", "AzureActivity", "AntiMalware"], "tags": {"scenario": "Vm-Virus-Attack-Prevention"}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[parameters(\'subnetAddressSpace\')]"}}], "nsgName": "[concat(parameters(\'nsgNamePrefix\'),\'-\',\'nsg\')]", "nsgSecurityRules": [{"name": "allow-inbound-rdp", "properties": {"protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "3389", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 1000, "direction": "Inbound"}}], "vmNames": ["[concat(parameters(\'vmNamePrefix\'),\'-without-ep\')]", "[concat(parameters(\'vmNamePrefix\'),\'-with-ep\')]"], "omsTemplateUri": "[uri(parameters(\'_artifactsLocation\'),concat(\'nested/microsoft.loganalytics/workspaces.json\',parameters(\'_artifactsLocationSasToken\')))]", "vnetTemplateUri": "[uri(parameters(\'_artifactsLocation\'),concat(\'nested/microsoft.network/virtualnetworks.json\',parameters(\'_artifactsLocationSasToken\')))]", "nsgTemplateUri": "[uri(parameters(\'_artifactsLocation\'),concat(\'nested/microsoft.network/nsg.json\',parameters(\'_artifactsLocationSasToken\')))]", "pipTemplateUri": "[uri(parameters(\'_artifactsLocation\'),concat(\'nested/microsoft.network/publicipaddress.json\',parameters(\'_artifactsLocationSasToken\')))]", "nicTemplateUri": "[uri(parameters(\'_artifactsLocation\'),concat(\'nested/microsoft.network/nic-with-pip.json\',parameters(\'_artifactsLocationSasToken\')))]", "vmTemplateUri": "[uri(parameters(\'_artifactsLocation\'),concat(\'nested/microsoft.compute/vm.windows.json\',parameters(\'_artifactsLocationSasToken\')))]", "omsExtensionTemplateUri": "[uri(parameters(\'_artifactsLocation\'),concat(\'nested/microsoft.compute/omsExtension.json\',parameters(\'_artifactsLocationSasToken\')))]"}, "resources": [{"apiVersion": "2020-06-01", "name": "deploy-virus-attack-oms-resource", "type": "Microsoft.Resources/deployments", "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'omsTemplateUri\')]"}, "parameters": {"omsWorkspaceName": {"value": "[variables(\'omsWorkspaceName\')]"}, "omsSolutionsName": {"value": "[variables(\'omsSolutions\')]"}, "sku": {"value": "[parameters(\'omsSku\')]"}, "location": {"value": "[parameters(\'location\')]"}, "tags": {"value": "[variables(\'tags\')]"}}}}, {"apiVersion": "2020-06-01", "name": "[concat(parameters(\'vnetName\'),\'-\',\'-resource\')]", "type": "Microsoft.Resources/deployments", "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'vnetTemplateUri\')]"}, "parameters": {"vnetName": {"value": "[parameters(\'vnetName\')]"}, "addressPrefix": {"value": "[parameters(\'vNetAddressSpace\')]"}, "subnets": {"value": "[variables(\'subnets\')]"}, "location": {"value": "[parameters(\'location\')]"}, "tags": {"value": "[variables(\'tags\')]"}}}}, {"apiVersion": "2020-06-01", "name": "[concat(variables(\'nsgName\'),\'-\',\'-resource\')]", "type": "Microsoft.Resources/deployments", "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'nsgTemplateUri\')]"}, "parameters": {"nsgName": {"value": "[variables(\'nsgName\')]"}, "securityRules": {"value": "[variables(\'nsgSecurityRules\')]"}, "location": {"value": "[parameters(\'location\')]"}, "tags": {"value": "[variables(\'tags\')]"}}}}, {"apiVersion": "2020-06-01", "name": "[concat(variables(\'vmNames\')[copyIndex()],\'-pip\',\'-resource\')]", "type": "Microsoft.Resources/deployments", "copy": {"name": "copy-pip", "count": 2}, "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'pipTemplateUri\')]"}, "parameters": {"publicIPAddressName": {"value": "[concat(variables(\'vmNames\')[copyIndex()],\'-pip\')]"}, "publicIPAddressType": {"value": "[parameters(\'pipAddressType\')]"}, "dnsNameForPublicIP": {"value": "[concat(variables(\'vmNames\')[copyIndex()],uniqueString(resourceGroup().id, \'pip\'),\'-pip\')]"}, "location": {"value": "[parameters(\'location\')]"}, "tags": {"value": "[variables(\'tags\')]"}}}}, {"apiVersion": "2020-06-01", "name": "[concat(variables(\'vmNames\')[copyIndex()],\'-nic\',\'-resource\')]", "type": "Microsoft.Resources/deployments", "dependsOn": ["copy-pip", "[format(\'{0}--resource\',variables(\'nsgName\'))]", "[format(\'{0}--resource\',parameters(\'vnetName\'))]"], "copy": {"name": "copy-nic", "count": 2}, "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'nicTemplateUri\')]"}, "parameters": {"nicName": {"value": "[concat(variables(\'vmNames\')[copyIndex()],\'-nic\')]"}, "publicIPAddressId": {"value": "[resourceId(\'Microsoft.Network/publicIPAddresses\',concat(variables(\'vmNames\')[copyIndex()],\'-pip\'))]"}, "subnetId": {"value": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\',parameters(\'vnetName\'), variables(\'subnets\')[0].name)]"}, "location": {"value": "[parameters(\'location\')]"}, "nsgId": {"value": "[resourceId(\'Microsoft.Network/networkSecurityGroups\',variables(\'nsgName\'))]"}, "tags": {"value": "[variables(\'tags\')]"}}}}, {"apiVersion": "2020-06-01", "name": "[concat(variables(\'vmNames\')[copyIndex()])]", "type": "Microsoft.Resources/deployments", "dependsOn": ["copy-nic"], "copy": {"name": "copy-vm", "count": 2}, "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'vmTemplateUri\')]"}, "parameters": {"vmName": {"value": "[concat(variables(\'vmNames\')[copyIndex()])]"}, "adminUsername": {"value": "[parameters(\'adminUserName\')]"}, "adminPassword": {"value": "[parameters(\'adminUserPassword\')]"}, "nicId": {"value": "[resourceId(\'Microsoft.Network/networkInterfaces\',concat(variables(\'vmNames\')[copyIndex()],\'-nic\'))]"}, "location": {"value": "[parameters(\'location\')]"}, "tags": {"value": "[variables(\'tags\')]"}}}}, {"apiVersion": "2020-06-01", "name": "omsExtension", "type": "Microsoft.Resources/deployments", "dependsOn": ["copy-vm", "deploy-virus-attack-oms-resource"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'omsExtensionTemplateUri\')]"}, "parameters": {"vmNames": {"value": "[variables(\'vmNames\')]"}, "omsWorkspaceName": {"value": "[variables(\'omsWorkspaceName\')]"}, "location": {"value": "[parameters(\'location\')]"}, "resourceGroupName": {"value": "[parameters(\'resourceGroupName\')]"}}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmNames\')[copyIndex(1)],\'/malware\')]", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["omsExtension"], "copy": {"name": "copy-extension-malware", "count": 1}, "properties": {"publisher": "Microsoft.Azure.Security", "type": "IaaSAntimalware", "typeHandlerVersion": "1.1", "autoUpgradeMinorVersion": true, "settings": {"AntimalwareEnabled": true, "Exclusions": {"Processes": "taskmgr.exe"}, "RealtimeProtectionEnabled": "true", "ScheduledScanSettings": {"isEnabled": "true", "scanType": "Quick", "day": "7", "time": "120"}}}}], "outputs": {}}


cli_script
Below is the bash script that translates the provided ARM template and parameters into the equivalent Azure CLI commands. The ARM template defines multiple resources, including deployments for an OMS workspace, virtual network, network security group, public IP addresses, network interfaces, virtual machines, and VM extensions.\n\n```bash\n#!/bin/bash\n\n# Define parameters as variables\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\nlocation="westus"\nomsSku="PerNode"\nvNetName="virus-attack-vnet"\nvNetAddressSpace="10.1.0.0/16"\nsubnetName="subnet-01"\nsubnetAddressSpace="10.1.0.0/24"\nnsgNamePrefix="virus-attack"\npipAddressType="dynamic"\nvmNamePrefix="vm"\nadminUserName="zytest"\nadminUserPassword="zytest"\nresourceGroupName="[resourceGroup().name]"\n\n# Variables (some variables are expressions that would need runtime evaluation, which is not possible in a static script)\nomsWorkspaceName="Virus-Attack-<uniqueString>" # Replace <uniqueString> with the actual unique string generated at runtime\nomsSolutions=("Security" "AzureActivity" "AntiMalware")\ntags="scenario=Vm-Virus-Attack-Prevention"\nnsgName="${nsgNamePrefix}-nsg"\nvmNames=("${vmNamePrefix}-without-ep" "${vmNamePrefix}-with-ep")\nomsTemplateUri="${_artifactsLocation}nested/microsoft.loganalytics/workspaces.json${_artifactsLocationSasToken}"\nvnetTemplateUri="${_artifactsLocation}nested/microsoft.network/virtualnetworks.json${_artifactsLocationSasToken}"\nnsgTemplateUri="${_artifactsLocation}nested/microsoft.network/nsg.json${_artifactsLocationSasToken}"\npipTemplateUri="${_artifactsLocation}nested/microsoft.network/publicipaddress.json${_artifactsLocationSasToken}"\nnicTemplateUri="${_artifactsLocation}nested/microsoft.network/nic-with-pip.json${_artifactsLocationSasToken}"\nvmTemplateUri="${_artifactsLocation}nested/microsoft.compute/vm.windows.json${_artifactsLocationSasToken}"\nomsExtensionTemplateUri="${_artifactsLocation}nested/microsoft.compute/omsExtension.json${_artifactsLocationSasToken}"\n\n# Deploy OMS Workspace Resource\n# Note: The following command assumes the existence of a linked template at the specified URI\naz deployment group create \\\n  --name "deploy-virus-attack-oms-resource" \\\n  --resource-group "$resourceGroupName" \\\n  --template-uri "$omsTemplateUri" \\\n  --parameters omsWorkspaceName="$omsWorkspaceName" \\\n               omsSolutionsName="$omsSolutions" \\\n               sku="$omsSku" \\\n               location="$location" \\\n               tags="$tags"\n\n# Deploy Virtual Network Resource\n# Note: The following command assumes the existence of a linked template at the specified URI\naz deployment group create \\\n  --name "${vNetName}--resource" \\\n  --resource-group "$resourceGroupName" \\\n  --template-uri "$vnetTemplateUri" \\\n  --parameters vnetName="$vNetName" \\\n               addressPrefix="$vNetAddressSpace" \\\n               subnets="[{\\"name\\": \\"$subnetName\\", \\"properties\\": {\\"addressPrefix\\": \\"$subnetAddressSpace\\"}}]" \\\n               location="$location" \\\n               tags="$tags"\n\n# Deploy Network Security Group Resource\n# Note: The following command assumes the existence of a linked template at the specified URI\naz deployment group create \\\n  --name "${nsgName}--resource" \\\n  --resource-group "$resourceGroupName" \\\n  --template-uri "$nsgTemplateUri" \\\n  --parameters nsgName="$nsgName" \\\n               securityRules="[{\\"name\\": \\"allow-inbound-rdp\\", \\"properties\\": {\\"protocol\\": \\"Tcp\\", \\"sourcePortRange\\": \\"*\\", \\"destinationPortRange\\": \\"3389\\", \\"sourceAddressPrefix\\": \\"*\\", \\"destinationAddressPrefix\\": \\"*\\", \\"access\\": \\"Allow\\", \\"priority\\": 1000, \\"direction\\": \\"Inbound\\"}}]" \\\n               location="$location" \\\n               tags="$tags"\n\n# Deploy Public IP Addresses\n# Note: The following command assumes the existence of a linked template at the specified URI and needs to be run for each VM\nfor vmName in "${vmNames[@]}"; do\n  az deployment group create \\\n    --name "${vmName}-pip-resource" \\\n    --resource-group "$resourceGroupName" \\\n    --template-uri "$pipTemplateUri" \\\n    --parameters publicIPAddressName="${vmName}-pip" \\\n                 publicIPAddressType="$pipAddressType" \\\n                 dnsNameForPublicIP="${vmName}<uniqueString>-pip" \\ # Replace <uniqueString> with the actual unique string generated at runtime\n                 location="$location" \\\n                 tags="$tags"\ndone\n\n# Deploy Network Interfaces\n# Note: The following command assumes the existence of a linked template at the specified URI and needs to be run for each VM\nfor vmName in "${vmNames[@]}"; do\n  az deployment group create \\\n    --name "${vmName}-nic-resource" \\\n    --resource-group "$resourceGroupName" \\\n    --template-uri "$nicTemplateUri" \\\n    --parameters nicName="${vmName}-nic" \\\n                 publicIPAddressId="/subscriptions/<subscriptionId>/resourceGroups/$resourceGroupName/providers/Microsoft.Network/publicIPAddresses/${vmName}-pip" \\ # Replace <subscriptionId> with the actual subscription ID\n                 subnetId="/subscriptions/<subscriptionId>/resourceGroups/$resourceGroupName/providers/Microsoft.Network/virtualNetworks/$vNetName/subnets/$subnetName" \\ # Replace <subscriptionId> with the actual subscription ID\n                 location="$location" \\\n                 nsgId="/subscriptions/<subscriptionId>/resourceGroups/$resourceGroupName/providers/Microsoft.Network/networkSecurityGroups/$nsgName" \\ # Replace <subscriptionId> with the actual subscription ID\n                 tags="$tags"\ndone\n\n# Deploy Virtual Machines\n# Note: The following command assumes the existence of a linked template at the specified URI and needs to be run for each VM\nfor vmName in "${vmNames[@]}"; do\n  az deployment group create \\\n    --name "$vmName" \\\n    --resource-group "$resourceGroupName" \\\n    --template-uri "$vmTemplateUri" \\\n    --parameters vmName="$vmName" \\\n                 adminUsername="$adminUserName" \\\n                 adminPassword="$adminUserPassword" \\\n                 nicId="/subscriptions/<subscriptionId>/resourceGroups/$resourceGroupName/providers/Microsoft.Network/networkInterfaces/${vmName}-nic" \\ # Replace <subscriptionId> with the actual subscription ID\n                 location="$location" \\\n                 tags="$tags"\ndone\n\n# Deploy OMS Extension\n# Note: The following command assumes the existence of a linked template at the specified URI\naz deployment group create \\\n  --name "omsExtension" \\\n  --resource-group "$resourceGroupName" \\\n  --template-uri "$omsExtensionTemplateUri" \\\n  --parameters vmNames="$vmNames" \\\n               omsWorkspaceName="$omsWorkspaceName" \\\n               location="$location" \\\n               resourceGroupName="$resourceGroupName"\n\n# Deploy VM Extension for Antimalware\n# Note: The following command is for a single VM extension and needs to be run for each VM\nfor vmName in "${vmNames[@]}"; do\n  az vm extension set \\\n    --resource-group "$resourceGroupName" \\\n    --vm-name "$vmName" \\\n    --name "malware" \\\n    --publisher "Microsoft.Azure.Security" \\\n    --extension-type "IaaSAntimalware" \\\n    --settings "{\\"AntimalwareEnabled\\": true, \\"Exclusions\\": {\\"Processes\\": \\"taskmgr.exe\\"}, \\"RealtimeProtectionEnabled\\": \\"true\\", \\"ScheduledScanSettings\\": {\\"isEnabled\\": \\"true\\", \\"scanType\\": \\"Quick\\", \\"day\\": \\"7\\", \\"time\\": \\"120\\"}}" \\\n    --version "1.1"\ndone\n```\n\nPlease note that this script includes placeholders for unique strings and subscription IDs, which should be replaced with actual values during runtime. Additionally, the script assumes that linked templates are accessible at the specified URIs. The script does not include logic to handle the `copy` property in ARM templates, so the corresponding loops are written to iterate over the VM names array.


verify_result
