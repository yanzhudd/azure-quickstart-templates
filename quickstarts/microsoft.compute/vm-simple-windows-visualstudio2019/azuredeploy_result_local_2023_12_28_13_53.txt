arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "simpleWinVS", "metadata": {"description": "The name of you Virtual Machine."}}, "VmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "The size of the VM"}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "secureString", "metadata": {"description": "Password for the Virtual Machine. The password must be at least 12 characters long and have lower case, upper characters, digit and a special character (Regex match)"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(concat(\'simplewinvs-\', uniqueString(resourceGroup().id)))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "sharedResources": {"type": "string", "defaultValue": "new", "allowedValues": ["new", "existing"], "metadata": {"description": "Specify whether to create a new or existing NSG and vNet."}}, "virtualNetworkName": {"type": "string", "defaultValue": "vNet", "metadata": {"description": "Name of the VNET"}}, "subnetName": {"type": "string", "defaultValue": "Subnet", "metadata": {"description": "Name of the subnet in the virtual network"}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "SecGroupNet", "metadata": {"description": "Name of the Network Security Group"}}}, "variables": {"publicIpAddressName": "[concat(parameters(\'vmName\'), \'PublicIP\' )]", "networkInterfaceName": "[concat(parameters(\'vmName\'),\'NetInt\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "osDiskType": "StandardSSD_LRS", "subnetAddressPrefix": "10.1.0.0/24", "addressPrefix": "10.1.0.0/16"}, "resources": [{"name": "[variables(\'networkInterfaceName\')]", "type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups/\', parameters(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', parameters(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/publicIpAddresses/\', variables(\'publicIpAddressName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "privateIPAllocationMethod": "Dynamic", "publicIpAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\',parameters(\'networkSecurityGroupName\'))]"}}}, {"condition": "[equals(parameters(\'sharedResources\'), \'new\')]", "name": "[parameters(\'networkSecurityGroupName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "RDP", "properties": {"protocol": "TCP", "sourcePortRange": "*", "destinationPortRange": "3389", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 300, "direction": "Inbound"}}]}}, {"condition": "[equals(parameters(\'sharedResources\'), \'new\')]", "type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-05-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetAddressPrefix\')]", "privateEndpointNetworkPolicies": "Enabled", "privateLinkServiceNetworkPolicies": "Enabled"}}], "enableDdosProtection": false, "enableVmProtection": false}}, {"type": "Microsoft.Network/publicIpAddresses", "apiVersion": "2020-05-01", "name": "[variables(\'publicIpAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIpAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}, "publicIPAddressVersion": "IPv4", "idleTimeoutInMinutes": 4}, "sku": {"name": "Basic", "tier": "Regional"}}, {"name": "[parameters(\'vmName\')]", "type": "Microsoft.Compute/virtualMachines", "apiVersion": "2019-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'networkInterfaceName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "storageProfile": {"osDisk": {"createOption": "fromImage", "managedDisk": {"storageAccountType": "[variables(\'osDiskType\')]"}}, "imageReference": {"publisher": "MicrosoftVisualStudio", "offer": "visualstudio2019latest", "sku": "vs-2019-comm-latest-ws2019", "version": "latest"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"}]}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "windowsConfiguration": {"enableAutomaticUpdates": true, "provisionVmAgent": true}}}}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}, "virtualNetworkName": {"type": "string", "value": "[parameters(\'virtualNetworkName\')]"}, "networkSecurityGroupName": {"type": "string", "value": "[parameters(\'networkSecurityGroupName\')]"}, "hostname": {"value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]", "type": "string"}}}


cli_script
```bash\n#!/bin/bash\n\n# Template Parameters\nvmName="simpleWinVS"\nvmSize="Standard_D2_v3"\nadminUsername="zytest"\nadminPassword="zytest"\nlocation="westus"\n# The dnsLabelPrefix will be set to a unique value based on the resource group\'s unique string\n# In CLI, this is typically handled dynamically rather than through a static parameter\nsharedResources="new"\nvirtualNetworkName="vNet"\nsubnetName="Subnet"\nnetworkSecurityGroupName="SecGroupNet"\n\n# Variables (not directly translatable to CLI variables, but will be used in resource creation)\npublicIpAddressName="${vmName}PublicIP"\nnetworkInterfaceName="${vmName}NetInt"\n# resourceId functions are not directly translatable to CLI commands, but we can construct the IDs if needed\n\n# Create Network Security Group if condition is \'new\'\nif [ "$sharedResources" == "new" ]; then\n  # Create Network Security Group\n  az network nsg create \\\n    --name $networkSecurityGroupName \\\n    --resource-group $resourceGroupName \\\n    --location $location\n\n  # Create Security Rule for RDP Access\n  az network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --resource-group $resourceGroupName \\\n    --name "RDP" \\\n    --protocol "TCP" \\\n    --priority 300 \\\n    --destination-port-range 3389 \\\n    --access "Allow" \\\n    --direction "Inbound"\nfi\n\n# Create Virtual Network and Subnet if condition is \'new\'\nif [ "$sharedResources" == "new" ]; then\n  # Create Virtual Network\n  az network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group $resourceGroupName \\\n    --location $location \\\n    --address-prefix "10.1.0.0/16" \\\n    --subnet-name $subnetName \\\n    --subnet-prefix "10.1.0.0/24"\nfi\n\n# Create Public IP Address\naz network public-ip create \\\n  --name $publicIpAddressName \\\n  --resource-group $resourceGroupName \\\n  --location $location \\\n  --allocation-method Dynamic \\\n  --dns-name $dnsLabelPrefix\n\n# Create Network Interface\naz network nic create \\\n  --name $networkInterfaceName \\\n  --resource-group $resourceGroupName \\\n  --location $location \\\n  --subnet $subnetName \\\n  --vnet-name $virtualNetworkName \\\n  --network-security-group $networkSecurityGroupName \\\n  --public-ip-address $publicIpAddressName\n\n# Create Virtual Machine\naz vm create \\\n  --name $vmName \\\n  --resource-group $resourceGroupName \\\n  --location $location \\\n  --nics $networkInterfaceName \\\n  --size $vmSize \\\n  --image "MicrosoftVisualStudio:visualstudio2019latest:vs-2019-comm-latest-ws2019:latest" \\\n  --admin-username $adminUsername \\\n  --admin-password $adminPassword \\\n  --os-disk-size-gb 128 \\\n  --os-disk-name "${vmName}_osdisk" \\\n  --storage-sku "StandardSSD_LRS"\n\n# Outputs (These are not directly translatable to CLI commands, but can be echoed if needed)\necho "Admin Username: $adminUsername"\necho "Virtual Network Name: $virtualNetworkName"\necho "Network Security Group Name: $networkSecurityGroupName"\n# To get the fully qualified domain name (FQDN), we can use the following command\nfqdn=$(az network public-ip show --name $publicIpAddressName --resource-group $resourceGroupName --query "dnsSettings.fqdn" -o tsv)\necho "Hostname: $fqdn"\n```\n\nPlease note that you will need to replace `$resourceGroupName` with your actual resource group name where the resources should be deployed. The `dnsLabelPrefix` is typically generated dynamically based on the resource group\'s unique string in ARM templates, but in a CLI script, you would need to handle this differently, perhaps by generating a unique string in the script or using a static value.


verify_result
