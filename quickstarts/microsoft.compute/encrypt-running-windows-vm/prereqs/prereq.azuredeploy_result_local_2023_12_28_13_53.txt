arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin user name for the virtual machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin user password for virtual machine."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of VM"}}, "virtualNetworkName": {"type": "string", "metadata": {"description": "Name of VNET to which the VM NIC belongs to"}, "defaultValue": "zytest"}, "subnetName": {"type": "string", "metadata": {"description": "Name of Subnet to which the VM NIC belongs to"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location of the resources."}}}, "variables": {"imagePublisher": "MicrosoftWindowsServer", "vmName": "[parameters(\'vmName\')]", "imageOffer": "WindowsServer", "osSku": "2012-R2-Datacenter", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "dnsNameForPublicIP": "[toLower(parameters(\'vmName\'))]", "publicIPAddressName": "[toLower(concat(\'publicIP\',parameters(\'vmName\')))]", "publicIPAddressType": "Dynamic", "nicName": "[toLower(concat(\'nic\',parameters(\'vmName\')))]"}, "resources": [{"type": "Microsoft.Network/VirtualNetworks", "name": "[parameters(\'virtualNetworkName\')]", "apiVersion": "2020-11-01", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"apiVersion": "2020-11-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[variables(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2020-11-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "identity": {"type": "SystemAssigned"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'osSku\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}], "outputs": {"vmName": {"type": "string", "value": "[variables(\'vmName\')]"}}}


cli_script
Below is the translated Azure CLI script based on the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Define the parameters\nvmName="zytest"\nadminUsername="zytest"\nadminPassword="zytest" # Note: In production, use a secure method to handle passwords.\nvmSize="Standard_D2_v3"\nvirtualNetworkName="zytest"\nsubnetName="zytest"\nlocation="westus"\n\n# Create the Virtual Network\naz network vnet create \\\n    --name "$virtualNetworkName" \\\n    --resource-group "<YourResourceGroupName>" \\ # Replace with your actual resource group name\n    --location "$location" \\\n    --address-prefixes "10.0.0.0/16" \\\n    --subnet-name "$subnetName" \\\n    --subnet-prefix "10.0.0.0/24"\n\n# Create the Public IP Address\npublicIPAddressName="$(echo "$vmName" | tr \'[:upper:]\' \'[:lower:]\')publicip"\ndnsNameForPublicIP="$(echo "$vmName" | tr \'[:upper:]\' \'[:lower:]\')"\naz network public-ip create \\\n    --name "$publicIPAddressName" \\\n    --resource-group "<YourResourceGroupName>" \\\n    --location "$location" \\\n    --allocation-method Dynamic \\\n    --dns-name "$dnsNameForPublicIP"\n\n# Create the Network Interface\nnicName="$(echo "$vmName" | tr \'[:upper:]\' \'[:lower:]\')nic"\naz network nic create \\\n    --name "$nicName" \\\n    --resource-group "<YourResourceGroupName>" \\\n    --location "$location" \\\n    --vnet-name "$virtualNetworkName" \\\n    --subnet "$subnetName" \\\n    --public-ip-address "$publicIPAddressName"\n\n# Create the Virtual Machine\naz vm create \\\n    --name "$vmName" \\\n    --resource-group "<YourResourceGroupName>" \\\n    --location "$location" \\\n    --nics "$nicName" \\\n    --size "$vmSize" \\\n    --image "MicrosoftWindowsServer:WindowsServer:2012-R2-Datacenter:latest" \\\n    --admin-username "$adminUsername" \\\n    --admin-password "$adminPassword" \\\n    --authentication-type password \\\n    --assign-identity\n\n# Output the VM name\necho "VM Name: $vmName"\n```\n\nPlease replace `<YourResourceGroupName>` with the actual name of your resource group. Note that the script assumes you are creating resources in the same resource group.\n\nThe `adminPassword` variable should be handled securely, especially if this script is to be used in a production environment. Consider using a secure method like Azure Key Vault to store and retrieve sensitive information.\n\nThe script includes comments to explain each command. Ensure you have the necessary permissions and the Azure CLI installed to execute these commands.


verify_result
