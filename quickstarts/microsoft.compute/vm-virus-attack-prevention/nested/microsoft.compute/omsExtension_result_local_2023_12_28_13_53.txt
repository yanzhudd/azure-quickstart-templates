arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmNames": {"type": "array", "metadata": {"description": "Names of the virtual machines"}, "defaultValue": "zytest"}, "omsWorkspaceName": {"type": "string", "metadata": {"description": "Name of the OMS workspace"}, "defaultValue": "zytest"}, "location": {"type": "string", "metadata": {"description": "Location of the resources"}, "defaultValue": "westus"}, "resourceGroupName": {"type": "string", "metadata": {"description": "Name of the resource group for the resources"}, "defaultValue": "zytest"}}, "resources": [{"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(concat(parameters(\'vmNames\')[copyIndex()]),\'/OMSExtension\')]", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "copy": {"name": "copy-monitoring-agent", "count": 2}, "properties": {"publisher": "Microsoft.EnterpriseCloud.Monitoring", "type": "MicrosoftMonitoringAgent", "typeHandlerVersion": "1.0", "autoUpgradeMinorVersion": true, "settings": {"workspaceId": "[reference(resourceId(parameters(\'resourceGroupName\'),\'Microsoft.OperationalInsights/workspaces/\', parameters(\'omsWorkspaceName\')), \'2021-06-01\').customerId]"}, "protectedSettings": {"workspaceKey": "[listKeys(resourceId(parameters(\'resourceGroupName\'),\'Microsoft.OperationalInsights/workspaces/\', parameters(\'omsWorkspaceName\')), \'2021-06-01\').primarySharedKey]"}}}]}


cli_script
To translate the provided ARM template into an equivalent Azure CLI script, we need to follow the instructions provided. First, we\'ll extract the parameters and then construct the CLI commands for the resources.\n\nHere\'s the translated script:\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmNames=(\'zytest\') # Default value as an array\nomsWorkspaceName="zytest" # Default value\nlocation="westus" # Default value\nresourceGroupName="zytest" # Default value\n\n# Retrieve the OMS Workspace ID and Primary Shared Key\nworkspaceId=$(az monitor log-analytics workspace show --resource-group $resourceGroupName --workspace-name $omsWorkspaceName --query customerId -o tsv)\nworkspaceKey=$(az monitor log-analytics workspace get-shared-keys --resource-group $resourceGroupName --workspace-name $omsWorkspaceName --query primarySharedKey -o tsv)\n\n# Loop through the VM names array and deploy the OMS extension to each VM\nfor vmName in "${vmNames[@]}"; do\n  # Deploying OMS extension to the first VM\n  az vm extension set \\\n    --resource-group $resourceGroupName \\\n    --vm-name $vmName \\\n    --name OMSAgentForLinux \\\n    --publisher Microsoft.EnterpriseCloud.Monitoring \\\n    --settings "{\\"workspaceId\\":\\"$workspaceId\\"}" \\\n    --protected-settings "{\\"workspaceKey\\":\\"$workspaceKey\\"}" \\\n    --version 1.0\n\n  # Since the ARM template provided has a copy count of 2, we assume there are two VMs.\n  # If there were more VMs, they would be processed in the loop.\ndone\n```\n\nPlease note that the ARM template provided has a `copy` element with a count of 2, which indicates that the resources are intended to be created twice. However, since the `vmNames` parameter is given a default value of a single VM name (`zytest`), the loop in the script will only iterate once. If the `vmNames` parameter were provided with more values, the loop would iterate accordingly.\n\nThe ARM template also uses `reference` and `listKeys` functions to dynamically retrieve the `workspaceId` and `workspaceKey`. In the CLI script, equivalent commands are used to retrieve these values before the loop that applies the extension to the VMs.\n\nPlease ensure that you have the correct permissions and that the Azure CLI is installed and logged in to the appropriate account before executing this script.


verify_result
