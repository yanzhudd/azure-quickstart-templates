arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "18.04-LTS", "allowedValues": ["18.04-LTS", "16.04-LTS", "14.04.4-LTS"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 18.04-LTS, 16.04-LTS, 14.04.4-LTS."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "minValue": 1, "maxValue": 100, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"namingInfix": "[toLower(substring(concat(parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "newStorageAccountSuffix": "[concat(variables(\'namingInfix\'), \'sa\')]", "longNamingInfix": "[toLower(parameters(\'vmssName\'))]", "jumpBoxName": "[concat(variables(\'namingInfix\'), \'jbox\')]", "jumpBoxSAName": "[concat(uniqueString(concat(resourceGroup().id, variables(\'newStorageAccountSuffix\'), \'jumpboxsa\')), \'jb\')]", "jumpBoxOSDiskName": "[concat(variables(\'jumpBoxName\'), \'osdisk\')]", "jumpBoxIPConfigName": "[concat(variables(\'jumpBoxName\'), \'ipconfig\')]", "jumpBoxNicName": "[concat(variables(\'jumpBoxName\'), \'nic\')]", "storageAccountType": "Standard_LRS", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "subnetName": "[concat(variables(\'namingInfix\'), \'subnet\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "publicIPAddressName": "[concat(variables(\'namingInfix\'), \'pip\')]", "loadBalancerName": "[concat(variables(\'namingInfix\'), \'lb\')]", "natPoolName": "[concat(variables(\'namingInfix\'), \'natpool\')]", "bePoolName": "[concat(variables(\'namingInfix\'), \'bepool\')]", "natStartPort": 50000, "natEndPort": 50119, "natBackendPort": 22, "nicName": "[concat(variables(\'namingInfix\'), \'nic\')]", "ipConfigName": "[concat(variables(\'namingInfix\'), \'ipconfig\')]", "frontEndIPConfigID": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]", "osType": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-05-01", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'jumpBoxSAName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2019-06-01", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'jumpBoxNicName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-05-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "[variables(\'jumpBoxIPConfigName\')]", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-05-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[variables(\'longNamingInfix\')]"}}}, {"type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'jumpBoxName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-06-01", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'jumpBoxSAName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'jumpBoxNicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSku\')]"}, "osProfile": {"computerName": "[variables(\'jumpBoxName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": "[variables(\'imageReference\')]", "osDisk": {"name": "[concat(variables(\'jumpBoxOSDiskName\'),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'jumpBoxNicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'jumpBoxSAName\'), \'2020-08-01-preview\').primaryEndpoints.blob]"}}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-05-01", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[variables(\'frontEndIPConfigID\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[variables(\'namingInfix\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-06-01", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "true", "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[variables(\'namingInfix\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}]}}]}}]}}}}]}


cli_script
Based on the provided ARM template and parameter values, here is the equivalent Azure CLI script:\n\n```bash\n#!/bin/bash\n\n# Set variables from TemplateParameters\nvmSku="Standard_A1_v2"\nubuntuOSVersion="18.04-LTS"\nvmssName="zytest"\ninstanceCount=1\nadminUsername="zytest"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Create Network Security Group\naz network nsg create \\\n    --name "${vmssName}subnet-nsg" \\\n    --resource-group "<ResourceGroupName>" \\\n    --location "$location" \\\n    --tags "env=prod"\n\n# Create Security Rule for NSG\naz network nsg rule create \\\n    --nsg-name "${vmssName}subnet-nsg" \\\n    --resource-group "<ResourceGroupName>" \\\n    --name "default-allow-22" \\\n    --priority 1000 \\\n    --access "Allow" \\\n    --direction "Inbound" \\\n    --destination-port-ranges 22 \\\n    --protocol "Tcp" \\\n    --source-address-prefix "*" \\\n    --source-port-range "*"\n\n# Create Virtual Network\naz network vnet create \\\n    --name "${vmssName}vnet" \\\n    --resource-group "<ResourceGroupName>" \\\n    --location "$location" \\\n    --address-prefix "10.0.0.0/16" \\\n    --subnet-name "${vmssName}subnet" \\\n    --subnet-prefix "10.0.0.0/24" \\\n    --network-security-group "${vmssName}subnet-nsg"\n\n# Create Storage Account for JumpBox\naz storage account create \\\n    --name "${vmssName}jb" \\\n    --resource-group "<ResourceGroupName>" \\\n    --location "$location" \\\n    --sku "Standard_LRS" \\\n    --kind "StorageV2"\n\n# Create Public IP for JumpBox\naz network public-ip create \\\n    --name "${vmssName}pip" \\\n    --resource-group "<ResourceGroupName>" \\\n    --location "$location" \\\n    --allocation-method "Dynamic" \\\n    --dns-name "${vmssName}"\n\n# Create Network Interface for JumpBox\naz network nic create \\\n    --name "${vmssName}nic" \\\n    --resource-group "<ResourceGroupName>" \\\n    --location "$location" \\\n    --vnet-name "${vmssName}vnet" \\\n    --subnet "${vmssName}subnet" \\\n    --public-ip-address "${vmssName}pip"\n\n# Create Virtual Machine for JumpBox\naz vm create \\\n    --resource-group "<ResourceGroupName>" \\\n    --name "${vmssName}jbox" \\\n    --location "$location" \\\n    --nics "${vmssName}nic" \\\n    --image "Canonical:UbuntuServer:${ubuntuOSVersion}:latest" \\\n    --admin-username "$adminUsername" \\\n    --size "$vmSku" \\\n    --authentication-type "$authenticationType" \\\n    --ssh-key-value "$adminPasswordOrKey" \\\n    --storage-sku "Standard_LRS"\n\n# Create Load Balancer\naz network lb create \\\n    --name "${vmssName}lb" \\\n    --resource-group "<ResourceGroupName>" \\\n    --location "$location" \\\n    --frontend-ip-name "LoadBalancerFrontEnd" \\\n    --backend-pool-name "${vmssName}bepool" \\\n    --vnet-name "${vmssName}vnet" \\\n    --subnet "${vmssName}subnet"\n\n# Create Inbound NAT Pool for Load Balancer\naz network lb inbound-nat-pool create \\\n    --lb-name "${vmssName}lb" \\\n    --resource-group "<ResourceGroupName>" \\\n    --name "${vmssName}natpool" \\\n    --frontend-ip-name "LoadBalancerFrontEnd" \\\n    --protocol "Tcp" \\\n    --frontend-port-range-start 50000 \\\n    --frontend-port-range-end 50119 \\\n    --backend-port 22\n\n# Create Virtual Machine Scale Set\naz vmss create \\\n    --resource-group "<ResourceGroupName>" \\\n    --name "${vmssName}" \\\n    --location "$location" \\\n    --vm-sku "$vmSku" \\\n    --instance-count "$instanceCount" \\\n    --admin-username "$adminUsername" \\\n    --image "Canonical:UbuntuServer:${ubuntuOSVersion}:latest" \\\n    --upgrade-policy-mode "Manual" \\\n    --authentication-type "$authenticationType" \\\n    --ssh-key-value "$adminPasswordOrKey" \\\n    --vnet-name "${vmssName}vnet" \\\n    --subnet "${vmssName}subnet" \\\n    --load-balancer "${vmssName}lb" \\\n    --public-ip-per-vm \\\n    --backend-pool-name "${vmssName}bepool" \\\n    --nat-pool "${vmssName}natpool"\n\n# Note: Replace <ResourceGroupName> with the actual name of your resource group where these resources should be deployed.\n```\n\nThis script assumes that you will replace `<ResourceGroupName>` with the actual resource group name you wish to use. Adjust the script as necessary to fit into your deployment process.


verify_result
