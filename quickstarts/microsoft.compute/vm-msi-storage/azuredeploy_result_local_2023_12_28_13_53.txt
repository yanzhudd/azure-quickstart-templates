arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "vm-msi", "metadata": {"description": "The name of you Virtual Machine."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(concat(\'vm-msi-\', uniqueString(resourceGroup().id)))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "19.04", "allowedValues": ["16.04.0-LTS", "18.04-LTS", "19.04"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "VmSize": {"type": "string", "defaultValue": "Standard_B2s", "metadata": {"description": "The size of the VM"}}, "virtualNetworkName": {"type": "string", "defaultValue": "vNet", "metadata": {"description": "Name of the VNET"}}, "subnetName": {"type": "string", "defaultValue": "Subnet", "metadata": {"description": "Name of the subnet in the virtual network"}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "SecGroupNet", "metadata": {"description": "Name of the Network Security Group"}}, "storageAccountResourceGroupName": {"type": "string", "metadata": {"description": "Resource group name for the storage account role assignment"}, "defaultValue": "zytest"}, "storageAccountName": {"type": "string", "metadata": {"description": "Storage account name the MSI will be given access to"}, "defaultValue": "zytest"}, "msiRole": {"type": "string", "defaultValue": "StorageBlobDataReader", "allowedValues": ["StorageBlobDataContributor", "StorageBlobDataOwner", "StorageBlobDataReader"], "metadata": {"description": "Role to assign to the MSI on the storage account"}}}, "variables": {"publicIpAddressName": "[concat(parameters(\'vmName\'), \'PublicIP\' )]", "networkInterfaceName": "[concat(parameters(\'vmName\'),\'NetInt\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "osDiskType": "StandardSSD_LRS", "subnetAddressPrefix": "10.1.0.0/24", "addressPrefix": "10.1.0.0/16", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "roleDefinitionId": {"StorageBlobDataContributor": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'ba92f5b4-2d11-453d-a403-e96b0029c9fe\')]", "StorageBlobDataOwner": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'b7e6dc6d-f1e8-4753-8033-0f276bb0955b\')]", "StorageBlobDataReader": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'2a2b9908-6ea1-4ae2-8e65-a410df84e7d1\')]"}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2019-04-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetAddressPrefix\')]", "privateEndpointNetworkPolicies": "Enabled", "privateLinkServiceNetworkPolicies": "Enabled"}}]}}, {"type": "Microsoft.Network/publicIpAddresses", "apiVersion": "2019-02-01", "name": "[variables(\'publicIpAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIpAllocationMethod": "Dynamic", "publicIPAddressVersion": "IPv4", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}, "idleTimeoutInMinutes": 4}, "sku": {"name": "Basic", "tier": "Regional"}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-02-01", "name": "[parameters(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "SSH", "properties": {"priority": 1000, "protocol": "TCP", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "22"}}]}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2018-10-01", "name": "[variables(\'networkInterfaceName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups/\', parameters(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', parameters(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/publicIpAddresses/\', variables(\'publicIpAddressName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "privateIPAllocationMethod": "Dynamic", "publicIpAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\',parameters(\'networkSecurityGroupName\'))]"}}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2019-03-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'networkInterfaceName\'))]"], "identity": {"type": "SystemAssigned"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'VmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"osDisk": {"createOption": "fromImage", "managedDisk": {"storageAccountType": "[variables(\'osDiskType\')]"}}, "imageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"}]}}}, {"type": "Microsoft.Resources/deployments", "apiVersion": "2019-09-01", "name": "assignRole", "resourceGroup": "[parameters(\'storageAccountResourceGroupName\')]", "dependsOn": ["[parameters(\'vmName\')]"], "properties": {"mode": "Incremental", "expressionEvaluationOptions": {"scope": "inner"}, "parameters": {"storageAccountResourceGroupName": {"value": "[parameters(\'storageAccountResourceGroupName\')]"}, "storageAccountName": {"value": "[parameters(\'storageAccountName\')]"}, "assignedRoleDefinitionId": {"value": "[variables(\'roleDefinitionId\')[parameters(\'msiRole\')]]"}, "principalId": {"value": "[reference(parameters(\'vmName\'),\'2019-07-01\', \'Full\').identity.principalId]"}}, "template": {"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"storageAccountResourceGroupName": {"type": "string"}, "storageAccountName": {"type": "string"}, "assignedRoleDefinitionId": {"type": "string"}, "principalId": {"type": "string"}}, "variables": {"roleName": "[guid(parameters(\'assignedRoleDefinitionId\'), parameters(\'principalId\'), parameters(\'storageAccountName\'))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts/providers/roleAssignments", "apiVersion": "2018-09-01-preview", "name": "[concat(parameters(\'storageAccountName\'), \'/Microsoft.Authorization/\', variables(\'roleName\') )]", "properties": {"roleDefinitionId": "[parameters(\'assignedRoleDefinitionId\')]", "principalId": "[parameters(\'principalId\')]", "principalType": "ServicePrincipal"}}], "outputs": {}}}}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}, "hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
Based on the provided ARM template and parameters, here is the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmName="vm-msi"\nadminUsername="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\ndnsLabelPrefix=$(echo "vm-msi-$(uuidgen | tr \'[:upper:]\' \'[:lower:]\')" | tr -d \'-\')\nubuntuOSVersion="19.04"\nlocation="westus"\nVmSize="Standard_B2s"\nvirtualNetworkName="vNet"\nsubnetName="Subnet"\nnetworkSecurityGroupName="SecGroupNet"\nstorageAccountResourceGroupName="zytest"\nstorageAccountName="zytest"\nmsiRole="StorageBlobDataReader"\n\n# Variables\npublicIpAddressName="${vmName}PublicIP"\nnetworkInterfaceName="${vmName}NetInt"\nsubnetRef=$(az network vnet subnet show --name $subnetName --vnet-name $virtualNetworkName --query id -o tsv)\nosDiskType="StandardSSD_LRS"\nsubnetAddressPrefix="10.1.0.0/24"\naddressPrefix="10.1.0.0/16"\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group $storageAccountResourceGroupName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetAddressPrefix\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIpAddressName \\\n    --resource-group $storageAccountResourceGroupName \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $dnsLabelPrefix\n\n# Create Network Security Group and Rule\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --resource-group $storageAccountResourceGroupName \\\n    --location $location\n\naz network nsg rule create \\\n    --name SSH \\\n    --nsg-name $networkSecurityGroupName \\\n    --resource-group $storageAccountResourceGroupName \\\n    --protocol Tcp \\\n    --priority 1000 \\\n    --destination-port-range 22 \\\n    --access Allow \\\n    --direction Inbound \\\n    --source-address-prefix \'*\' \\\n    --source-port-range \'*\'\n\n# Create Network Interface\naz network nic create \\\n    --name $networkInterfaceName \\\n    --resource-group $storageAccountResourceGroupName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --network-security-group $networkSecurityGroupName \\\n    --public-ip-address $publicIpAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --resource-group $storageAccountResourceGroupName \\\n    --location $location \\\n    --nics $networkInterfaceName \\\n    --size $VmSize \\\n    --image Canonical:UbuntuServer:$ubuntuOSVersion:latest \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --ssh-key-value "$adminPasswordOrKey" \\\n    --os-disk-size-gb 30 \\\n    --os-disk-caching ReadWrite \\\n    --os-disk-name "${vmName}_osdisk" \\\n    --storage-sku $osDiskType\n\n# Get the principal ID of the VM\nprincipalId=$(az vm show --name $vmName --resource-group $storageAccountResourceGroupName --query identity.principalId -o tsv)\n\n# Role assignment for the VM\'s MSI on the storage account\nroleDefinitionId=$(az role definition list --name $msiRole --query [].id -o tsv)\naz role assignment create \\\n    --assignee $principalId \\\n    --role $roleDefinitionId \\\n    --scope "/subscriptions/$(az account show --query id -o tsv)/resourceGroups/$storageAccountResourceGroupName/providers/Microsoft.Storage/storageAccounts/$storageAccountName"\n\n# Outputs\nadminUsernameOutput=$adminUsername\nhostnameOutput=$(az network public-ip show --name $publicIpAddressName --resource-group $storageAccountResourceGroupName --query dnsSettings.fqdn -o tsv)\nsshCommandOutput="ssh $adminUsernameOutput@$hostnameOutput"\n\necho "Admin Username: $adminUsernameOutput"\necho "Hostname: $hostnameOutput"\necho "SSH Command: $sshCommandOutput"\n```\n\nPlease note that this script assumes you have the required permissions to create the resources in Azure and that the Azure CLI is installed and logged in to your Azure account. Also, some values like the DNS label prefix are dynamically generated, and the uniqueString function used in ARM templates is replaced with a UUID generation in bash. Adjust the script as necessary for your specific use case.


verify_result
