arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"location": {"type": "string", "metadata": {"description": "Location for the VM, only certain regions support Availability Zones"}, "defaultValue": "westus"}, "vmssSku": {"type": "string", "defaultValue": "Standard_A2_V2", "metadata": {"description": "Size of the scale set."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources and resource-specific information is appended."}, "minLength": 3, "maxLength": 61, "defaultValue": "zytest"}, "numberOfVms": {"type": "int", "defaultValue": 2, "metadata": {"description": "The number of VMs to deploy in each VMSS."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"virtualNetworkName": "[concat(parameters(\'dnsName\'), \'-vnet\')]", "subnetName": "Subnet1", "networkSecurityGroupName": "allowRemoting", "publicIPAddressName": "lbPublicIp", "lbName": "[concat(\'lb-\', parameters(\'dnsName\'))]", "lbBE": "lbBE", "lbNAT": "lbNAT", "myZones": ["1", "2"], "linuxImage": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "16.04.0-LTS", "version": "latest"}, "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-11-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-11-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "remoteConnection", "properties": {"description": "Allow SSH traffic", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "22", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 101, "direction": "Inbound"}}, {"name": "webTraffic", "properties": {"description": "Allow web traffic", "protocol": "Tcp", "sourcePortRange": "80", "destinationPortRange": "80", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 100, "direction": "Inbound"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-11-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard"}, "properties": {"publicIPAllocationMethod": "Static", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsName\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "apiVersion": "2020-11-01", "name": "[variables(\'lbName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard"}, "dependsOn": ["[variables(\'publicIPAddressName\')]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'lbBE\')]"}], "loadbalancingRules": [{"name": "lbrule1", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'lbName\'), \'loadBalancerFrontEnd\')]"}, "backendaddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'lbName\'), variables(\'lbBE\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'lbName\'), \'tcpProbe\')]"}}}], "probes": [{"name": "tcpProbe", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}], "inboundNatPools": [{"name": "[concat(variables(\'lbNAT\'), \'1\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'lbName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 50100, "frontendPortRangeEnd": 50199, "backendPort": 22}}, {"name": "[concat(variables(\'lbNAT\'), \'2\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'lbName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 50200, "frontendPortRangeEnd": 50299, "backendPort": 22}}, {"name": "[concat(variables(\'lbNAT\'), \'3\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'lbName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 50300, "frontendPortRangeEnd": 50399, "backendPort": 22}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "apiVersion": "2020-12-01", "name": "[concat(\'myScaleset\',\'-zone\', variables(\'myZones\')[copyindex()])]", "location": "[parameters(\'location\')]", "zones": ["[variables(\'myZones\')[copyindex()]]"], "copy": {"name": "VMSScount", "count": "[length(variables(\'myZones\'))]"}, "dependsOn": ["[variables(\'virtualNetworkName\')]", "[variables(\'lbName\')]", "[variables(\'networkSecurityGroupName\')]"], "sku": {"name": "[parameters(\'vmssSku\')]", "capacity": "[parameters(\'numberOfVms\')]"}, "properties": {"singlePlacementGroup": true, "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage"}, "imageReference": "[variables(\'linuxImage\')]", "dataDisks": [{"lun": 1, "createOption": "Empty", "diskSizeGB": 50}]}, "osProfile": {"computerNamePrefix": "vm", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "customData": "[base64(variables(\'myZones\')[copyindex()])]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "myNic", "properties": {"networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}, "primary": true, "ipConfigurations": [{"name": "myIpConfig", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'lbName\'), variables(\'lbBE\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'lbName\'), concat(variables(\'lbNAT\'), copyindex(1)))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"name": "AppInstall", "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["https://raw.githubusercontent.com/Azure-Samples/compute-automation-configurations/master/automate_nginx.sh"], "commandToExecute": "bash automate_nginx.sh"}}}]}}}}]}


cli_script
Below is the translated Azure CLI script from the given ARM template and parameters. The parameters have been converted into bash variables, and each resource has been translated into the corresponding Azure CLI command.\n\n```bash\n#!/bin/bash\n\n# Parameters\nlocation="westus"\nvmssSku="Standard_A2_V2"\nadminUsername="zytest"\ndnsName="zytest"\nnumberOfVms=2\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Variables\nvirtualNetworkName="${dnsName}-vnet"\nsubnetName="Subnet1"\nnetworkSecurityGroupName="allowRemoting"\npublicIPAddressName="lbPublicIp"\nlbName="lb-${dnsName}"\nlbBE="lbBE"\nlbNAT="lbNAT"\nmyZones=("1" "2")\nlinuxImagePublisher="Canonical"\nlinuxImageOffer="UbuntuServer"\nlinuxImageSku="16.04.0-LTS"\nlinuxImageVersion="latest"\nsshPublicKeyPath="/home/${adminUsername}/.ssh/authorized_keys"\n\n# Create Virtual Network\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --location $location \\\n  --address-prefixes "10.0.0.0/16" \\\n  --subnet-name $subnetName \\\n  --subnet-prefix "10.0.0.0/24"\n\n# Create Network Security Group\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --location $location\n\n# Create Security Rules\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name "remoteConnection" \\\n  --description "Allow SSH traffic" \\\n  --protocol Tcp \\\n  --source-port-ranges "*" \\\n  --destination-port-ranges "22" \\\n  --source-address-prefixes "*" \\\n  --destination-address-prefixes "*" \\\n  --access Allow \\\n  --priority 101 \\\n  --direction Inbound\n\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name "webTraffic" \\\n  --description "Allow web traffic" \\\n  --protocol Tcp \\\n  --source-port-ranges "80" \\\n  --destination-port-ranges "80" \\\n  --source-address-prefixes "*" \\\n  --destination-address-prefixes "*" \\\n  --access Allow \\\n  --priority 100 \\\n  --direction Inbound\n\n# Create Public IP Address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --sku "Standard" \\\n  --allocation-method "Static" \\\n  --dns-name $dnsName\n\n# Create Load Balancer\naz network lb create \\\n  --name $lbName \\\n  --location $location \\\n  --sku "Standard" \\\n  --public-ip-address $publicIPAddressName \\\n  --frontend-ip-name "LoadBalancerFrontEnd" \\\n  --backend-pool-name $lbBE\n\n# Create Load Balancer Probe\naz network lb probe create \\\n  --lb-name $lbName \\\n  --name "tcpProbe" \\\n  --protocol Tcp \\\n  --port 80 \\\n  --interval 5 \\\n  --count 2\n\n# Create Load Balancer Rule\naz network lb rule create \\\n  --lb-name $lbName \\\n  --name "lbrule1" \\\n  --protocol Tcp \\\n  --frontend-port 80 \\\n  --backend-port 80 \\\n  --frontend-ip-name "LoadBalancerFrontEnd" \\\n  --backend-pool-name $lbBE \\\n  --probe-name "tcpProbe"\n\n# Create Inbound NAT Pools\nfor i in {1..3}\ndo\n  az network lb inbound-nat-pool create \\\n    --lb-name $lbName \\\n    --name "${lbNAT}${i}" \\\n    --protocol Tcp \\\n    --frontend-port-range-start $((50100 + (i - 1) * 100)) \\\n    --frontend-port-range-end $((50199 + (i - 1) * 100)) \\\n    --backend-port 22 \\\n    --frontend-ip-name "LoadBalancerFrontEnd"\ndone\n\n# Create VMSS in each zone\nfor zone in "${myZones[@]}"\ndo\n  az vmss create \\\n    --name "myScaleset-zone$zone" \\\n    --resource-group YourResourceGroup \\  # Replace with your resource group name\n    --location $location \\\n    --zones $zone \\\n    --vm-sku $vmssSku \\\n    --instance-count $numberOfVms \\\n    --upgrade-policy-mode "Manual" \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPasswordOrKey \\\n    --authentication-type $authenticationType \\\n    --image $linuxImagePublisher:$linuxImageOffer:$linuxImageSku:$linuxImageVersion \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --lb $lbName \\\n    --backend-pool-name $lbBE \\\n    --nsg $networkSecurityGroupName \\\n    --public-ip-per-vm \\\n    --storage-sku Standard_LRS \\\n    --data-disk-sizes-gb 50 \\\n    --custom-data $zone \\\n    --single-placement-group true \\\n    --ssh-key-value $sshPublicKeyPath\ndone\n```\n\nPlease replace `YourResourceGroup` with the actual name of your resource group. This script assumes that you have already logged into Azure CLI and have appropriate permissions to create these resources. The script may need to be adjusted if your resource group or other configuration details differ from the provided template.


verify_result
