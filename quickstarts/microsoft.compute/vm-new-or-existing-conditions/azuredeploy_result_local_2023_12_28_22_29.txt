arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.21.1.54444", "templateHash": "7353643662133945299"}}, "parameters": {"location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location to for the resources."}}, "vmName": {"type": "string", "defaultValue": "linux-vm", "metadata": {"description": "Name for the Virtual Machine."}}, "adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["password", "sshPublicKey"], "metadata": {"description": "Type of authentication to use on the Virtual Machine."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "Password or ssh key for the Virtual Machine."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size for the Virtual Machine."}}, "storageNewOrExisting": {"type": "string", "defaultValue": "new", "metadata": {"description": "Determines whether or not a new storage account should be provisioned."}}, "storageAccountName": {"type": "string", "defaultValue": "zytest", "metadata": {"description": "Name of the storage account"}}, "storageAccountType": {"type": "string", "defaultValue": "Standard_LRS", "metadata": {"description": "Storage account type"}}, "storageAccountResourceGroupName": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "Name of the resource group for the existing storage account"}}, "virtualNetworkNewOrExisting": {"type": "string", "defaultValue": "new", "metadata": {"description": "Determines whether or not a new virtual network should be provisioned."}}, "virtualNetworkName": {"type": "string", "defaultValue": "VirtualNetwork", "metadata": {"description": "Name of the virtual network"}}, "addressPrefixes": {"type": "array", "defaultValue": ["10.0.0.0/16"], "metadata": {"description": "Address prefix of the virtual network"}}, "subnetName": {"type": "string", "defaultValue": "default", "metadata": {"description": "Name of the subnet"}}, "subnetPrefix": {"type": "string", "defaultValue": "10.0.0.0/24", "metadata": {"description": "Subnet prefix of the virtual network"}}, "virtualNetworkResourceGroupName": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "Name of the resource group for the existing virtual network"}}, "publicIpNewOrExisting": {"type": "string", "defaultValue": "new", "allowedValues": ["new", "existing", "none"], "metadata": {"description": "Determines whether or not a new public ip should be provisioned."}}, "publicIpName": {"type": "string", "defaultValue": "PublicIp", "metadata": {"description": "Name of the public ip address"}}, "publicIpDns": {"type": "string", "defaultValue": "[format(\'linux-vm-{0}\', uniqueString(resourceGroup().id))]", "metadata": {"description": "DNS of the public ip address for the VM"}}, "publicIpResourceGroupName": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "Name of the resource group for the public ip address"}}, "securityType": {"type": "string", "defaultValue": "TrustedLaunch", "allowedValues": ["Standard", "TrustedLaunch"], "metadata": {"description": "Security Type of the Virtual Machine."}}, "imageOffer": {"type": "string", "defaultValue": "0001-com-ubuntu-server-lunar", "allowedValues": ["0001-com-ubuntu-minimal-bionic", "0001-com-ubuntu-minimal-lunar-daily", "0001-com-ubuntu-server-focal", "0001-com-ubuntu-server-jammy", "0001-com-ubuntu-server-lunar", "0001-com-ubuntu-server-lunar-daily", "0003-com-ubuntu-server-trusted-vm"], "metadata": {"description": "Windows Server and SQL Offer"}}, "sqlSku": {"type": "string", "defaultValue": "23_04-gen2", "allowedValues": ["22_10-minimal-gen2", "18_04-lts-gen2", "minimal-20_04-daily-lts-gen2", "minimal-23_04-daily-gen2", "minimal-23_04-gen2", "20_04-daily-lts-gen2", "23_04-daily-gen2", "23_04-gen2"], "metadata": {"description": "SQL Server Sku"}}}, "variables": {"securityProfileJson": {"uefiSettings": {"secureBootEnabled": true, "vTpmEnabled": true}, "securityType": "[parameters(\'securityType\')]"}, "extensionName": "GuestAttestation", "extensionPublisher": "Microsoft.Azure.Security.LinuxAttestation", "extensionVersion": "1.0", "maaTenantName": "GuestAttestation", "nicName": "[format(\'{0}-nic\', parameters(\'vmName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[format(\'/home/{0}/.ssh/authorized_keys\', parameters(\'adminUsername\'))]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "publicIpAddressId": {"id": "[resourceId(parameters(\'publicIpResourceGroupName\'), \'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]"}, "networkSecurityGroupName": "default-NSG"}, "resources": [{"condition": "[equals(parameters(\'storageNewOrExisting\'), \'new\')]", "type": "Microsoft.Storage/storageAccounts", "apiVersion": "2023-01-01", "name": "[parameters(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "kind": "Storage", "sku": {"name": "[parameters(\'storageAccountType\')]"}}, {"condition": "[equals(parameters(\'publicIpNewOrExisting\'), \'new\')]", "type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2023-05-01", "name": "[parameters(\'publicIpName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'publicIpDns\')]"}}}, {"condition": "[equals(parameters(\'virtualNetworkNewOrExisting\'), \'new\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2023-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"condition": "[equals(parameters(\'virtualNetworkNewOrExisting\'), \'new\')]", "type": "Microsoft.Network/virtualNetworks", "apiVersion": "2023-05-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": "[parameters(\'addressPrefixes\')]"}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[parameters(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2023-05-01", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[resourceId(parameters(\'virtualNetworkResourceGroupName\'), \'Microsoft.Network/virtualNetworks/subnets/\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]"}, "publicIPAddress": "[if(not(equals(parameters(\'publicIpNewOrExisting\'), \'none\')), variables(\'publicIpAddressId\'), null())]"}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2023-07-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), null(), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "Canonical", "offer": "[parameters(\'imageOffer\')]", "sku": "[parameters(\'sqlSku\')]", "version": "latest"}, "osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}}, "securityProfile": "[if(equals(parameters(\'securityType\'), \'TrustedLaunch\'), variables(\'securityProfileJson\'), null())]", "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(parameters(\'storageAccountResourceGroupName\'), \'Microsoft.Storage/storageAccounts/\', parameters(\'storageAccountName\')), \'2020-08-01-preview\').primaryEndpoints.blob]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]", "[resourceId(\'Microsoft.Storage/storageAccounts\', parameters(\'storageAccountName\'))]"]}, {"condition": "[and(equals(parameters(\'securityType\'), \'TrustedLaunch\'), and(equals(variables(\'securityProfileJson\').uefiSettings.secureBootEnabled, true()), equals(variables(\'securityProfileJson\').uefiSettings.vTpmEnabled, true())))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2023-07-01", "name": "[format(\'{0}/{1}\', parameters(\'vmName\'), \'GuestAttestation\')]", "location": "[parameters(\'location\')]", "properties": {"publisher": "[variables(\'extensionPublisher\')]", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "enableAutomaticUpgrade": true, "settings": {"AttestationConfig": {"MaaSettings": {"maaEndpoint": "", "maaTenantName": "[variables(\'maaTenantName\')]"}, "AscSettings": {"ascReportingEndpoint": "", "ascReportingFrequency": ""}, "useCustomToken": "false", "disableAlerts": "false"}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}]}


cli_script
Below is the translated Azure CLI script based on the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameter variables\nlocation="westus"\nvmName="linux-vm"\nadminUsername="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nvmSize="Standard_D2s_v3"\nstorageNewOrExisting="new"\nstorageAccountName="zytest"\nstorageAccountType="Standard_LRS"\nstorageAccountResourceGroupName=$(az group show --query name --output tsv)\nvirtualNetworkNewOrExisting="new"\nvirtualNetworkName="VirtualNetwork"\naddressPrefixes=\'["10.0.0.0/16"]\'\nsubnetName="default"\nsubnetPrefix="10.0.0.0/24"\nvirtualNetworkResourceGroupName=$(az group show --query name --output tsv)\npublicIpNewOrExisting="new"\npublicIpName="PublicIp"\npublicIpDns=$(printf "linux-vm-%s" $(az group show --query id --output tsv | md5sum | cut -d\' \' -f1))\npublicIpResourceGroupName=$(az group show --query name --output tsv)\nsecurityType="TrustedLaunch"\nimageOffer="0001-com-ubuntu-server-lunar"\nsqlSku="23_04-gen2"\n\n# Create a new storage account if \'new\' is specified\nif [ "$storageNewOrExisting" == "new" ]; then\n    az storage account create \\\n        --name $storageAccountName \\\n        --location $location \\\n        --sku $storageAccountType \\\n        --kind Storage\nfi\n\n# Create a new public IP address if \'new\' is specified\nif [ "$publicIpNewOrExisting" == "new" ]; then\n    az network public-ip create \\\n        --name $publicIpName \\\n        --location $location \\\n        --allocation-method Dynamic \\\n        --dns-name $publicIpDns \\\n        --resource-group $publicIpResourceGroupName\nfi\n\n# Create a new network security group and virtual network if \'new\' is specified\nif [ "$virtualNetworkNewOrExisting" == "new" ]; then\n    az network nsg create \\\n        --name default-NSG \\\n        --location $location \\\n        --resource-group $virtualNetworkResourceGroupName\n    \n    az network nsg rule create \\\n        --nsg-name default-NSG \\\n        --name default-allow-22 \\\n        --priority 1000 \\\n        --access Allow \\\n        --direction Inbound \\\n        --protocol Tcp \\\n        --destination-port-ranges 22 \\\n        --source-address-prefixes \'*\' \\\n        --destination-address-prefixes \'*\' \\\n        --resource-group $virtualNetworkResourceGroupName\n    \n    az network vnet create \\\n        --name $virtualNetworkName \\\n        --location $location \\\n        --address-prefixes $addressPrefixes \\\n        --subnet-name $subnetName \\\n        --subnet-prefix $subnetPrefix \\\n        --resource-group $virtualNetworkResourceGroupName \\\n        --network-security-group default-NSG\nfi\n\n# Create a network interface\nnicId=$(az network nic create \\\n    --name "${vmName}-nic" \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --public-ip-address $publicIpName \\\n    --query \'NewNIC.id\' --output tsv)\n\n# Create a virtual machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --size $vmSize \\\n    --admin-username $adminUsername \\\n    $(if [ "$authenticationType" == "password" ]; then echo "--authentication-type password --admin-password $adminPasswordOrKey"; else echo "--authentication-type ssh --ssh-key-value \'$adminPasswordOrKey\'"; fi) \\\n    --image Canonical:$imageOffer:$sqlSku:latest \\\n    --nics $nicId \\\n    --enable-agent true \\\n    --boot-diagnostics-storage $storageAccountName\n\n# Add Trusted Launch Extension if the security type is \'TrustedLaunch\'\nif [ "$securityType" == "TrustedLaunch" ]; then\n    az vm extension set \\\n        --vm-name $vmName \\\n        --name GuestAttestation \\\n        --publisher Microsoft.Azure.Security.LinuxAttestation \\\n        --version 1.0 \\\n        --settings \'{"AttestationConfig": {"MaaSettings": {"maaEndpoint": "", "maaTenantName": "GuestAttestation"}, "AscSettings": {"ascReportingEndpoint": "", "ascReportingFrequency": ""}, "useCustomToken": "false", "disableAlerts": "false"}}\'\nfi\n```\n\nPlease note that the script assumes that you are logged into Azure CLI and have selected the appropriate subscription. Additionally, the script uses the `az group show --query name --output tsv` command to obtain the current resource group name, which may need to be adjusted based on your environment. The `az group show --query id --output tsv` command is used to generate a unique DNS name for the public IP address. The script also assumes that the storage account and public IP address are being created in the same resource group as the VM. Adjustments may be necessary if different resource groups are used.


verify_result
