arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "freeBSDOSVersion": {"type": "string", "defaultValue": "12.0", "allowedValues": ["12.0", "11.2", "11.1", "11.0", "10.4", "10.3"], "metadata": {"description": "The FreeBSD version for the VM. This will pick a fully patched image of this given FreeBSD version."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "Size of the virtual machine."}}}, "variables": {"storageAccountName": "[concat(uniquestring(resourceGroup().id), \'safreebsdvm\')]", "imagePublisher": "MicrosoftOSTC", "imageOffer": "FreeBSD", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "storageAccountType": "Standard_LRS", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "vmName": "MyFreeBSDVM", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2", "properties": {}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'freeBSDOSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": 1023, "lun": 0, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\')), \'2020-08-01-preview\').primaryEndpoints[\'blob\']]"}}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
```bash\n#!/bin/bash\n\n# Translate ARM template parameters to variables\nadminUsername="zytest"\ndnsLabelPrefix="zytest"\nfreeBSDOSVersion="12.0"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nvmSize="Standard_A1_v2"\n\n# Unique string for the storage account name is not directly translatable to CLI\n# You need to generate a unique string in your bash script.\n# For the sake of this example, we will use a placeholder value: uniquename123\nstorageAccountName="uniquename123safreebsdvm"\n\n# Static variables defined in ARM template\nimagePublisher="MicrosoftOSTC"\nimageOffer="FreeBSD"\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nstorageAccountType="Standard_LRS"\npublicIPAddressName="myPublicIP"\npublicIPAddressType="Dynamic"\nvmName="MyFreeBSDVM"\nvirtualNetworkName="MyVNET"\n# Network Security Group name is derived from subnet name\nnetworkSecurityGroupName="${subnetName}-nsg"\n\n# Create a storage account\naz storage account create \\\n  --name $storageAccountName \\\n  --location $location \\\n  --sku $storageAccountType \\\n  --kind StorageV2\n\n# Create a public IP address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --allocation-method $publicIPAddressType \\\n  --dns-name $dnsLabelPrefix\n\n# Create a Network Security Group and a rule to allow SSH\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --location $location\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name default-allow-22 \\\n  --priority 1000 \\\n  --access Allow \\\n  --direction Inbound \\\n  --destination-port-ranges 22 \\\n  --protocol Tcp \\\n  --source-address-prefixes \'*\' \\\n  --source-port-ranges \'*\'\n\n# Create a virtual network with a subnet\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --location $location \\\n  --address-prefix $addressPrefix \\\n  --subnet-name $subnetName \\\n  --subnet-prefix $subnetPrefix\naz network vnet subnet update \\\n  --vnet-name $virtualNetworkName \\\n  --name $subnetName \\\n  --network-security-group $networkSecurityGroupName\n\n# Create a network interface\naz network nic create \\\n  --name $nicName \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetName \\\n  --public-ip-address $publicIPAddressName\n\n# Create a virtual machine\naz vm create \\\n  --name $vmName \\\n  --location $location \\\n  --nics $nicName \\\n  --size $vmSize \\\n  --image $imagePublisher:$imageOffer:$freeBSDOSVersion:latest \\\n  --admin-username $adminUsername \\\n  --authentication-type $authenticationType \\\n  --ssh-key-value "$adminPasswordOrKey" \\\n  --storage-sku $storageAccountType \\\n  --os-disk-size-gb 30 \\\n  --data-disk-sizes-gb 1023\n\n# Output hostname and SSH command\nfqdn=$(az network public-ip show --name $publicIPAddressName --query "dnsSettings.fqdn" -o tsv)\necho "Hostname: $fqdn"\necho "SSH Command: ssh $adminUsername@$fqdn"\n```\n\nPlease note that the above script assumes that you have Azure CLI installed and logged in to an Azure account with the necessary permissions to create these resources. Also, the script assumes that the unique string for the storage account name is pre-generated and replaced with a placeholder value. You will need to generate this unique string according to your requirements. Additionally, the script will create a single data disk for the VM with a size of 1023 GB as specified in the ARM template. Adjust the disk sizes and counts as needed for your scenario.


verify_result
