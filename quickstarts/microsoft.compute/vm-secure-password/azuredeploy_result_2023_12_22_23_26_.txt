arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[concat(\'vm-\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "windowsOSVersion": {"type": "string", "defaultValue": "2019-Datacenter", "allowedValues": ["2012-Datacenter", "2012-R2-Datacenter", "2016-Datacenter", "2019-Datacenter"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of the VM"}}}, "variables": {"storageAccountName": "[concat(uniquestring(resourceGroup().id), \'sawinvm\')]", "imagePublisher": "MicrosoftWindowsServer", "imageOffer": "WindowsServer", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "storageAccountType": "Standard_LRS", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "vmName": "SimpleWindowsVM", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2019-06-01", "location": "[parameters(\'location\')]", "kind": "Storage", "sku": {"name": "[variables(\'storageAccountType\')]"}}, {"apiVersion": "2019-11-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-11-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2019-11-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'networkSecurityGroupName\')]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2019-11-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]", "[variables(\'virtualNetworkName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2019-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'storageAccountName\')]", "[variables(\'nicName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'windowsOSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": 1023, "lun": 0, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'storageAccountName\')).primaryEndpoints.blob]"}}}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nadminUsername="zytest"\nadminPassword="zytest"\ndnsLabelPrefix="vm-$(uuidgen)"\nwindowsOSVersion="2019-Datacenter"\nlocation="westus"\nvmSize="Standard_D2_v3"\n\n# Define variables\nstorageAccountName="$(uuidgen)sawinvm"\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nstorageAccountType="Standard_LRS"\npublicIPAddressName="myPublicIP"\npublicIPAddressType="Dynamic"\nvmName="SimpleWindowsVM"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="${subnetName}-nsg"\n\n# Create storage account\naz storage account create --name $storageAccountName --location $location --kind Storage --sku $storageAccountType\n\n# Create public IP address\naz network public-ip create --name $publicIPAddressName --location $location --allocation-method $publicIPAddressType --dns-name $dnsLabelPrefix\n\n# Create network security group\naz network nsg create --name $networkSecurityGroupName --location $location\n\n# Add security rule to the network security group\naz network nsg rule create --nsg-name $networkSecurityGroupName --name default-allow-3389 --priority 1000 --access Allow --direction Inbound --destination-port-ranges 3389 --protocol Tcp --source-address-prefixes \'*\' --source-port-ranges \'*\' --destination-address-prefixes \'*\'\n\n# Create virtual network\naz network vnet create --name $virtualNetworkName --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetPrefix --network-security-group $networkSecurityGroupName\n\n# Create network interface\naz network nic create --name $nicName --location $location --vnet-name $virtualNetworkName --subnet $subnetName --public-ip-address $publicIPAddressName\n\n# Create virtual machine\naz vm create --name $vmName --location $location --size $vmSize --admin-username $adminUsername --admin-password $adminPassword --image $imagePublisher:$imageOffer:$windowsOSVersion:latest --nics $nicName --storage-account $storageAccountName --os-disk-size-gb 1023 --data-disk-sizes-gb 1023 --boot-diagnostics-storage $storageAccountName\n```\n\nPlease replace the `uuidgen` with a proper command to generate a unique string in your environment.


verify_result
