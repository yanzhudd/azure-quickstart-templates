arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_A1", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "windowsOSVersion": {"type": "string", "defaultValue": "2012-R2-Datacenter", "allowedValues": ["2008-R2-SP1", "2012-Datacenter", "2012-R2-Datacenter"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-57 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 57, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (1000 or less)."}, "minValue": 3, "maxValue": 1000, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password on all VMs."}, "defaultValue": "zytest"}}, "variables": {"namingInfix": "[toLower(substring(concat(parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.8.0/21", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "subnetName": "[concat(variables(\'namingInfix\'), \'subnet\')]", "nicName": "[concat(variables(\'namingInfix\'), \'nic\')]", "ipConfigName": "[concat(variables(\'namingInfix\'), \'ipconfig\')]", "imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'windowsOSVersion\')]", "version": "latest"}, "appGwPublicIPAddressName": "[concat(variables(\'namingInfix\'), \'appGwPip\')]", "appGwName": "[concat(variables(\'namingInfix\'), \'appGw\')]", "appGwSubnetName": "[concat(variables(\'namingInfix\'),\'appGwSubnet\')]", "appGwSubnetPrefix": "10.0.1.0/24", "appGwFrontendPort": 80, "appGwBackendPort": 80, "appGwBePoolName": "[concat(variables(\'namingInfix\'), \'appGwBepool\')]"}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-08-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}, {"name": "[variables(\'appGwSubnetName\')]", "properties": {"addressPrefix": "[variables(\'appGwSubnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'appGwPublicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2016-03-30", "properties": {"publicIPAllocationMethod": "Dynamic"}}, {"type": "Microsoft.Network/applicationGateways", "name": "[variables(\'appGwName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2016-03-30", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'appGwPublicIPAddressName\'))]"], "properties": {"sku": {"name": "Standard_Large", "tier": "Standard", "capacity": "10"}, "gatewayIPConfigurations": [{"name": "appGwIpConfig", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'appGwSubnetName\'))]"}}}], "frontendIPConfigurations": [{"name": "appGwFrontendIP", "properties": {"PublicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'appGwPublicIPAddressName\'))]"}}}], "frontendPorts": [{"name": "appGwFrontendPort", "properties": {"Port": "[variables(\'appGwFrontendPort\')]"}}], "backendAddressPools": [{"name": "[variables(\'appGwBePoolName\')]"}], "backendHttpSettingsCollection": [{"name": "appGwBackendHttpSettings", "properties": {"Port": "[variables(\'appGwBackendPort\')]", "Protocol": "Http", "CookieBasedAffinity": "Disabled"}}], "httpListeners": [{"name": "appGwHttpListener", "properties": {"FrontendIPConfiguration": {"Id": "[resourceId(\'Microsoft.Network/applicationGateways/frontendIPConfigurations\',variables(\'appGwName\'),\'appGwFrontendIP\')]"}, "FrontendPort": {"Id": "[resourceId(\'Microsoft.Network/applicationGateways/frontendPorts\',variables(\'appGwName\'), \'appGwFrontendPort\' )]"}, "Protocol": "Http"}}], "requestRoutingRules": [{"Name": "rule1", "properties": {"RuleType": "Basic", "httpListener": {"id": "[resourceId(\'Microsoft.Network/applicationGateways/httpListeners\',variables(\'appGwName\'), \'appGwHttpListener\')]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/applicationGateways/backendAddressPools/\',variables(\'appGwName\'), variables(\'appGwBePoolName\'))]"}, "backendHttpSettings": {"id": "[resourceId(\'Microsoft.Network/applicationGateways/backendHttpSettingsCollection/\',variables(\'appGwName\'), \'appGwBackendHttpSettings\')]"}}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[variables(\'namingInfix\')]", "location": "[parameters(\'location\')]", "apiVersion": "2016-04-30-preview", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/applicationGateways/\', variables(\'appGwName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "true", "singlePlacementGroup": "false", "upgradePolicy": {"mode": "Automatic"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[variables(\'namingInfix\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "ApplicationGatewayBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/applicationGateways/backendAddressPools/\', variables(\'appGwName\'), variables(\'appGwBePoolName\'))]"}]}}]}}]}}}}]}


cli_script
Based on the provided ARM template and parameters, below is the equivalent Azure CLI script in bash:\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nvmSku="Standard_A1"\nwindowsOSVersion="2012-R2-Datacenter"\nvmssName="zytest"\ninstanceCount=3\nadminUsername="zytest"\nlocation="westus"\nadminPassword="zytest"\n\n# Derived variables from the ARM template\nnamingInfix=$(echo -n "$vmssName" | tr \'[:upper:]\' \'[:lower:]\' | cut -c 1-9)\naddressPrefix="10.0.0.0/16"\nsubnetPrefix="10.0.8.0/21"\nvirtualNetworkName="${namingInfix}vnet"\nsubnetName="${namingInfix}subnet"\nnicName="${namingInfix}nic"\nipConfigName="${namingInfix}ipconfig"\nimageReferencePublisher="MicrosoftWindowsServer"\nimageReferenceOffer="WindowsServer"\nimageReferenceSku="$windowsOSVersion"\nimageReferenceVersion="latest"\nappGwPublicIPAddressName="${namingInfix}appGwPip"\nappGwName="${namingInfix}appGw"\nappGwSubnetName="${namingInfix}appGwSubnet"\nappGwSubnetPrefix="10.0.1.0/24"\nappGwFrontendPort=80\nappGwBackendPort=80\nappGwBePoolName="${namingInfix}appGwBepool"\n\n# Create Virtual Network\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --address-prefix $addressPrefix \\\n  --subnet-name $subnetName \\\n  --subnet-prefix $subnetPrefix\n\n# Create Application Gateway Subnet\naz network vnet subnet create \\\n  --name $appGwSubnetName \\\n  --resource-group <ResourceGroupName> \\\n  --vnet-name $virtualNetworkName \\\n  --address-prefix $appGwSubnetPrefix\n\n# Create Public IP Address for Application Gateway\naz network public-ip create \\\n  --name $appGwPublicIPAddressName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --allocation-method Dynamic\n\n# Create Application Gateway\naz network application-gateway create \\\n  --name $appGwName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $appGwSubnetName \\\n  --public-ip-address $appGwPublicIPAddressName \\\n  --sku Standard_Large \\\n  --capacity 10 \\\n  --frontend-port $appGwFrontendPort \\\n  --http-settings-cookie-based-affinity Disabled \\\n  --http-settings-port $appGwBackendPort \\\n  --http-settings-protocol Http\n\n# Create Virtual Machine Scale Set\naz vmss create \\\n  --name $namingInfix \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --vm-sku $vmSku \\\n  --instance-count $instanceCount \\\n  --admin-username $adminUsername \\\n  --admin-password $adminPassword \\\n  --image "publisher=$imageReferencePublisher offer=$imageReferenceOffer sku=$imageReferenceSku version=$imageReferenceVersion" \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetName \\\n  --backend-pool-name $appGwBePoolName \\\n  --upgrade-policy-mode Automatic \\\n  --overprovision true \\\n  --single-placement-group false\n\n# Note: Replace <ResourceGroupName> with your actual resource group name.\n```\n\nPlease note that in the script above, you need to replace `<ResourceGroupName>` with the actual name of your resource group where you want to deploy these resources. Additionally, you will need to ensure that you have the necessary permissions and the Azure CLI is installed and configured to interact with your Azure subscription.


verify_result
