arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 12, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "minValue": 3, "maxValue": 100, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "storageAccountName": {"type": "string", "metadata": {"description": "Storage account name for Azure file share."}, "defaultValue": "zytest"}, "storageAccountKey": {"type": "securestring", "metadata": {"description": "Storage account key for Azure file share."}, "defaultValue": "zytest"}, "shareName": {"type": "string", "metadata": {"description": "Azure file share name."}, "defaultValue": "zytest"}, "mountpointPath": {"type": "string", "defaultValue": "/mnt/azurefiles", "metadata": {"description": "Path on VM to mount file share - will also link to user home dir."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located including a trailing \'/\'"}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."}, "defaultValue": ""}}, "variables": {"addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(parameters(\'vmssName\'), \'vnet\')]", "publicIPAddressName": "[concat(parameters(\'vmssName\'), \'pip\')]", "subnetName": "[concat(parameters(\'vmssName\'), \'subnet\')]", "loadBalancerName": "[concat(parameters(\'vmssName\'), \'lb\')]", "natPoolName": "[concat(parameters(\'vmssName\'), \'natpool\')]", "bePoolName": "[concat(parameters(\'vmssName\'), \'bepool\')]", "natStartPort": 50000, "natEndPort": 50120, "natBackendPort": 22, "nicName": "[concat(parameters(\'vmssName\'), \'nic\')]", "ipConfigName": "[concat(parameters(\'vmssName\'), \'ipconfig\')]", "osType": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "16.04-LTS", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-08-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-11-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'vmssName\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-11-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',variables(\'loadBalancerName\'),\'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}, {"name": "natpool2", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',variables(\'loadBalancerName\'),\'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 9000, "frontendPortRangeEnd": 9120, "backendPort": 9000}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-12-01", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": false, "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[parameters(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools/\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools/\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}, {"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'),\'natpool2\')]"}]}}]}}]}, "extensionProfile": {"extensions": [{"name": "filesextension", "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[uri(parameters(\'_artifactsLocation\'), concat(\'mountazurefiles.sh\', parameters(\'_artifactsLocationSasToken\')))]"]}, "protectedSettings": {"commandToExecute": "[concat(\'bash mountazurefiles.sh \', parameters(\'storageAccountName\'), \' \', parameters(\'storageAccountKey\'), \' \', parameters(\'shareName\'), \' \', parameters(\'mountpointPath\'), \' \', parameters(\'adminUsername\'))]"}}}]}}}}]}


cli_script
Below is the equivalent Azure CLI script to create the resources defined in the ARM template provided:\n\n```bash\n#!/bin/bash\n\n# Define the parameters as variables\nvmSku="Standard_D2_v3"\nvmssName="zytest"\nlocation="westus"\ninstanceCount=1\nadminUsername="zytest"\nstorageAccountName="zytest"\nstorageAccountKey="zytest"\nshareName="zytest"\nmountpointPath="/mnt/azurefiles"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\n\n# Define the resource names using the variables\nvirtualNetworkName="${vmssName}vnet"\npublicIPAddressName="${vmssName}pip"\nsubnetName="${vmssName}subnet"\nloadBalancerName="${vmssName}lb"\nnatPoolName="${vmssName}natpool"\nbePoolName="${vmssName}bepool"\nnicName="${vmssName}nic"\nipConfigName="${vmssName}ipconfig"\n\n# Define the address prefixes\naddressPrefix="10.0.0.0/16"\nsubnetPrefix="10.0.0.0/24"\n\n# Define the NAT pool settings\nnatStartPort=50000\nnatEndPort=50120\nnatBackendPort=22\n\n# Create a virtual network\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --address-prefix $addressPrefix \\\n  --subnet-name $subnetName \\\n  --subnet-prefix $subnetPrefix\n\n# Create a public IP address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --allocation-method Dynamic\n\n# Create a load balancer\naz network lb create \\\n  --name $loadBalancerName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --frontend-ip-name LoadBalancerFrontEnd \\\n  --public-ip-address $publicIPAddressName \\\n  --backend-pool-name $bePoolName\n\n# Create a NAT pool for the load balancer\naz network lb inbound-nat-pool create \\\n  --resource-group <ResourceGroupName> \\\n  --lb-name $loadBalancerName \\\n  --name $natPoolName \\\n  --protocol Tcp \\\n  --frontend-port-range-start $natStartPort \\\n  --frontend-port-range-end $natEndPort \\\n  --backend-port $natBackendPort\n\n# Create another NAT pool for the load balancer\naz network lb inbound-nat-pool create \\\n  --resource-group <ResourceGroupName> \\\n  --lb-name $loadBalancerName \\\n  --name natpool2 \\\n  --protocol Tcp \\\n  --frontend-port-range-start 9000 \\\n  --frontend-port-range-end 9120 \\\n  --backend-port 9000\n\n# Create a VM scale set\naz vmss create \\\n  --name $vmssName \\\n  --resource-group <ResourceGroupName> \\\n  --location $location \\\n  --vm-sku $vmSku \\\n  --instance-count $instanceCount \\\n  --admin-username $adminUsername \\\n  --authentication-type $authenticationType \\\n  --admin-password $adminPasswordOrKey \\\n  --image Canonical:UbuntuServer:16.04-LTS:latest \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetName \\\n  --load-balancer $loadBalancerName \\\n  --backend-pool-name $bePoolName \\\n  --upgrade-policy-mode Manual \\\n  --overprovision false\n\n# Add a custom script extension to the VM scale set\naz vmss extension set \\\n  --resource-group <ResourceGroupName> \\\n  --vmss-name $vmssName \\\n  --name CustomScript \\\n  --publisher Microsoft.Azure.Extensions \\\n  --version 2.0 \\\n  --settings "{\\"fileUris\\": [\\"$(uri $artifactsLocation \'mountazurefiles.sh\' $artifactsLocationSasToken)\\"]}" \\\n  --protected-settings "{\\"commandToExecute\\": \\"bash mountazurefiles.sh $storageAccountName $storageAccountKey $shareName $mountpointPath $adminUsername\\"}"\n\n# Note: Replace <ResourceGroupName> with your actual Azure Resource Group name.\n```\n\nPlease note that you will need to replace `<ResourceGroupName>` with the actual name of your Azure Resource Group where you want to deploy these resources. Also, ensure that you have the necessary permissions and the Azure CLI installed to execute these commands.


verify_result
