arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the VM"}, "defaultValue": "zytest"}, "osType": {"type": "string", "defaultValue": "Linux", "allowedValues": ["Linux"], "metadata": {"description": "Type of OS on the existing vhd"}}, "osDiskVhdUri": {"type": "string", "metadata": {"description": "URI of the existing VHD in ARM standard or premium storage"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "Size of the VM"}}, "vmDiskSizeGB": {"type": "string", "defaultValue": "150", "allowedValues": ["150", "300"], "metadata": {"description": "Diskspace size of the VM"}}, "existingVirtualNetworkResourceGroup": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "Name of the existing VNET resource group"}}, "existingVirtualNetworkName": {"type": "string", "metadata": {"description": "Name of the existing VNET"}, "defaultValue": "zytest"}, "subnetName": {"type": "string", "metadata": {"description": "Name of the subnet in the virtual network you want to use"}, "defaultValue": "zytest"}, "existingSecurityGroupName": {"type": "string", "metadata": {"description": "Name of the network Security Group that needs to be assocated to virtual NIC. "}, "defaultValue": "zytest"}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"diagStorageAccountName": "[concat(uniquestring(resourceGroup().id), \'specvm\')]", "publicIPAddressType": "Dynamic", "subnetRef": "[resourceId(parameters(\'existingVirtualNetworkResourceGroup\'), \'Microsoft.Network/virtualNetworks/subnets\', parameters(\'existingVirtualNetworkName\'),  parameters(\'subnetName\'))]", "nicName": "[parameters(\'vmName\')]", "publicIPAddressName": "[parameters(\'vmName\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'diagStorageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_GRS"}, "kind": "Storage", "properties": {}}, {"apiVersion": "2015-06-15", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "PublicIPAddress"}, "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2017-03-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "tags": {"displayName": "NetworkInterface"}, "properties": {"networkSecurityGroup": {"id": "[resourceId(parameters(\'existingVirtualNetworkResourceGroup\'), \'Microsoft.Network/networkSecurityGroups\', parameters(\'existingSecurityGroupName\'))]"}, "ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/disks", "apiVersion": "2017-03-30", "name": "[concat(parameters(\'vmName\'), \'_OSdisk\')]", "location": "[parameters(\'location\')]", "properties": {"creationData": {"createOption": "Import", "sourceUri": "[parameters(\'osDiskVhdUri\')]"}, "osType": "[parameters(\'osType\')]"}}, {"apiVersion": "2017-03-30", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "VirtualMachine"}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]", "[resourceId(\'Microsoft.Compute/disks\', concat(parameters(\'vmName\'), \'_OSdisk\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "storageProfile": {"osDisk": {"osType": "[parameters(\'osType\')]", "caching": "ReadWrite", "managedDisk": {"id": "[resourceId(\'Microsoft.Compute/disks\', concat(parameters(\'vmName\'), \'_OSdisk\'))]"}, "createOption": "Attach", "diskSizeGB": "[parameters(\'vmDiskSizeGB\')]"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'diagStorageAccountName\')), \'2020-08-01-preview\').primaryEndpoints.blob]"}}}}]}


cli_script
Here is the equivalent Azure CLI script based on the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameter variables\nvmName="zytest"\nosType="Linux"\nosDiskVhdUri="zytest"\nvmSize="Standard_A1_v2"\nvmDiskSizeGB="150"\nexistingVirtualNetworkResourceGroup=$(az group show --query name --output tsv)\nexistingVirtualNetworkName="zytest"\nsubnetName="zytest"\nexistingSecurityGroupName="zytest"\ndnsNameForPublicIP="zytest"\nlocation="westus"\n\n# Variable for the unique storage account name\ndiagStorageAccountName=$(az storage account check-name --name $(echo -n "$(az group show --query id --output tsv)specvm" | md5sum | cut -d \' \' -f 1)specvm --query nameAvailable --output tsv)\n\n# Public IP Address Type\npublicIPAddressType="Dynamic"\n\n# Generating the subnet ID\nsubnetRef=$(az network vnet subnet show --resource-group $existingVirtualNetworkResourceGroup --vnet-name $existingVirtualNetworkName --name $subnetName --query id --output tsv)\n\n# NIC and Public IP Address names\nnicName=$vmName\npublicIPAddressName=$vmName\n\n# Create a storage account for diagnostics\naz storage account create --name $diagStorageAccountName --location $location --sku Standard_GRS --kind Storage\n\n# Create a public IP address\naz network public-ip create --name $publicIPAddressName --location $location --allocation-method $publicIPAddressType --dns-name $dnsNameForPublicIP --tags displayName=PublicIPAddress\n\n# Create a network interface\naz network nic create --name $nicName --location $location --subnet $subnetRef --public-ip-address $publicIPAddressName --network-security-group $existingSecurityGroupName\n\n# Create a managed disk\naz disk create --name "${vmName}_OSdisk" --location $location --source $osDiskVhdUri --os-type $osType\n\n# Create a virtual machine\naz vm create --name $vmName --location $location --size $vmSize --os-type $osType --nics $nicName --attach-os-disk "${vmName}_OSdisk" --os-disk-size-gb $vmDiskSizeGB --tags displayName=VirtualMachine\n\n# Enable boot diagnostics\nstorageUri=$(az storage account show --name $diagStorageAccountName --query "primaryEndpoints.blob" --output tsv)\naz vm boot-diagnostics enable --name $vmName --storage $storageUri\n```\n\nPlease note that the `az storage account check-name` command is used to simulate the unique storage account name generation from the ARM template. The `md5sum` command is used to generate a unique string from the resource group ID, and the `cut` command extracts the hash value. \n\nAdditionally, the `az group show` command is used to retrieve the current resource group name for the `existingVirtualNetworkResourceGroup` parameter, as indicated by the default value `[resourceGroup().name]` in the ARM template.\n\nYou may need to modify or add additional configurations depending on the actual environment and requirements. Ensure that you have the necessary permissions and the Azure CLI installed to run these commands.


verify_result
