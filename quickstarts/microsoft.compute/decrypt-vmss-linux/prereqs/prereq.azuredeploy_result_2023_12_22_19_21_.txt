arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "UserName of existing VM Scale Set"}, "defaultValue": "zytest"}, "existingvmss": {"type": "string", "metadata": {"description": "Name of existing VM Scale Set"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "keyVaultResourceGroup": {"type": "string", "metadata": {"description": "Resource group of the KeyVault"}, "defaultValue": "zytest"}, "keyEncryptionKeyURL": {"type": "string", "defaultValue": "", "metadata": {"description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"virtualNetworkName": "[concat(parameters(\'existingvmss\'), \'vnet\')]", "publicIPAddressName": "[concat(parameters(\'existingvmss\'), \'pip\')]", "subnetName": "[concat(parameters(\'existingvmss\'), \'subnet\')]", "loadBalancerName": "[concat(parameters(\'existingvmss\'), \'lb\')]", "natPoolName": "[concat(parameters(\'existingvmss\'), \'natpool\')]", "bePoolName": "[concat(parameters(\'existingvmss\'), \'bepool\')]", "keyVaultResourceID": "[resourceId(parameters(\'keyVaultResourceGroup\'), \'Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-08-01", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2018-02-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[toLower(substring(concat(parameters(\'existingvmss\'), uniqueString(resourceGroup().id)), 0, 16))]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2018-02-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50119, "backendPort": 3389}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'existingvmss\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-03-30", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "Standard_D2_v3", "tier": "Standard", "capacity": 2}, "properties": {"overprovision": true, "upgradePolicy": {"mode": "Automatic"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage"}, "imageReference": {"publisher": "RedHat", "offer": "RHEL", "sku": "7.5", "version": "latest"}}, "osProfile": {"computerNamePrefix": "existvmss", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[concat(parameters(\'existingvmss\'), \'nic\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[concat(parameters(\'existingvmss\'), \'ipconfig\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"name": "AzureDiskEncryptionForLinux", "properties": {"publisher": "Microsoft.Azure.Security", "type": "AzureDiskEncryptionForLinux", "typeHandlerVersion": "1.1", "autoUpgradeMinorVersion": true, "forceUpdateTag": "[uniqueString(resourceGroup().id, deployment().name)]", "settings": {"EncryptionOperation": "EnableEncryption", "KeyVaultURL": "[reference(variables(\'keyVaultResourceId\'),\'2018-02-14-preview\').vaultUri]", "KeyVaultResourceId": "[variables(\'keyVaultResourceID\')]", "KeyEncryptionKeyURL": "[parameters(\'keyEncryptionKeyURL\')]", "KekVaultResourceId": "[variables(\'keyVaultResourceID\')]", "KeyEncryptionAlgorithm": "RSA-OAEP", "VolumeType": "Data"}}}]}}}}], "outputs": {"vmssName": {"type": "string", "value": "[parameters(\'existingvmss\')]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nadminUsername="zytest"\nexistingvmss="zytest"\nlocation="westus"\nkeyVaultName="zytest"\nkeyVaultResourceGroup="zytest"\nkeyEncryptionKeyURL=""\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Define variables\nvirtualNetworkName="${existingvmss}vnet"\npublicIPAddressName="${existingvmss}pip"\nsubnetName="${existingvmss}subnet"\nloadBalancerName="${existingvmss}lb"\nnatPoolName="${existingvmss}natpool"\nbePoolName="${existingvmss}bepool"\nkeyVaultResourceID=$(az keyvault show --name $keyVaultName --query id -o tsv)\nlinuxConfiguration=\'{"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "/home/\'$adminUsername\'/.ssh/authorized_keys", "keyData": "\'$adminPasswordOrKey\'"}]}}\'\n\n# Create resources\naz network vnet create --name $virtualNetworkName --resource-group $keyVaultResourceGroup --location $location --address-prefix 10.0.0.0/16 --subnet-name $subnetName --subnet-prefix 10.0.0.0/24\naz network public-ip create --name $publicIPAddressName --resource-group $keyVaultResourceGroup --location $location --allocation-method Dynamic\naz network lb create --name $loadBalancerName --resource-group $keyVaultResourceGroup --location $location --frontend-ip-name LoadBalancerFrontEnd --public-ip-address $publicIPAddressName\naz network lb address-pool create --lb-name $loadBalancerName --name $bePoolName --resource-group $keyVaultResourceGroup\naz network lb inbound-nat-pool create --lb-name $loadBalancerName --name $natPoolName --resource-group $keyVaultResourceGroup --protocol Tcp --frontend-port-range-start 50000 --frontend-port-range-end 50119 --backend-port 3389\naz vmss create --name $existingvmss --resource-group $keyVaultResourceGroup --location $location --image RedHat:RHEL:7.5:latest --admin-username $adminUsername --admin-password $adminPasswordOrKey --authentication-type $authenticationType --vnet-name $virtualNetworkName --subnet $subnetName --public-ip-address $publicIPAddressName --load-balancer $loadBalancerName --backend-pool-name $bePoolName --nat-pool-name $natPoolName --upgrade-policy-mode Automatic --overprovision true --single-placement-group true --instance-count 2 --storage-sku Standard_LRS --os-disk-size-gb 30 --disable-overprovision --ssh-key-value $adminPasswordOrKey\naz vmss extension set --publisher Microsoft.Azure.Security --name AzureDiskEncryptionForLinux --version 1.1 --vmss-name $existingvmss --resource-group $keyVaultResourceGroup --settings \'{"EncryptionOperation": "EnableEncryption", "KeyVaultURL": "\'$keyVaultResourceID\'", "KeyVaultResourceId": "\'$keyVaultResourceID\'", "KeyEncryptionKeyURL": "\'$keyEncryptionKeyURL\'", "KekVaultResourceId": "\'$keyVaultResourceID\'", "KeyEncryptionAlgorithm": "RSA-OAEP", "VolumeType": "Data"}\'\n```\n\nPlease replace the resource group name in the script with your actual resource group name.


verify_result
