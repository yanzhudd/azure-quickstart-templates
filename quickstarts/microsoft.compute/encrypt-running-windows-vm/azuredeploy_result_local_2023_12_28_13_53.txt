arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine."}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "enabledForDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."}}, "enabledForDiskEncryption": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."}}, "enabledForTemplateDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."}}, "keysPermissions": {"type": "array", "defaultValue": ["list", "get", "decrypt", "encrypt", "unwrapkey", "wrapkey"], "metadata": {"description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."}}, "secretsPermissions": {"type": "array", "defaultValue": ["list", "get"], "metadata": {"description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."}}, "skuName": {"type": "string", "defaultValue": "Standard", "allowedValues": ["Standard", "Premium"], "metadata": {"description": "Specifies whether the key vault is a standard vault or a premium vault."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location of the resources."}}}, "variables": {"keyVaultURL": "[concat(\'https://\', parameters(\'keyVaultName\'), environment().suffixes.keyVaultDns)]", "encryptionOperation": "EnableEncryption"}, "resources": [{"type": "Microsoft.KeyVault/vaults", "apiVersion": "2021-04-01-preview", "name": "[parameters(\'keyVaultName\')]", "location": "[parameters(\'location\')]", "properties": {"enabledForDeployment": "[parameters(\'enabledForDeployment\')]", "enabledForDiskEncryption": "[parameters(\'enabledForDiskEncryption\')]", "enabledForTemplateDeployment": "[parameters(\'enabledForTemplateDeployment\')]", "tenantId": "[subscription().tenantId]", "accessPolicies": [{"objectId": "[reference(resourceId(\'Microsoft.Compute/virtualMachines/\', parameters(\'vmName\')), \'2020-12-01\', \'full\').identity.principalId]", "tenantId": "[subscription().tenantId]", "permissions": {"keys": "[parameters(\'keysPermissions\')]", "secrets": "[parameters(\'secretsPermissions\')]"}}], "sku": {"name": "[parameters(\'skuName\')]", "family": "A"}, "networkAcls": {"defaultAction": "Allow", "bypass": "AzureServices"}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(parameters(\'vmName\'),\'/diskEncryption\')]", "apiVersion": "2020-12-01", "dependsOn": ["[resourceId(\'Microsoft.KeyVault/vaults\', parameters(\'keyVaultName\'))]"], "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "AzureDiskEncryption", "typeHandlerVersion": "2.2", "autoUpgradeMinorVersion": true, "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[variables(\'keyVaultURL\')]", "KeyVaultResourceId": "[resourceId(\'Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]", "VolumeType": "All"}}}]}


cli_script
```bash\n#!/bin/bash\n\n# Assign template parameter values to variables\nvmName="zytest"\nkeyVaultName="zytest"\nenabledForDeployment=true\nenabledForDiskEncryption=true\nenabledForTemplateDeployment=true\nkeysPermissions=("list" "get" "decrypt" "encrypt" "unwrapkey" "wrapkey")\nsecretsPermissions=("list" "get")\nskuName="Standard"\nlocation="westus"\n\n# Create Key Vault\naz keyvault create \\\n  --name $keyVaultName \\\n  --location $location \\\n  --enabled-for-deployment $enabledForDeployment \\\n  --enabled-for-disk-encryption $enabledForDiskEncryption \\\n  --enabled-for-template-deployment $enabledForTemplateDeployment \\\n  --sku $skuName \\\n  --network-acls-default-action "Allow" \\\n  --network-acls-bypass "AzureServices"\n\n# Retrieve the Tenant ID\ntenantId=$(az account show --query tenantId -o tsv)\n\n# Retrieve the Principal ID of the VM\nprincipalId=$(az vm show \\\n  --name $vmName \\\n  --query identity.principalId \\\n  --output tsv)\n\n# Set Key Vault access policy for the VM\naz keyvault set-policy \\\n  --name $keyVaultName \\\n  --object-id $principalId \\\n  --tenant-id $tenantId \\\n  --key-permissions ${keysPermissions[@]} \\\n  --secret-permissions ${secretsPermissions[@]}\n\n# Retrieve the Key Vault URI\nkeyVaultURL=$(az keyvault show \\\n  --name $keyVaultName \\\n  --query properties.vaultUri \\\n  --output tsv)\n\n# Retrieve the Key Vault Resource ID\nkeyVaultResourceId=$(az keyvault show \\\n  --name $keyVaultName \\\n  --query id \\\n  --output tsv)\n\n# Enable Encryption on the VM\naz vm extension set \\\n  --resource-group myResourceGroup \\\n  --vm-name $vmName \\\n  --name diskEncryption \\\n  --publisher Microsoft.Azure.Security \\\n  --version 2.2 \\\n  --settings "{\\"EncryptionOperation\\":\\"EnableEncryption\\", \\"KeyVaultURL\\":\\"$keyVaultURL\\", \\"KeyVaultResourceId\\":\\"$keyVaultResourceId\\", \\"VolumeType\\":\\"All\\"}"\n```\n\nPlease ensure that you replace `myResourceGroup` with your actual resource group name where the virtual machine is located. This script assumes that the VM already exists and has an identity assigned to it.\n\nNote: The ARM template provided does not include a resource group for the VM or the Key Vault. In Azure CLI, the resource group is a required parameter for creating resources and setting extensions, so you will need to add the appropriate resource group name to the script where indicated.


verify_result
