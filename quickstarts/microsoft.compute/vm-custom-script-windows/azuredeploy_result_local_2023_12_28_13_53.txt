arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}, "defaultValue": ""}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Default VM Size"}}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "DNS name for the public IP"}, "defaultValue": "zytest"}}, "variables": {"nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "vmName": "MyVM", "virtualNetworkName": "MyVNET", "publicIPAddressName": "myPublicIP", "scriptFolder": "scripts", "scriptFileName": "Copy-FileFromAzure.ps1", "fileToBeCopied": "FileToBeCopied.txt", "scriptParameters": "[concat(\'-artifactsLocation \', replace(parameters(\'_artifactsLocation\'),parameters(\'_artifactsLocationSasToken\'),\'\'), \' -artifactsLocationSasToken \\"\', parameters(\'_artifactsLocationSasToken\'), \'\\" -folderName \', variables(\'scriptFolder\'), \' -fileToInstall \', variables(\'fileToBeCopied\'))]", "networkSecurityGroupName": "default-NSG"}, "resources": [{"apiVersion": "2020-08-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-08-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-08-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-08-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]", "[variables(\'virtualNetworkName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'nicName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2016-Datacenter", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}, "resources": [{"type": "extensions", "name": "CustomScriptExtension", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'vmName\')]"], "properties": {"publisher": "Microsoft.Compute", "type": "CustomScriptExtension", "typeHandlerVersion": "1.8", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[uri(parameters(\'_artifactsLocation\'), concat(variables(\'scriptFolder\'),\'/\',variables(\'scriptFileName\'), parameters(\'_artifactsLocationSasToken\')))]"], "commandToExecute": "[concat(\'powershell -ExecutionPolicy Unrestricted -File \', variables(\'scriptFolder\'), \'/\', variables(\'scriptFileName\'), \' \', variables(\'scriptParameters\'))]"}}}]}], "outputs": {"vm-fqdn": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\'), \'2020-07-01\').dnsSettings.fqdn]"}}}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\nadminUsername="zytest"\nadminPassword="zytest"\nartifactsLocation="[deployment().properties.templateLink.uri]"\nartifactsLocationSasToken=""\nlocation="westus"\nvmSize="Standard_D2_v3"\ndnsNameForPublicIP="zytest"\n\n# Variables\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nvirtualNetworkName="MyVNET"\npublicIPAddressName="myPublicIP"\nvmName="MyVM"\nnetworkSecurityGroupName="default-NSG"\nscriptFolder="scripts"\nscriptFileName="Copy-FileFromAzure.ps1"\nfileToBeCopied="FileToBeCopied.txt"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $dnsNameForPublicIP\n\n# Create Network Security Group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Create a default security rule allowing RDP access\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name "default-allow-3389" \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --protocol Tcp \\\n    --destination-port-range 3389 \\\n    --source-address-prefix "*" \\\n    --destination-address-prefix "*"\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix \\\n    --network-security-group $networkSecurityGroupName\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --public-ip-address $publicIPAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --image "MicrosoftWindowsServer:WindowsServer:2016-Datacenter:latest" \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --size $vmSize\n\n# Add Custom Script Extension to the VM\naz vm extension set \\\n    --vm-name $vmName \\\n    --name "CustomScriptExtension" \\\n    --publisher "Microsoft.Compute" \\\n    --version "1.8" \\\n    --settings "{\\"fileUris\\": [\\"$(az storage blob url --container-name $scriptFolder --name $scriptFileName --account-name <storage_account_name> --sas-token $artifactsLocationSasToken)\\"]}" \\\n    --protected-settings "{\\"commandToExecute\\": \\"powershell -ExecutionPolicy Unrestricted -File $scriptFolder/$scriptFileName $scriptParameters\\"}"\n\n# Output the fully qualified domain name (FQDN) of the VM\naz network public-ip show \\\n    --name $publicIPAddressName \\\n    --query "[dnsSettings.fqdn]" \\\n    --output tsv\n```\n\nPlease replace `<storage_account_name>` with your actual storage account name where the script file is located. This script assumes that you have a storage account and a blob container named according to the `scriptFolder` variable, and the script file `scriptFileName` is uploaded there.\n\nAlso, note that the `artifactsLocation` and `artifactsLocationSasToken` parameters are typically used when deploying from a private location and would be automatically generated. In this script, you may need to provide the actual SAS token for accessing the storage blob containing your script file.


verify_result
