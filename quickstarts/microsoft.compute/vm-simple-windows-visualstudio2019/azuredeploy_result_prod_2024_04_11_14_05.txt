arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "simpleWinVS", "metadata": {"description": "The name of you Virtual Machine."}}, "VmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "The size of the VM"}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "secureString", "metadata": {"description": "Password for the Virtual Machine. The password must be at least 12 characters long and have lower case, upper characters, digit and a special character (Regex match)"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(concat(\'simplewinvs-\', uniqueString(resourceGroup().id)))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "sharedResources": {"type": "string", "defaultValue": "new", "allowedValues": ["new", "existing"], "metadata": {"description": "Specify whether to create a new or existing NSG and vNet."}}, "virtualNetworkName": {"type": "string", "defaultValue": "vNet", "metadata": {"description": "Name of the VNET"}}, "subnetName": {"type": "string", "defaultValue": "Subnet", "metadata": {"description": "Name of the subnet in the virtual network"}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "SecGroupNet", "metadata": {"description": "Name of the Network Security Group"}}}, "variables": {"publicIpAddressName": "[concat(parameters(\'vmName\'), \'PublicIP\' )]", "networkInterfaceName": "[concat(parameters(\'vmName\'),\'NetInt\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "osDiskType": "StandardSSD_LRS", "subnetAddressPrefix": "10.1.0.0/24", "addressPrefix": "10.1.0.0/16"}, "resources": [{"name": "[variables(\'networkInterfaceName\')]", "type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups/\', parameters(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', parameters(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/publicIpAddresses/\', variables(\'publicIpAddressName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "privateIPAllocationMethod": "Dynamic", "publicIpAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\',parameters(\'networkSecurityGroupName\'))]"}}}, {"condition": "[equals(parameters(\'sharedResources\'), \'new\')]", "name": "[parameters(\'networkSecurityGroupName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "RDP", "properties": {"protocol": "TCP", "sourcePortRange": "*", "destinationPortRange": "3389", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 300, "direction": "Inbound"}}]}}, {"condition": "[equals(parameters(\'sharedResources\'), \'new\')]", "type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-05-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetAddressPrefix\')]", "privateEndpointNetworkPolicies": "Enabled", "privateLinkServiceNetworkPolicies": "Enabled"}}], "enableDdosProtection": false, "enableVmProtection": false}}, {"type": "Microsoft.Network/publicIpAddresses", "apiVersion": "2020-05-01", "name": "[variables(\'publicIpAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIpAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}, "publicIPAddressVersion": "IPv4", "idleTimeoutInMinutes": 4}, "sku": {"name": "Basic", "tier": "Regional"}}, {"name": "[parameters(\'vmName\')]", "type": "Microsoft.Compute/virtualMachines", "apiVersion": "2019-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'networkInterfaceName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "storageProfile": {"osDisk": {"createOption": "fromImage", "managedDisk": {"storageAccountType": "[variables(\'osDiskType\')]"}}, "imageReference": {"publisher": "MicrosoftVisualStudio", "offer": "visualstudio2019latest", "sku": "vs-2019-comm-latest-ws2019", "version": "latest"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"}]}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "windowsConfiguration": {"enableAutomaticUpdates": true, "provisionVmAgent": true}}}}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}, "virtualNetworkName": {"type": "string", "value": "[parameters(\'virtualNetworkName\')]"}, "networkSecurityGroupName": {"type": "string", "value": "[parameters(\'networkSecurityGroupName\')]"}, "hostname": {"value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]", "type": "string"}}}


cli_script
'content': '#!/bin/bash\n\n# Define variables\nvmName="simpleWinVS"\nvmSize="Standard_D2_v3"\nadminUsername="zytest"\nadminPassword="zytest"\nlocation="westus"\ndnsLabelPrefix="simplewinvs-$(uuidgen | cut -c 1-5 | tr \'[:upper:]\' \'[:lower:]\')"\nsharedResources="new"\nvirtualNetworkName="vNet"\nsubnetName="Subnet"\nnetworkSecurityGroupName="SecGroupNet"\npublicIpAddressName="${vmName}PublicIP"\nnetworkInterfaceName="${vmName}NetInt"\nsubnetRef="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/${virtualNetworkName}/subnets/${subnetName}"\nosDiskType="StandardSSD_LRS"\nsubnetAddressPrefix="10.1.0.0/24"\naddressPrefix="10.1.0.0/16"\n\n# Create Network Security Group\naz network nsg create --name $networkSecurityGroupName --resource-group $resourceGroupName --location $location\n\n# Create Network Security Group Rule\naz network nsg rule create --name RDP --nsg-name $networkSecurityGroupName --resource-group $resourceGroupName --protocol Tcp --source-port-range \'*\' --destination-port-range 3389 --source-address-prefix \'*\' --destination-address-prefix \'*\' --access Allow --priority 300 --direction Inbound\n\n# Create Virtual Network\naz network vnet create --name $virtualNetworkName --resource-group $resourceGroupName --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetAddressPrefix\n\n# Create Public IP\naz network public-ip create --name $publicIpAddressName --resource-group $resourceGroupName --location $location --allocation-method Dynamic --dns-name $dnsLabelPrefix --sku Basic\n\n# Create Network Interface\naz network nic create --name $networkInterfaceName --resource-group $resourceGroupName --location $location --subnet $subnetRef --public-ip-address $publicIpAddressName --network-security-group $networkSecurityGroupName\n\n# Create Virtual Machine\naz vm create --name $vmName --resource-group $resourceGroupName --location $location --nics $networkInterfaceName --size $vmSize --os-disk-size-gb 30 --storage-sku $osDiskType --image MicrosoftVisualStudio:visualstudio2019latest:vs-2019-comm-latest-ws2019:latest --admin-username $adminUsername --admin-password $adminPassword --public-ip-address $publicIpAddressName\n\n# Output\necho "Admin Username: $adminUsername"\necho "Virtual Network Name: $virtualNetworkName"\necho "Network Security Group Name: $networkSecurityGroupName"\necho "Hostname: $(az network public-ip show --name $publicIpAddressName --resource-group $resourceGroupName --query [dnsSettings.fqdn] --output tsv)"', 'validation_results': [], 'command_count': 6, 'gpt_model': 'GPT_4_32k'


verify_result
