arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of VMs in the VM Scale Set"}}, "vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "defaultValue": 2, "minValue": 2, "maxValue": 100}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password on all VMs."}, "defaultValue": "zytest"}, "location": {"type": "string", "metadata": {"description": "Default location"}, "defaultValue": "westus"}, "_artifactsLocationSasToken": {"defaultValue": "", "type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}}, "_artifactsLocation": {"defaultValue": "[deployment().properties.templateLink.uri]", "type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}}}, "variables": {"vnetName": "vnet", "subnetName": "subnet", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetName\'))]", "publicIPAddressName": "pip", "loadBalancerName": "loadBalancer", "loadBalancerFrontEndName": "loadBalancerFrontEnd", "loadBalancerBackEndName": "loadBalancerBackEnd", "loadBalancerProbeName": "loadBalancerHttpProbe", "loadBalancerNatPoolName": "loadBalancerNatPool", "scriptLocation": "[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/helloWorld.ps1\', parameters(\'_artifactsLocationSasToken\')))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-12-01", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'loadBalancerName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": "true", "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite"}, "imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2016-Datacenter", "version": "latest"}}, "osProfile": {"computerNamePrefix": "[parameters(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "nic", "properties": {"primary": true, "ipConfigurations": [{"name": "ipconfig", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerBackEndName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerNatPoolName\'))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"name": "customScript", "properties": {"publisher": "Microsoft.Compute", "settings": {"fileUris": ["[variables(\'scriptLocation\')]"]}, "typeHandlerVersion": "1.8", "autoUpgradeMinorVersion": true, "protectedSettings": {"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File scripts/helloWorld.ps1"}, "type": "CustomScriptExtension"}}]}}}}, {"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'vnetName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-07-01", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-07-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[toLower(parameters(\'vmssName\'))]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-07-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "[variables(\'loadBalancerFrontEndName\')]", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'loadBalancerBackendName\')]"}], "loadBalancingRules": [{"name": "roundRobinLBRule", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), variables(\'loadBalancerFrontEndName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerBackendName\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'loadBalancerName\'), variables(\'loadBalancerProbeName\'))]"}}}], "probes": [{"name": "[variables(\'loadBalancerProbeName\')]", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": "5", "numberOfProbes": "2"}}], "inboundNatPools": [{"name": "[variables(\'loadBalancerNatPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), variables(\'loadBalancerFrontEndName\'))]"}, "protocol": "Tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50019, "backendPort": 3389}}]}}]}


cli_script
Below is the translated bash script from the provided ARM template and parameters. Please note that the script assumes you have the necessary permissions and the Azure CLI installed and configured to use your Azure account.\n\n```bash\n#!/bin/bash\n\n# Parameter variables\nvmSku="Standard_D2s_v3"\nvmssName="zytest"\ninstanceCount=2\nadminUsername="zytest"\nadminPassword="zytest" # Note: In a real-world scenario, use a secure method to handle passwords.\nlocation="westus"\n_artifactsLocationSasToken=""\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n\n# Variable assignments (not directly used in CLI commands)\nvnetName="vnet"\nsubnetName="subnet"\nsubnetRef="[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetName\'))]"\npublicIPAddressName="pip"\nloadBalancerName="loadBalancer"\nloadBalancerFrontEndName="loadBalancerFrontEnd"\nloadBalancerBackEndName="loadBalancerBackEnd"\nloadBalancerProbeName="loadBalancerHttpProbe"\nloadBalancerNatPoolName="loadBalancerNatPool"\nscriptLocation="[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/helloWorld.ps1\', parameters(\'_artifactsLocationSasToken\')))]"\n\n# Create Virtual Network\naz network vnet create \\\n    --name $vnetName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --address-prefixes "10.0.0.0/16" \\\n    --subnet-name $subnetName \\\n    --subnet-prefix "10.0.0.0/24"\necho "Created Virtual Network and Subnet."\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name "${vmssName,,}" # Convert vmssName to lowercase\necho "Created Public IP Address."\n\n# Create Load Balancer\naz network lb create \\\n    --name $loadBalancerName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --frontend-ip-name $loadBalancerFrontEndName \\\n    --public-ip-address $publicIPAddressName \\\n    --backend-pool-name $loadBalancerBackEndName\necho "Created Load Balancer."\n\n# Add Load Balancer Probe\naz network lb probe create \\\n    --resource-group <ResourceGroupName> \\\n    --lb-name $loadBalancerName \\\n    --name $loadBalancerProbeName \\\n    --protocol Tcp \\\n    --port 80 \\\n    --interval 5 \\\n    --count 2\necho "Added Load Balancer Probe."\n\n# Add Load Balancer Rule\naz network lb rule create \\\n    --resource-group <ResourceGroupName> \\\n    --lb-name $loadBalancerName \\\n    --name "roundRobinLBRule" \\\n    --protocol Tcp \\\n    --frontend-port 80 \\\n    --backend-port 80 \\\n    --frontend-ip-name $loadBalancerFrontEndName \\\n    --backend-pool-name $loadBalancerBackEndName \\\n    --probe-name $loadBalancerProbeName\necho "Added Load Balancer Rule."\n\n# Add Inbound NAT Pool\naz network lb inbound-nat-pool create \\\n    --resource-group <ResourceGroupName> \\\n    --lb-name $loadBalancerName \\\n    --name $loadBalancerNatPoolName \\\n    --protocol Tcp \\\n    --frontend-port-range-start 50000 \\\n    --frontend-port-range-end 50019 \\\n    --backend-port 3389 \\\n    --frontend-ip-name $loadBalancerFrontEndName\necho "Added Inbound NAT Pool."\n\n# Create Virtual Machine Scale Set\naz vmss create \\\n    --name $vmssName \\\n    --resource-group <ResourceGroupName> \\\n    --location $location \\\n    --vm-sku $vmSku \\\n    --instance-count $instanceCount \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --image "MicrosoftWindowsServer:WindowsServer:2016-Datacenter:latest" \\\n    --upgrade-policy-mode Manual \\\n    --vnet-name $vnetName \\\n    --subnet $subnetName \\\n    --load-balancer $loadBalancerName \\\n    --backend-pool-name $loadBalancerBackEndName \\\n    --nat-pool $loadBalancerNatPoolName \\\n    --custom-data <PathToCustomScript> # Specify the path to the custom script\necho "Created Virtual Machine Scale Set with Custom Script Extension."\n\n# Note: Replace <ResourceGroupName> with your actual resource group name.\n# Note: Replace <PathToCustomScript> with the actual path to the custom script file.\n# Note: The variable $scriptLocation is not directly used in CLI commands, ensure you provide the correct script path.\n```\n\nPlease replace `<ResourceGroupName>` with your actual resource group name and `<PathToCustomScript>` with the path to your custom script file. Also, ensure that the `adminPassword` is handled securely and not hardcoded in a production environment.


verify_result
