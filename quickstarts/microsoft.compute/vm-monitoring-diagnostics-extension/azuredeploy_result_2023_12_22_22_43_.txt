arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "windowsOSVersion": {"type": "string", "defaultValue": "2019-Datacenter", "allowedValues": ["2008-R2-SP1", "2012-Datacenter", "2012-R2-Datacenter", "2016-Datacenter", "2019-Datacenter"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."}}, "existingdiagnosticsStorageAccountName": {"type": "string", "metadata": {"description": "The name of an existing storage account to which diagnostics data will be transferred."}, "defaultValue": "zytest"}, "existingdiagnosticsStorageResourceGroup": {"type": "string", "metadata": {"description": "The resource group for the storage account specified in existingdiagnosticsStorageAccountName"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A2_v2", "metadata": {"description": "Size of the virtual machine."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"imagePublisher": "MicrosoftWindowsServer", "imageOffer": "WindowsServer", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "storageAccountType": "StandardSSD_LRS", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "vmName": "MyVM", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "accountid": "[resourceId(parameters(\'existingdiagnosticsStorageResourceGroup\'), \'Microsoft.Storage/storageAccounts/\', parameters(\'existingdiagnosticsStorageAccountName\'))]", "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\\"4096\\" xmlns=\\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\\"Error\\"/> <WindowsEventLog scheduledTransferPeriod=\\"PT1M\\" > <DataSource name=\\"Application!*[System[(Level = 1 or Level = 2)]]\\" /> <DataSource name=\\"Security!*[System[(Level = 1 or Level = 2)]]\\" /> <DataSource name=\\"System!*[System[(Level = 1 or Level = 2)]]\\" /></WindowsEventLog>", "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\\"PT1M\\"><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Processor(_Total)\\\\% Processor Time\\" sampleRate=\\"PT15S\\" unit=\\"Percent\\"><annotation displayName=\\"CPU utilization\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Processor(_Total)\\\\% Privileged Time\\" sampleRate=\\"PT15S\\" unit=\\"Percent\\"><annotation displayName=\\"CPU privileged time\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Processor(_Total)\\\\% User Time\\" sampleRate=\\"PT15S\\" unit=\\"Percent\\"><annotation displayName=\\"CPU user time\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Processor Information(_Total)\\\\Processor Frequency\\" sampleRate=\\"PT15S\\" unit=\\"Count\\"><annotation displayName=\\"CPU frequency\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\System\\\\Processes\\" sampleRate=\\"PT15S\\" unit=\\"Count\\"><annotation displayName=\\"Processes\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Process(_Total)\\\\Thread Count\\" sampleRate=\\"PT15S\\" unit=\\"Count\\"><annotation displayName=\\"Threads\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Process(_Total)\\\\Handle Count\\" sampleRate=\\"PT15S\\" unit=\\"Count\\"><annotation displayName=\\"Handles\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Memory\\\\% Committed Bytes In Use\\" sampleRate=\\"PT15S\\" unit=\\"Percent\\"><annotation displayName=\\"Memory usage\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Memory\\\\Available Bytes\\" sampleRate=\\"PT15S\\" unit=\\"Bytes\\"><annotation displayName=\\"Memory available\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Memory\\\\Committed Bytes\\" sampleRate=\\"PT15S\\" unit=\\"Bytes\\"><annotation displayName=\\"Memory committed\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\Memory\\\\Commit Limit\\" sampleRate=\\"PT15S\\" unit=\\"Bytes\\"><annotation displayName=\\"Memory commit limit\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\% Disk Time\\" sampleRate=\\"PT15S\\" unit=\\"Percent\\"><annotation displayName=\\"Disk active time\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration>", "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\% Disk Read Time\\" sampleRate=\\"PT15S\\" unit=\\"Percent\\"><annotation displayName=\\"Disk active read time\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\% Disk Write Time\\" sampleRate=\\"PT15S\\" unit=\\"Percent\\"><annotation displayName=\\"Disk active write time\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\Disk Transfers/sec\\" sampleRate=\\"PT15S\\" unit=\\"CountPerSecond\\"><annotation displayName=\\"Disk operations\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\Disk Reads/sec\\" sampleRate=\\"PT15S\\" unit=\\"CountPerSecond\\"><annotation displayName=\\"Disk read operations\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\Disk Writes/sec\\" sampleRate=\\"PT15S\\" unit=\\"CountPerSecond\\"><annotation displayName=\\"Disk write operations\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\Disk Bytes/sec\\" sampleRate=\\"PT15S\\" unit=\\"BytesPerSecond\\"><annotation displayName=\\"Disk speed\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\Disk Read Bytes/sec\\" sampleRate=\\"PT15S\\" unit=\\"BytesPerSecond\\"><annotation displayName=\\"Disk read speed\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\PhysicalDisk(_Total)\\\\Disk Write Bytes/sec\\" sampleRate=\\"PT15S\\" unit=\\"BytesPerSecond\\"><annotation displayName=\\"Disk write speed\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\\"\\\\LogicalDisk(_Total)\\\\% Free Space\\" sampleRate=\\"PT15S\\" unit=\\"Percent\\"><annotation displayName=\\"Disk free space (percentage)\\" locale=\\"en-us\\"/></PerformanceCounterConfiguration></PerformanceCounters>", "wadcfgxstart": "[concat(variables(\'wadlogs\'), variables(\'wadperfcounters1\'), variables(\'wadperfcounters2\'), \'<Metrics resourceId=\\"\')]", "wadmetricsresourceid": "[resourceId(\'Microsoft.Compute/virtualMachines\', variables(\'vmName\'))]", "wadcfgxend": "\\"><MetricAggregation scheduledTransferPeriod=\\"PT1H\\"/><MetricAggregation scheduledTransferPeriod=\\"PT1M\\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>", "networkSecurityGroupName": "default-NSG"}, "resources": [{"apiVersion": "2020-06-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-08-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'windowsOSVersion\')]", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'vmName\'), \'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage", "managedDisk": {"storageAccountType": "[variables(\'storageAccountType\')]"}}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[concat(\'http://\', parameters(\'existingdiagnosticsStorageAccountName\'), \'.blob.\', environment().suffixes.storage)]"}}}, "resources": [{"name": "Microsoft.Insights.VMDiagnosticsSettings", "type": "extensions", "location": "[parameters(\'location\')]", "apiVersion": "2020-06-01", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', variables(\'vmName\'))]"], "tags": {"displayName": "AzureDiagnostics"}, "properties": {"publisher": "Microsoft.Azure.Diagnostics", "type": "IaaSDiagnostics", "typeHandlerVersion": "1.5", "autoUpgradeMinorVersion": true, "settings": {"xmlCfg": "[base64(concat(variables(\'wadcfgxstart\'), variables(\'wadmetricsresourceid\'), variables(\'wadcfgxend\')))]", "storageAccount": "[parameters(\'existingdiagnosticsStorageAccountName\')]"}, "protectedSettings": {"storageAccountName": "[parameters(\'existingdiagnosticsStorageAccountName\')]", "storageAccountKey": "[listkeys(variables(\'accountid\'), \'2019-06-01\').keys[0].value]", "storageAccountEndPoint": "[concat(\'https://\', environment().suffixes.storage)]"}}}]}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nadminUsername="zytest"\nadminPassword="zytest"\ndnsNameForPublicIP="zytest"\nwindowsOSVersion="2019-Datacenter"\nexistingdiagnosticsStorageAccountName="zytest"\nexistingdiagnosticsStorageResourceGroup="zytest"\nvmSize="Standard_A2_v2"\nlocation="westus"\n\n# Define variables\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nstorageAccountType="StandardSSD_LRS"\npublicIPAddressName="myPublicIP"\npublicIPAddressType="Dynamic"\nvmName="MyVM"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="default-NSG"\n\n# Create public IP address\naz network public-ip create --name $publicIPAddressName --resource-group $existingdiagnosticsStorageResourceGroup --location $location --allocation-method $publicIPAddressType --dns-name $dnsNameForPublicIP\n\n# Create network security group\naz network nsg create --name $networkSecurityGroupName --resource-group $existingdiagnosticsStorageResourceGroup --location $location\n\n# Create virtual network\naz network vnet create --name $virtualNetworkName --resource-group $existingdiagnosticsStorageResourceGroup --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetPrefix --network-security-group $networkSecurityGroupName\n\n# Create network interface\naz network nic create --name $nicName --resource-group $existingdiagnosticsStorageResourceGroup --location $location --vnet-name $virtualNetworkName --subnet $subnetName --public-ip-address $publicIPAddressName\n\n# Create virtual machine\naz vm create --name $vmName --resource-group $existingdiagnosticsStorageResourceGroup --location $location --nics $nicName --image $imagePublisher:$imageOffer:$windowsOSVersion:latest --admin-username $adminUsername --admin-password $adminPassword --size $vmSize --storage-sku $storageAccountType --boot-diagnostics-storage $existingdiagnosticsStorageAccountName\n\n# Enable diagnostics extension\naz vm extension set --publisher Microsoft.Azure.Diagnostics --name IaaSDiagnostics --version 1.5 --vm-name $vmName --resource-group $existingdiagnosticsStorageResourceGroup --settings \'{"xmlCfg": "[base64(concat(variables(\'wadcfgxstart\'), variables(\'wadmetricsresourceid\'), variables(\'wadcfgxend\')))]", "storageAccount": "[parameters(\'existingdiagnosticsStorageAccountName\')]"}\' --protected-settings \'{"storageAccountName": "[parameters(\'existingdiagnosticsStorageAccountName\')]", "storageAccountKey": "[listkeys(variables(\'accountid\'), \'2019-06-01\').keys[0].value]", "storageAccountEndPoint": "[concat(\'https://\', environment().suffixes.storage)]"}\'\n```\n\nPlease replace the resource group name in the commands with your actual resource group name.


verify_result
