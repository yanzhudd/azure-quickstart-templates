arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.23.1.45101", "templateHash": "5903517927080867595"}}, "parameters": {"vmName": {"type": "string", "defaultValue": "simpleLinuxVM", "metadata": {"description": "The name of your Virtual Machine."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "password", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(format(\'{0}-{1}\', parameters(\'vmName\'), uniqueString(resourceGroup().id)))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "Ubuntu-2004", "allowedValues": ["Ubuntu-1804", "Ubuntu-2004", "Ubuntu-2204"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "The size of the VM"}}, "virtualNetworkName": {"type": "string", "defaultValue": "vNet", "metadata": {"description": "Name of the VNET"}}, "subnetName": {"type": "string", "defaultValue": "Subnet", "metadata": {"description": "Name of the subnet in the virtual network"}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "SecGroupNet", "metadata": {"description": "Name of the Network Security Group"}}, "securityType": {"type": "string", "defaultValue": "TrustedLaunch", "allowedValues": ["Standard", "TrustedLaunch"], "metadata": {"description": "Security Type of the Virtual Machine."}}}, "variables": {"imageReference": {"Ubuntu-1804": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18_04-lts-gen2", "version": "latest"}, "Ubuntu-2004": {"publisher": "Canonical", "offer": "0001-com-ubuntu-server-focal", "sku": "20_04-lts-gen2", "version": "latest"}, "Ubuntu-2204": {"publisher": "Canonical", "offer": "0001-com-ubuntu-server-jammy", "sku": "22_04-lts-gen2", "version": "latest"}}, "publicIPAddressName": "[format(\'{0}PublicIP\', parameters(\'vmName\'))]", "networkInterfaceName": "[format(\'{0}NetInt\', parameters(\'vmName\'))]", "osDiskType": "Standard_LRS", "subnetAddressPrefix": "10.1.0.0/24", "addressPrefix": "10.1.0.0/16", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[format(\'/home/{0}/.ssh/authorized_keys\', parameters(\'adminUsername\'))]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "securityProfileJson": {"uefiSettings": {"secureBootEnabled": true, "vTpmEnabled": true}, "securityType": "[parameters(\'securityType\')]"}, "extensionName": "GuestAttestation", "extensionPublisher": "Microsoft.Azure.Security.LinuxAttestation", "extensionVersion": "1.0", "maaTenantName": "GuestAttestation", "maaEndpoint": "[substring(\'emptystring\', 0, 0)]"}, "resources": [{"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2021-05-01", "name": "[variables(\'networkInterfaceName\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]"}, "privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]"}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]"]}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2021-05-01", "name": "[parameters(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "SSH", "properties": {"priority": 1000, "protocol": "Tcp", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "22"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2021-05-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}}}, {"type": "Microsoft.Network/virtualNetworks/subnets", "apiVersion": "2021-05-01", "name": "[format(\'{0}/{1}\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "properties": {"addressPrefix": "[variables(\'subnetAddressPrefix\')]", "privateEndpointNetworkPolicies": "Enabled", "privateLinkServiceNetworkPolicies": "Enabled"}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2021-05-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Basic"}, "properties": {"publicIPAllocationMethod": "Dynamic", "publicIPAddressVersion": "IPv4", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}, "idleTimeoutInMinutes": 4}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2021-11-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "storageProfile": {"osDisk": {"createOption": "FromImage", "managedDisk": {"storageAccountType": "[variables(\'osDiskType\')]"}}, "imageReference": "[variables(\'imageReference\')[parameters(\'ubuntuOSVersion\')]]"}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"}]}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), null(), variables(\'linuxConfiguration\'))]"}, "securityProfile": "[if(equals(parameters(\'securityType\'), \'TrustedLaunch\'), variables(\'securityProfileJson\'), null())]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"]}, {"condition": "[and(equals(parameters(\'securityType\'), \'TrustedLaunch\'), and(equals(variables(\'securityProfileJson\').uefiSettings.secureBootEnabled, true()), equals(variables(\'securityProfileJson\').uefiSettings.vTpmEnabled, true())))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2022-03-01", "name": "[format(\'{0}/{1}\', parameters(\'vmName\'), variables(\'extensionName\'))]", "location": "[parameters(\'location\')]", "properties": {"publisher": "[variables(\'extensionPublisher\')]", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "enableAutomaticUpgrade": true, "settings": {"AttestationConfig": {"MaaSettings": {"maaEndpoint": "[variables(\'maaEndpoint\')]", "maaTenantName": "[variables(\'maaTenantName\')]"}}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}, "hostname": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\')), \'2021-05-01\').dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[format(\'ssh {0}@{1}\', parameters(\'adminUsername\'), reference(resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\')), \'2021-05-01\').dnsSettings.fqdn)]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmName="simpleLinuxVM"\nadminUsername="zytest"\nauthenticationType="password"\nadminPasswordOrKey="zytest"\ndnsLabelPrefix=$(echo "${vmName}-$(uuidgen)" | tr \'[:upper:]\' \'[:lower:]\')\nubuntuOSVersion="Ubuntu-2004"\nlocation="westus"\nvmSize="Standard_D2s_v3"\nvirtualNetworkName="vNet"\nsubnetName="Subnet"\nnetworkSecurityGroupName="SecGroupNet"\nsecurityType="TrustedLaunch"\n\n# Create Network Security Group\naz network nsg create --name $networkSecurityGroupName --resource-group $resourceGroupName --location $location\n\n# Create Virtual Network\naz network vnet create --name $virtualNetworkName --resource-group $resourceGroupName --location $location --address-prefix 10.1.0.0/16\n\n# Create Subnet\naz network vnet subnet create --name $subnetName --resource-group $resourceGroupName --vnet-name $virtualNetworkName --address-prefix 10.1.0.0/24\n\n# Create Public IP\naz network public-ip create --name "${vmName}PublicIP" --resource-group $resourceGroupName --location $location --allocation-method Dynamic --sku Basic --dns-name $dnsLabelPrefix\n\n# Create Network Interface\naz network nic create --name "${vmName}NetInt" --resource-group $resourceGroupName --location $location --subnet $subnetName --public-ip-address "${vmName}PublicIP" --network-security-group $networkSecurityGroupName\n\n# Create Virtual Machine\naz vm create --name $vmName --resource-group $resourceGroupName --location $location --nics "${vmName}NetInt" --image Canonical:UbuntuServer:18_04-lts-gen2:latest --admin-username $adminUsername --admin-password $adminPasswordOrKey --authentication-type $authenticationType --size $vmSize\n\n# Add extension if security type is TrustedLaunch\nif [ "$securityType" == "TrustedLaunch" ]; then\n  az vm extension set --publisher Microsoft.Azure.Security.LinuxAttestation --name GuestAttestation --version 1.0 --vm-name $vmName --resource-group $resourceGroupName\nfi\n```\n\nPlease replace `$resourceGroupName` with your actual resource group name.


verify_result
