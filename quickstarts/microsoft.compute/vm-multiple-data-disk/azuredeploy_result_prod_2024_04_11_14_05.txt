arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"dnsLabelPrefix": {"type": "string", "metadata": {"description": "Unique DNS Name for the Storage Account where the Virtual Machine\'s disks will be placed."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "metadata": {"description": "Size of VM"}, "defaultValue": "zytest"}, "sizeOfEachDataDiskInGB": {"type": "string", "metadata": {"description": "Size of each data disk in GB"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"storageAccountName": "[concat(uniquestring(resourceGroup().id), \'saddiskvm\')]", "addressPrefix": "10.0.0.0/16", "subnet1Name": "Subnet-1", "subnet1Prefix": "10.0.0.0/24", "imagePublisher": "MicrosoftWindowsServer", "imageOffer": "WindowsServer", "imageSKU": "2019-Datacenter", "imageVersion": "latest", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "storageAccountType": "Standard_LRS", "virtualNetworkName": "myVNET", "vmName": "myVM", "nicName": "myNIC", "subnet1Ref": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnet1Name\'))]", "networkSecurityGroupName": "default-NSG"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2021-02-01", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-07-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "[variables(\'subnet1Prefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-07-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnet1Ref\')]"}}}]}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'imageSKU\')]", "version": "[variables(\'imageVersion\')]"}, "dataDisks": [{"diskSizeGB": "[parameters(\'sizeOfEachDataDiskInGB\')]", "lun": 0, "createOption": "Empty"}, {"diskSizeGB": "[parameters(\'sizeOfEachDataDiskInGB\')]", "lun": 1, "createOption": "Empty"}, {"diskSizeGB": "[parameters(\'sizeOfEachDataDiskInGB\')]", "lun": 2, "createOption": "Empty"}, {"diskSizeGB": "[parameters(\'sizeOfEachDataDiskInGB\')]", "lun": 3, "createOption": "Empty"}], "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'storageAccountName\'), \'2019-06-01\').primaryEndpoints[\'blob\']]"}}}}]}


cli_script
'content': '#!/bin/bash\n\n# Define parameters\ndnsLabelPrefix="zytest"\nadminUsername="zytest"\nadminPassword="zytest"\nvmSize="zytest"\nsizeOfEachDataDiskInGB="zytest"\nlocation="westus"\n\n# Define variables\nstorageAccountName=$(echo -n "resourceGroupID" | md5sum | cut -c1-24)"saddiskvm"\naddressPrefix="10.0.0.0/16"\nsubnet1Name="Subnet-1"\nsubnet1Prefix="10.0.0.0/24"\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nimageSKU="2019-Datacenter"\nimageVersion="latest"\npublicIPAddressName="myPublicIP"\npublicIPAddressType="Dynamic"\nstorageAccountType="Standard_LRS"\nvirtualNetworkName="myVNET"\nvmName="myVM"\nnicName="myNIC"\nnetworkSecurityGroupName="default-NSG"\n\n# Create storage account\naz storage account create --name $storageAccountName --location $location --kind StorageV2 --sku $storageAccountType\n\n# Create public IP address\naz network public-ip create --name $publicIPAddressName --location $location --allocation-method $publicIPAddressType --dns-name $dnsLabelPrefix\n\n# Create network security group\naz network nsg create --name $networkSecurityGroupName --location $location\n\n# Add security rule to the network security group\naz network nsg rule create --name default-allow-3389 --nsg-name $networkSecurityGroupName --priority 1000 --access Allow --direction Inbound --destination-port-ranges 3389 --protocol Tcp --source-address-prefixes \'*\' --source-port-ranges \'*\' --destination-address-prefixes \'*\'\n\n# Create virtual network\naz network vnet create --name $virtualNetworkName --location $location --address-prefix $addressPrefix --subnet-name $subnet1Name --subnet-prefix $subnet1Prefix\n\n# Associate network security group with subnet\naz network vnet subnet update --name $subnet1Name --vnet-name $virtualNetworkName --network-security-group $networkSecurityGroupName\n\n# Create network interface\naz network nic create --name $nicName --location $location --vnet-name $virtualNetworkName --subnet $subnet1Name --public-ip-address $publicIPAddressName\n\n# Create virtual machine\naz vm create --name $vmName --location $location --admin-username $adminUsername --admin-password $adminPassword --size $vmSize --storage-sku $storageAccountType --image $imagePublisher:$imageOffer:$imageSKU:$imageVersion --nics $nicName --data-disk-sizes-gb $sizeOfEachDataDiskInGB $sizeOfEachDataDiskInGB $sizeOfEachDataDiskInGB $sizeOfEachDataDiskInGB\n\n# Enable boot diagnostics\naz vm boot-diagnostics enable --name $vmName --storage $storageAccountName', 'validation_results': [{'command': 'az storage account create --name $storageAccountName --location $location --kind StorageV2 --sku $storageAccountType', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az network public-ip create --name $publicIPAddressName --location $location --allocation-method $publicIPAddressType --dns-name $dnsLabelPrefix', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az network nsg create --name $networkSecurityGroupName --location $location', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': "az network nsg rule create --name default-allow-3389 --nsg-name $networkSecurityGroupName --priority 1000 --access Allow --direction Inbound --destination-port-ranges 3389 --protocol Tcp --source-address-prefixes '*' --source-port-ranges '*' --destination-address-prefixes '*'", 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az network vnet create --name $virtualNetworkName --location $location --address-prefix $addressPrefix --subnet-name $subnet1Name --subnet-prefix $subnet1Prefix', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az network vnet subnet update --name $subnet1Name --vnet-name $virtualNetworkName --network-security-group $networkSecurityGroupName', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az network nic create --name $nicName --location $location --vnet-name $virtualNetworkName --subnet $subnet1Name --public-ip-address $publicIPAddressName', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az vm create --name $vmName --location $location --admin-username $adminUsername --admin-password $adminPassword --size $vmSize --storage-sku $storageAccountType --image $imagePublisher:$imageOffer:$imageSKU:$imageVersion --nics $nicName --data-disk-sizes-gb $sizeOfEachDataDiskInGB $sizeOfEachDataDiskInGB $sizeOfEachDataDiskInGB $sizeOfEachDataDiskInGB', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az vm boot-diagnostics enable --name $vmName --storage $storageAccountName', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}], 'command_count': 9, 'gpt_model': 'GPT_4_32k'


verify_result
