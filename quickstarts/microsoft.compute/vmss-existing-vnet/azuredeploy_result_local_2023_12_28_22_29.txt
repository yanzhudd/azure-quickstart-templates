arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSku": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "vmssName": {"type": "string", "metadata": {"description": "Globally unique dns name for the scale set. Must be 3-61 characters in length and globally unique across Azure."}, "minLength": 3, "maxLength": 61, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "metadata": {"description": "Number of VM instances (100 or less)."}, "defaultValue": 2, "minValue": 1, "maxValue": 100}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "existingVnetResourceGroupName": {"type": "string", "metadata": {"description": "Name of the resourceGroup for the existing virtual network to deploy the scale set into."}, "defaultValue": "zytest"}, "existingVnetName": {"type": "string", "metadata": {"description": "vName of the existing virtual network to deploy the scale set into."}, "defaultValue": "zytest"}, "existingSubnetName": {"type": "string", "metadata": {"description": "Name of the existing subnet to deploy the scale set into."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"publicIPAddressName": "pip", "loadBalancerName": "loadBalancer", "loadBalancerFrontEndName": "loadBalancerFrontEnd", "loadBalancerBackEndName": "loadBalancerBackEnd", "loadBalancerProbeName": "loadBalancerHttpProbe", "loadBalancerNatPoolName": "loadBalancerNatPool", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2019-12-01", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'loadBalancerName\'))]"], "sku": {"name": "[parameters(\'vmSku\')]", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": true, "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite"}, "imageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "16.04-LTS", "version": "latest"}}, "osProfile": {"computerNamePrefix": "[parameters(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "nic", "properties": {"primary": true, "ipConfigurations": [{"name": "ipconfig", "properties": {"subnet": {"id": "[resourceId(parameters(\'existingVnetResourceGroupName\'), \'Microsoft.Network/virtualNetworks/subnets\', parameters(\'existingVnetName\'), parameters(\'existingSubNetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerBackEndName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerNatPoolName\'))]"}]}}]}}]}}}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-05-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[toLower(parameters(\'vmssName\'))]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-05-01", "dependsOn": ["[variables(\'publicIPAddressName\')]"], "properties": {"frontendIPConfigurations": [{"name": "[variables(\'loadBalancerFrontEndName\')]", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'loadBalancerBackendName\')]"}], "loadBalancingRules": [{"name": "roundRobinLBRule", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), variables(\'loadBalancerFrontEndName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'loadBalancerBackendName\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'loadBalancerName\'), variables(\'loadBalancerProbeName\'))]"}}}], "probes": [{"name": "[variables(\'loadBalancerProbeName\')]", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}], "inboundNatPools": [{"name": "[variables(\'loadBalancerNatPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), variables(\'loadBalancerFrontEndName\'))]"}, "protocol": "Tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50019, "backendPort": 22}}]}}]}


cli_script
Below is the translated bash script for the provided ARM template and parameters. The script sets up variables for the parameters, then uses Azure CLI commands to create the resources as specified in the ARM template.\n\n```bash\n#!/bin/bash\n\n# Set variables from the parameters\nvmSku="Standard_D2_v3"\nvmssName="zytest"\ninstanceCount=2\nadminUsername="zytest"\nexistingVnetResourceGroupName="zytest"\nexistingVnetName="zytest"\nexistingSubnetName="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nlocation="westus"\n\n# Create a public IP address\naz network public-ip create \\\n    --name pip \\\n    --resource-group $existingVnetResourceGroupName \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name $vmssName\n\n# Create a load balancer\naz network lb create \\\n    --name loadBalancer \\\n    --resource-group $existingVnetResourceGroupName \\\n    --location $location \\\n    --frontend-ip-name loadBalancerFrontEnd \\\n    --backend-pool-name loadBalancerBackEnd \\\n    --public-ip-address pip\n\n# Create a load balancer probe\naz network lb probe create \\\n    --resource-group $existingVnetResourceGroupName \\\n    --lb-name loadBalancer \\\n    --name loadBalancerHttpProbe \\\n    --protocol Tcp \\\n    --port 80 \\\n    --interval 5 \\\n    --count 2\n\n# Create a load balancer rule\naz network lb rule create \\\n    --resource-group $existingVnetResourceGroupName \\\n    --lb-name loadBalancer \\\n    --name roundRobinLBRule \\\n    --protocol Tcp \\\n    --frontend-port 80 \\\n    --backend-port 80 \\\n    --frontend-ip-name loadBalancerFrontEnd \\\n    --backend-pool-name loadBalancerBackEnd \\\n    --probe-name loadBalancerHttpProbe \\\n    --idle-timeout 5\n\n# Create a load balancer NAT pool\naz network lb inbound-nat-pool create \\\n    --resource-group $existingVnetResourceGroupName \\\n    --lb-name loadBalancer \\\n    --name loadBalancerNatPool \\\n    --protocol Tcp \\\n    --frontend-port-range-start 50000 \\\n    --frontend-port-range-end 50019 \\\n    --backend-port 22 \\\n    --frontend-ip-name loadBalancerFrontEnd\n\n# Create a VM scale set\naz vmss create \\\n    --resource-group $existingVnetResourceGroupName \\\n    --name $vmssName \\\n    --location $location \\\n    --vm-sku $vmSku \\\n    --instance-count $instanceCount \\\n    --authentication-type $authenticationType \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPasswordOrKey \\\n    --image Canonical:UbuntuServer:16.04-LTS:latest \\\n    --upgrade-policy-mode Manual \\\n    --overprovision \\\n    --load-balancer loadBalancer \\\n    --load-balancer-backend-pool-name loadBalancerBackEnd \\\n    --load-balancer-inbound-nat-pool-name loadBalancerNatPool \\\n    --vnet-name $existingVnetName \\\n    --subnet $existingSubnetName \\\n    --public-ip-address "" \\\n    --public-ip-per-vm\n\n# If authentication type is \'sshPublicKey\', set up the SSH configuration\nif [ "$authenticationType" == "sshPublicKey" ]; then\n    az vmss extension set \\\n        --publisher Microsoft.Azure.Extensions \\\n        --version 2.0 \\\n        --name CustomScript \\\n        --vmss-name $vmssName \\\n        --resource-group $existingVnetResourceGroupName \\\n        --settings "{\\"fileUris\\":[],\\"commandToExecute\\":\\"echo $adminPasswordOrKey >> /home/$adminUsername/.ssh/authorized_keys\\"}"\nfi\n```\n\nPlease note that this script assumes that you have already logged into Azure CLI and set the appropriate subscription. Also, replace the placeholder values with actual values where necessary, especially for the `adminPasswordOrKey` variable, which should be your actual SSH public key or password, depending on the `authenticationType`.


verify_result
