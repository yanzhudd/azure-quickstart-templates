arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"location": {"metadata": {"description": "The Location For the resources"}, "type": "string", "defaultValue": "westus"}, "extensionName": {"type": "string", "metadata": {"description": "name of the extension"}, "defaultValue": "zytest"}, "vmName": {"metadata": {"description": "The name of the vm"}, "type": "string", "defaultValue": "zytest"}, "fileUris": {"type": "array", "defaultValue": "zytest"}, "commandToExecute": {"type": "string", "defaultValue": "zytest"}, "isWindowsOS": {"type": "bool", "defaultValue": "zytest"}}, "variables": {"extensionNameWindows": "[concat(parameters(\'extensionName\'), \'-windows\')]", "extensionNameLinux": "[concat(parameters(\'extensionName\'), \'-linux\')]"}, "resources": [{"condition": "[parameters(\'isWindowsOS\')]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2020-12-01", "name": "[concat(parameters(\'vmName\'), \'/\', variables(\'extensionNameWindows\'))]", "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Compute", "type": "CustomScriptExtension", "typeHandlerVersion": "1.8", "autoUpgradeMinorVersion": true, "settings": {"fileUris": "[parameters(\'fileUris\')]", "commandToExecute": "[parameters(\'commandToExecute\')]"}}}, {"condition": "[not(parameters(\'isWindowsOS\'))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2017-03-30", "name": "[concat(parameters(\'vmName\'), \'/\', variables(\'extensionNameLinux\'))]", "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": "[parameters(\'fileUris\')]"}, "protectedSettings": {"commandToExecute": "[parameters(\'commandToExecute\')]"}}}], "outputs": {"instanceView": {"value": "[reference(if(parameters(\'isWindowsOS\'), resourceId(\'Microsoft.Compute/virtualMachines/extensions\', parameters(\'vmName\'), variables(\'extensionNameWindows\')), resourceId(\'Microsoft.Compute/virtualMachines/extensions\', parameters(\'vmName\'), variables(\'extensionNameLinux\')))).instanceView]", "type": "object"}}}


cli_script
'content': '#!/bin/bash\n\n# Define variables\nlocation="westus"\nextensionName="zytest"\nvmName="zytest"\nfileUris=("zytest")\ncommandToExecute="zytest"\nisWindowsOS="zytest"\nextensionNameWindows="${extensionName}-windows"\nextensionNameLinux="${extensionName}-linux"\n\n# Create VM extension for Windows\nif [ "$isWindowsOS" = true ] ; then\n    az vm extension set \\\n        --resource-group myResourceGroup \\\n        --vm-name $vmName \\\n        --name $extensionNameWindows \\\n        --publisher Microsoft.Compute \\\n        --version 1.8 \\\n        --settings \'{"fileUris": ["\'${fileUris[@]}\'"], "commandToExecute": "\'$commandToExecute\'"}\' \\\n        --location $location\nfi\n\n# Create VM extension for Linux\nif [ "$isWindowsOS" = false ] ; then\n    az vm extension set \\\n        --resource-group myResourceGroup \\\n        --vm-name $vmName \\\n        --name $extensionNameLinux \\\n        --publisher Microsoft.Azure.Extensions \\\n        --version 2.0 \\\n        --settings \'{"fileUris": ["\'${fileUris[@]}\'"]}\' \\\n        --protected-settings \'{"commandToExecute": "\'$commandToExecute\'"}\' \\\n        --location $location\nfi\n\n# Get instance view\naz vm extension show --resource-group myResourceGroup --vm-name $vmName --name $extensionNameWindows --query instanceView\naz vm extension show --resource-group myResourceGroup --vm-name $vmName --name $extensionNameLinux --query instanceView\n', 'validation_results': [], 'command_count': 0, 'gpt_model': 'GPT_4_32k'


verify_result
