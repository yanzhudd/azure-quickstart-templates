arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[concat(\'vm-\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "windowsOSVersion": {"type": "string", "defaultValue": "2019-Datacenter", "allowedValues": ["2008-R2-SP1", "2008-R2-SP1-smalldisk", "2008-R2-SP1-zhcn", "2012-Datacenter", "2012-datacenter-gensecond", "2012-Datacenter-smalldisk", "2012-Datacenter-zhcn", "2012-R2-Datacenter", "2012-r2-datacenter-gensecond", "2012-R2-Datacenter-smalldisk", "2012-R2-Datacenter-zhcn", "2016-Datacenter", "2016-datacenter-gensecond", "2016-Datacenter-Server-Core", "2016-Datacenter-Server-Core-smalldisk", "2016-Datacenter-smalldisk", "2016-Datacenter-with-Containers", "2016-Datacenter-with-RDSH", "2016-Datacenter-zhcn", "2019-Datacenter", "2019-Datacenter-Core", "2019-Datacenter-Core-smalldisk", "2019-Datacenter-Core-with-Containers", "2019-Datacenter-Core-with-Containers-smalldisk", "2019-datacenter-gensecond", "2019-Datacenter-smalldisk", "2019-Datacenter-with-Containers", "2019-Datacenter-with-Containers-smalldisk", "2019-Datacenter-zhcn"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "VM Size, note the VM Size determnines the max number of disks available, use \'az vm list-sizes\' or \'Get-AzVmSize\' for details."}}, "numberOfVms": {"type": "int", "defaultValue": 2, "minValue": 1, "maxValue": 10, "metadata": {"description": "The number of VMs to create."}}, "numDataDisks": {"type": "int", "defaultValue": 4, "minValue": 1, "maxValue": 64, "metadata": {"description": "This parameter allows the user to select the number of disks they want"}}, "sizeOfDataDisksInGB": {"type": "int", "defaultValue": 100, "minValue": 16, "maxValue": 4096, "metadata": {"description": "Size of the data disks"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"storageAccountName": "[concat(\'diags\', uniquestring(resourceGroup().id))]", "nicName": "dynamicDisksVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "publicIPAddressName": "dynamicDisksPublicIP", "vmName": "dynamicDisksVM", "virtualNetworkName": "dynamicDisksVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2019-04-01", "name": "[variables(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage", "properties": {}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2019-06-01", "name": "[concat(variables(\'publicIPAddressName\'), copyIndex())]", "location": "[parameters(\'location\')]", "copy": {"name": "ipLoop", "count": "[parameters(\'numberOfVms\')]"}, "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[concat(parameters(\'dnsLabelPrefix\'), copyIndex())]"}}}, {"apiVersion": "2019-06-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"apiVersion": "2019-06-01", "type": "Microsoft.Network/networkInterfaces", "name": "[concat(variables(\'nicName\'), copyIndex())]", "location": "[parameters(\'location\')]", "copy": {"name": "nicLoop", "count": "[parameters(\'numberOfVms\')]"}, "dependsOn": ["ipLoop", "[variables(\'virtualNetworkName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', concat(variables(\'publicIPAddressName\'), copyIndex()))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2019-03-01", "type": "Microsoft.Compute/virtualMachines", "name": "[concat(variables(\'vmName\'), copyIndex())]", "location": "[parameters(\'location\')]", "copy": {"name": "vmLoop", "count": "[parameters(\'numberOfVms\')]"}, "dependsOn": ["[variables(\'storageAccountName\')]", "nicLoop"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[concat(variables(\'vmName\'), copyIndex())]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'windowsOSVersion\')]", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'vmName\'), copyIndex(),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}, "copy": [{"name": "dataDisks", "count": "[parameters(\'numDataDisks\')]", "input": {"caching": "ReadWrite", "diskSizeGB": "[parameters(\'sizeOfDataDisksInGB\')]", "lun": "[copyIndex(\'dataDisks\')]", "name": "[concat(variables(\'vmName\'), \'-datadisk\',copyIndex(), copyIndex(\'dataDisks\'))]", "createOption": "Empty"}}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', concat(variables(\'nicName\'), copyIndex()))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'storageAccountName\')).primaryEndpoints.blob]"}}}}]}


cli_script
```bash\n#!/bin/bash\n\n# Define the parameters as variables\nadminUsername="zytest" # Username for the Virtual Machine.\nadminPassword="zytest" # Password for the Virtual Machine.\n# dnsLabelPrefix is a dynamic value based on uniqueString function, which cannot be directly translated into a CLI variable.\nwindowsOSVersion="2019-Datacenter" # The Windows version for the VM.\nvmSize="Standard_D2_v3" # VM Size\nnumberOfVms=2 # The number of VMs to create.\nnumDataDisks=4 # The number of data disks to select.\nsizeOfDataDisksInGB=100 # Size of the data disks\nlocation="westus" # Location for all resources.\n\n# Resource Group variables (not directly provided in the template)\nresourceGroupName="<YourResourceGroupName>" # Replace with your actual resource group name\n\n# Generate unique names based on the resource group\nuniqueStorageAccountName=$(az group show --name $resourceGroupName --query id --output tsv | sha1sum | cut -c1-8)\nstorageAccountName="diags$uniqueStorageAccountName"\nuniqueDnsLabelPrefix=$(az group show --name $resourceGroupName --query id --output tsv | sha1sum | cut -c1-8)\ndnsLabelPrefix="vm-$uniqueDnsLabelPrefix"\n\n# Create a storage account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --kind Storage \\\n    --resource-group $resourceGroupName\n\n# Create a virtual network\nvirtualNetworkName="dynamicDisksVNET"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group $resourceGroupName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create public IP addresses and network interfaces\nfor ((i=0; i<$numberOfVms; i++))\ndo\n    publicIPAddressName="dynamicDisksPublicIP$i"\n    nicName="dynamicDisksVMNic$i"\n    dnsName="$dnsLabelPrefix$i"\n\n    # Create public IP address\n    az network public-ip create \\\n        --name $publicIPAddressName \\\n        --resource-group $resourceGroupName \\\n        --location $location \\\n        --allocation-method Dynamic \\\n        --dns-name $dnsName\n\n    # Create network interface\n    az network nic create \\\n        --name $nicName \\\n        --resource-group $resourceGroupName \\\n        --location $location \\\n        --vnet-name $virtualNetworkName \\\n        --subnet $subnetName \\\n        --public-ip-address $publicIPAddressName\ndone\n\n# Create virtual machines\nfor ((i=0; i<$numberOfVms; i++))\ndo\n    vmName="dynamicDisksVM$i"\n    nicName="dynamicDisksVMNic$i"\n    osDiskName="${vmName}_OSDisk"\n    nicId=$(az network nic show --name $nicName --resource-group $resourceGroupName --query id --output tsv)\n\n    # Create the VM\n    az vm create \\\n        --name $vmName \\\n        --resource-group $resourceGroupName \\\n        --location $location \\\n        --nics $nicId \\\n        --size $vmSize \\\n        --image Win2019Datacenter \\\n        --admin-username $adminUsername \\\n        --admin-password $adminPassword \\\n        --os-disk-name $osDiskName \\\n        --no-wait\n\n    # Attach data disks to the VM\n    for ((j=0; j<$numDataDisks; j++))\n    do\n        dataDiskName="${vmName}-datadisk${j}"\n        az vm disk attach \\\n            --vm-name $vmName \\\n            --resource-group $resourceGroupName \\\n            --name $dataDiskName \\\n            --size-gb $sizeOfDataDisksInGB \\\n            --sku Standard_LRS \\\n            --new\n    done\ndone\n\n# Note: The diagnostics storage account endpoint and boot diagnostics are not enabled in this script\n# as it requires querying the storage account after creation, which is not feasible in a single script pass.\n# You would need to retrieve the storage account\'s primary endpoint and then update the VM\'s diagnostics profile.\n```\n\nPlease note that the above script assumes that you have already logged in to your Azure CLI and set the correct subscription context. Replace `<YourResourceGroupName>` with your actual resource group name.\n\nThe `dnsLabelPrefix` and `storageAccountName` are generated based on a unique string derived from the resource group ID. The ARM template uses the `uniqueString` function, which we mimic by hashing the resource group ID and taking a substring of it.\n\nThe diagnostics profile for boot diagnostics is not enabled in this script, as it requires querying the storage account after its creation to get the endpoint URL, which is not feasible in a single script pass. If needed, you would need to add additional commands after the storage account creation to retrieve the primary endpoint and update the VM\'s diagnostics profile accordingly.\n\nThe `--image Win2019Datacenter` parameter in `az vm create` is a placeholder and should be replaced with the appropriate image reference for the specified `windowsOSVersion`. The Azure CLI does not have a direct mapping for every image SKU provided in the ARM template, so you may need to specify the `publisher`, `offer`, `sku`, and `version` explicitly if the placeholder does not correspond to your requirements.


verify_result
