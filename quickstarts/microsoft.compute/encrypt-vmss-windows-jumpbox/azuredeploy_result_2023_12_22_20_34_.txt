arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmssName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."}, "maxLength": 61, "defaultValue": "zytest"}, "vmSku": {"type": "string", "defaultValue": "Standard_A1", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "imagePublisher": {"type": "string", "defaultValue": "MicrosoftWindowsServer", "metadata": {"description": "Publisher of OS image."}}, "imageOffer": {"type": "string", "defaultValue": "WindowsServer", "metadata": {"description": "OS image offer"}}, "imageSku": {"type": "string", "defaultValue": "2012-R2-Datacenter", "metadata": {"description": "OS image SKU"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "osVersion": {"type": "string", "defaultValue": "latest", "metadata": {"description": "OS Version. This will pick a fully patched image of this given OS version. Example values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."}}, "instanceCount": {"type": "int", "defaultValue": 2, "metadata": {"description": "Number of VM instances (100 or less)."}, "minValue": 2, "maxValue": 100}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password on all VMs."}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "enabledForDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."}}, "enabledForDiskEncryption": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."}}, "enabledForTemplateDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."}}, "keysPermissions": {"type": "array", "defaultValue": ["list", "get", "decrypt", "encrypt", "unwrapkey", "wrapkey"], "metadata": {"description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."}}, "secretsPermissions": {"type": "array", "defaultValue": ["list", "get"], "metadata": {"description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."}}, "skuName": {"type": "string", "defaultValue": "Standard", "allowedValues": ["Standard", "Premium"], "metadata": {"description": "Specifies whether the key vault is a standard vault or a premium vault."}}}, "variables": {"namingInfix": "[toLower(substring(concat(parameters(\'vmssName\'), uniqueString(resourceGroup().id)), 0, 9))]", "longNamingInfix": "[toLower(parameters(\'vmssName\'))]", "jumpBoxName": "[concat(variables(\'namingInfix\'), \'jbox\')]", "jumpBoxSAName": "[concat(\'jumpboxsa\', uniqueString(resourceGroup().id))]", "jumpBoxOSDiskName": "[concat(variables(\'jumpBoxName\'), \'osdisk\')]", "jumpBoxIPConfigName": "[concat(variables(\'jumpBoxName\'), \'ipconfig\')]", "jumpBoxNicName": "[concat(variables(\'jumpBoxName\'), \'nic\')]", "storageAccountType": "Standard_LRS", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "subnetName": "[concat(variables(\'namingInfix\'), \'subnet\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "publicIPAddressName": "[concat(variables(\'namingInfix\'), \'pip\')]", "nicName": "[concat(variables(\'namingInfix\'), \'nic\')]", "ipConfigName": "[concat(variables(\'namingInfix\'), \'ipconfig\')]", "osType": {"publisher": "[parameters(\'imagePublisher\')]", "offer": "[parameters(\'imageOffer\')]", "sku": "[parameters(\'imageSku\')]", "version": "[parameters(\'osVersion\')]"}, "imageReference": "[variables(\'osType\')]", "keyVaultURL": "[concat(\'https://\', parameters(\'keyVaultName\'), environment().suffixes.keyVaultDns)]", "encryptionOperation": "EnableEncryption", "keyVaultResourceId": "[resourceId(\'Microsoft.KeyVault/vaults\', parameters(\'keyVaultName\'))]"}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2020-08-01", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'jumpBoxSAName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2019-06-01", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2", "properties": {}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-09-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[variables(\'longNamingInfix\')]"}}}, {"type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'jumpBoxNicName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-09-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "[variables(\'jumpBoxIPConfigName\')]", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'jumpBoxName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-03-30", "dependsOn": ["[variables(\'jumpBoxNicName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSku\')]"}, "osProfile": {"computerName": "[variables(\'jumpBoxName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": "[variables(\'imageReference\')]", "osDisk": {"name": "[variables(\'jumpBoxOSDiskName\')]", "caching": "ReadWrite", "createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'jumpBoxNicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'jumpBoxSAName\')).primaryEndpoints.blob]"}}}}, {"type": "Microsoft.KeyVault/vaults", "apiVersion": "2019-09-01", "name": "[parameters(\'keyVaultName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachineScaleSets\', parameters(\'vmssName\'))]"], "properties": {"enabledForDeployment": "[parameters(\'enabledForDeployment\')]", "enabledForDiskEncryption": "[parameters(\'enabledForDiskEncryption\')]", "enabledForTemplateDeployment": "[parameters(\'enabledForTemplateDeployment\')]", "tenantId": "[subscription().tenantId]", "accessPolicies": [{"objectId": "[reference(resourceId(\'Microsoft.Compute/virtualMachineScaleSets/\', parameters(\'vmssName\')), \'2019-07-01\', \'full\').identity.principalId]", "tenantId": "[subscription().tenantId]", "permissions": {"keys": "[parameters(\'keysPermissions\')]", "secrets": "[parameters(\'secretsPermissions\')]"}}], "sku": {"name": "[parameters(\'skuName\')]", "family": "A"}, "networkAcls": {"defaultAction": "Allow", "bypass": "AzureServices"}}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2017-03-30", "dependsOn": ["[variables(\'virtualNetworkName\')]"], "identity": {"type": "SystemAssigned"}, "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": true, "upgradePolicy": {"mode": "Automatic"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[variables(\'namingInfix\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}]}}}}, {"type": "Microsoft.Compute/virtualMachineScaleSets/extensions", "name": "[concat(parameters(\'vmssName\'),\'/diskEncryption\')]", "apiVersion": "2019-03-01", "dependsOn": ["[resourceId(\'Microsoft.KeyVault/vaults\', parameters(\'keyVaultName\'))]"], "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "AzureDiskEncryption", "typeHandlerVersion": "2.2", "autoUpgradeMinorVersion": true, "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[variables(\'keyVaultURL\')]", "KeyVaultResourceId": "[variables(\'keyVaultResourceId\')]", "VolumeType": "All"}}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmssName="zytest"\nvmSku="Standard_A1"\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nimageSku="2012-R2-Datacenter"\nlocation="westus"\nosVersion="latest"\ninstanceCount=2\nadminUsername="zytest"\nadminPassword="zytest"\nkeyVaultName="zytest"\nenabledForDeployment=true\nenabledForDiskEncryption=true\nenabledForTemplateDeployment=true\nkeysPermissions=("list" "get" "decrypt" "encrypt" "unwrapkey" "wrapkey")\nsecretsPermissions=("list" "get")\nskuName="Standard"\n\n# Create resources\naz network vnet create --name $vmssName --resource-group myResourceGroup --location $location --address-prefix 10.0.0.0/16 --subnet-name $vmssName --subnet-prefix 10.0.0.0/24\n\naz storage account create --name $vmssName --resource-group myResourceGroup --location $location --sku Standard_LRS --kind StorageV2\n\naz network public-ip create --name $vmssName --resource-group myResourceGroup --location $location --allocation-method Dynamic --dns-name $vmssName\n\naz network nic create --name $vmssName --resource-group myResourceGroup --location $location --vnet-name $vmssName --subnet $vmssName --public-ip-address $vmssName\n\naz vm create --name $vmssName --resource-group myResourceGroup --location $location --nics $vmssName --admin-username $adminUsername --admin-password $adminPassword --image $imagePublisher:$imageOffer:$imageSku:$osVersion --size $vmSku\n\naz keyvault create --name $keyVaultName --resource-group myResourceGroup --location $location --enabled-for-deployment $enabledForDeployment --enabled-for-disk-encryption $enabledForDiskEncryption --enabled-for-template-deployment $enabledForTemplateDeployment --sku $skuName\n\naz vmss create --name $vmssName --resource-group myResourceGroup --location $location --admin-username $adminUsername --admin-password $adminPassword --image $imagePublisher:$imageOffer:$imageSku:$osVersion --vm-sku $vmSku --instance-count $instanceCount --vnet-name $vmssName --subnet $vmssName\n\naz vmss extension set --publisher Microsoft.Azure.Security --name AzureDiskEncryption --version 2.2 --resource-group myResourceGroup --vmss-name $vmssName --settings \'{"EncryptionOperation": "EnableEncryption", "KeyVaultURL": "https://\'$keyVaultName\'.vault.azure.net/", "KeyVaultResourceId": "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.KeyVault/vaults/\'$keyVaultName\'", "VolumeType": "All"}\'\n```\n\nPlease replace `{subscriptionId}` with your actual Azure subscription ID.


verify_result
