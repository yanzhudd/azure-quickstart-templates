arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.5.6.12127", "templateHash": "13701565265914879608"}}, "parameters": {"virtualMachineSize": {"type": "string", "defaultValue": "Standard_DS1_v2", "metadata": {"description": "Virtual machine size (has to be at least the size of Standard_A3 to support 2 NICs)"}}, "adminUsername": {"type": "string", "metadata": {"description": "Default Admin username"}, "defaultValue": "zytest"}, "adminPassword": {"type": "secureString", "metadata": {"description": "Default Admin password"}, "defaultValue": "zytest"}, "storageAccountType": {"type": "string", "defaultValue": "Standard_LRS", "allowedValues": ["Standard_LRS", "Premium_LRS"], "metadata": {"description": "Storage Account type for the VM and VM diagnostic storage"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"virtualMachineName": "VM-MultiNic", "nic1Name": "nic-1", "nic2Name": "nic-2", "virtualNetworkName": "virtualNetwork", "subnet1Name": "subnet-1", "subnet2Name": "subnet-2", "publicIPAddressName": "publicIp", "diagStorageAccountName": "[format(\'diags{0}\', uniqueString(resourceGroup().id))]", "networkSecurityGroupName": "NSG", "networkSecurityGroupName2": "[format(\'{0}-nsg\', variables(\'subnet2Name\'))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2020-06-01", "name": "[variables(\'virtualMachineName\')]", "location": "[parameters(\'location\')]", "properties": {"osProfile": {"computerName": "[variables(\'virtualMachineName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "windowsConfiguration": {"provisionVMAgent": true}}, "hardwareProfile": {"vmSize": "[parameters(\'virtualMachineSize\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2019-Datacenter", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"properties": {"primary": true}, "id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic1Name\'))]"}, {"properties": {"primary": false}, "id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic2Name\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'diagStorageAccountName\'))).primaryEndpoints.blob]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'diagStorageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic1Name\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic2Name\'))]"]}, {"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2019-06-01", "name": "[variables(\'diagStorageAccountName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[parameters(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-06-01", "name": "[variables(\'networkSecurityGroupName2\')]", "location": "[parameters(\'location\')]"}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-06-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}, {"name": "[variables(\'subnet2Name\')]", "properties": {"addressPrefix": "10.0.1.0/24", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName2\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName2\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-06-01", "name": "[variables(\'nic1Name\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnet1Name\'))]"}, "privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-06-01", "name": "[variables(\'nic2Name\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnet2Name\'))]"}, "privateIPAllocationMethod": "Dynamic"}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-06-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic"}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-06-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-rdp", "properties": {"priority": 1000, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "3389", "access": "Allow", "direction": "Inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}]}


cli_script
Below is the translated bash script that corresponds to the provided ARM template and template parameter values:\n\n```bash\n#!/bin/bash\n\n# Define template parameter values as variables\nvirtualMachineSize="Standard_DS1_v2"\nadminUsername="zytest"\nadminPassword="zytest"\nstorageAccountType="Standard_LRS"\nlocation="westus"\n\n# Define variables from the ARM template\nvirtualMachineName="VM-MultiNic"\nnic1Name="nic-1"\nnic2Name="nic-2"\nvirtualNetworkName="virtualNetwork"\nsubnet1Name="subnet-1"\nsubnet2Name="subnet-2"\npublicIPAddressName="publicIp"\n# The diagStorageAccountName is generated using a unique string function which is not available in bash.\n# We will use a placeholder name for the storage account.\ndiagStorageAccountName="diags$(uuidgen)"\nnetworkSecurityGroupName="NSG"\nnetworkSecurityGroupName2="${subnet2Name}-nsg"\n\n# Create a storage account for VM diagnostics\naz storage account create \\\n    --name $diagStorageAccountName \\\n    --location $location \\\n    --sku $storageAccountType \\\n    --kind StorageV2\n\n# Create a network security group for the second subnet\naz network nsg create \\\n    --name $networkSecurityGroupName2 \\\n    --location $location\n\n# Create a virtual network with two subnets\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefixes 10.0.0.0/16 \\\n    --subnet-name $subnet1Name \\\n    --subnet-prefix 10.0.0.0/24\n\naz network vnet subnet create \\\n    --name $subnet2Name \\\n    --address-prefixes 10.0.1.0/24 \\\n    --vnet-name $virtualNetworkName \\\n    --network-security-group $networkSecurityGroupName2\n\n# Create a public IP address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method Dynamic\n\n# Create a network security group for the first network interface\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name default-allow-rdp \\\n    --priority 1000 \\\n    --source-address-prefixes \'*\' \\\n    --protocol Tcp \\\n    --destination-port-ranges 3389 \\\n    --access Allow \\\n    --direction Inbound \\\n    --source-port-ranges \'*\' \\\n    --destination-address-prefixes \'*\'\n\n# Create network interfaces\naz network nic create \\\n    --name $nic1Name \\\n    --location $location \\\n    --subnet $(az network vnet subnet show --name $subnet1Name --vnet-name $virtualNetworkName --query id -o tsv) \\\n    --public-ip-address $publicIPAddressName \\\n    --network-security-group $networkSecurityGroupName\n\naz network nic create \\\n    --name $nic2Name \\\n    --location $location \\\n    --subnet $(az network vnet subnet show --name $subnet2Name --vnet-name $virtualNetworkName --query id -o tsv)\n\n# Create a virtual machine with the specified parameters and network interfaces\naz vm create \\\n    --name $virtualMachineName \\\n    --location $location \\\n    --size $virtualMachineSize \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword \\\n    --nics $nic1Name $nic2Name \\\n    --image MicrosoftWindowsServer:WindowsServer:2019-Datacenter:latest \\\n    --os-disk-name "${virtualMachineName}_osdisk" \\\n    --storage-sku $storageAccountType \\\n    --boot-diagnostics-storage $diagStorageAccountName\n```\n\nPlease note that the unique string function used in ARM templates for generating the storage account name is not directly translatable to bash. In this script, I have used `uuidgen` to generate a unique string for the storage account name. Additionally, the reference to the storage account\'s primary endpoints for boot diagnostics is not included in the script, as it requires querying the created storage account for its endpoint. You may need to modify the script to include that information after the storage account is created.


verify_result
