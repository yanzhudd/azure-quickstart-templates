arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "newvm", "metadata": {"description": "Name of the VM"}}, "osType": {"type": "string", "allowedValues": ["Windows", "Linux"], "defaultValue": "Windows", "metadata": {"description": "Type of OS on the existing vhd"}}, "osDiskVhdUri": {"type": "string", "metadata": {"description": "Uri of the existing VHD in ARM standard or premium storage"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the VM"}}, "vNetNewOrExisting": {"type": "string", "defaultValue": "new", "allowedValues": ["new", "existing"], "metadata": {"description": "Specify whether to create a new or existing virtual network for the VM."}}, "virtualNetworkName": {"type": "string", "defaultValue": "newVnet", "metadata": {"description": "Name of the existing VNET"}}, "virtualNetworkResourceGroup": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "Name of the existing VNET resource group"}}, "subnetName": {"type": "string", "defaultValue": "subnet-1", "metadata": {"description": "Name of the subnet in the virtual network you want to use"}}, "dnsNameForPublicIP": {"type": "string", "defaultValue": "[concat(\'vm-\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "password", "allowedValues": ["password", "sshPublicKey"], "metadata": {"description": "Type of authentication to use on the Virtual Machine."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "Password or ssh key for the Virtual Machine."}, "defaultValue": "zytest"}}, "variables": {"diagStorageAccountName": "[concat(uniquestring(resourceGroup().id), \'specvm\')]", "subnetRef": "[resourceId(parameters(\'virtualNetworkResourceGroup\'), \'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'),  parameters(\'subnetName\'))]", "nicName": "nic", "publicIPAddressName": "publicIp", "imageName": "[concat(parameters(\'vmName\'), \'-image\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"condition": "[equals(parameters(\'vNetNewOrExisting\'), \'new\')]", "apiVersion": "2020-06-01", "type": "Microsoft.Network/virtualNetworks", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'diagStorageAccountName\')]", "apiVersion": "2019-06-01", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage", "properties": {}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "PublicIPAddress"}, "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]"], "tags": {"displayName": "NetworkInterface"}, "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/images", "apiVersion": "2020-06-01", "name": "[variables(\'imageName\')]", "location": "[parameters(\'location\')]", "properties": {"hyperVGeneration": "V2", "storageProfile": {"osDisk": {"osType": "[parameters(\'osType\')]", "osState": "Generalized", "blobUri": "[parameters(\'osDiskVhdUri\')]", "caching": "ReadWrite", "storageAccountType": "Standard_LRS"}}}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "VirtualMachine"}, "dependsOn": ["[variables(\'nicName\')]", "[variables(\'imageName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"id": "[resourceId(\'Microsoft.Compute/images\', variables(\'imageName\'))]"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'diagStorageAccountName\')).primaryEndpoints.blob]"}}}}]}


cli_script
```bash\n#!/bin/bash\n\n# Assigning parameter values to variables\nvmName="newvm"\nosType="Windows"\nosDiskVhdUri="zytest"\nvmSize="Standard_D2s_v3"\nvNetNewOrExisting="new"\nvirtualNetworkName="newVnet"\nvirtualNetworkResourceGroup=$(az group show --query name --output tsv)\nsubnetName="subnet-1"\ndnsNameForPublicIP=$(echo "vm-$(az group show --query id --output tsv | md5sum | head -c 8)")\nlocation="westus"\nadminUsername="zytest"\nauthenticationType="password"\nadminPasswordOrKey="zytest"\n\n# Variables not directly mapped from parameters\ndiagStorageAccountName=$(echo "$(az group show --query id --output tsv | md5sum | head -c 8)specvm")\nsubnetRef=$(az network vnet subnet show --resource-group "$virtualNetworkResourceGroup" --vnet-name "$virtualNetworkName" --name "$subnetName" --query id --output tsv)\nnicName="nic"\npublicIPAddressName="publicIp"\nimageName="${vmName}-image"\nsshPublicKeyPath="/home/${adminUsername}/.ssh/authorized_keys"\n\n# Create a new virtual network and subnet if vNetNewOrExisting is set to \'new\'\nif [ "$vNetNewOrExisting" == "new" ]; then\n  az network vnet create \\\n    --name "$virtualNetworkName" \\\n    --resource-group "$virtualNetworkResourceGroup" \\\n    --location "$location" \\\n    --address-prefix "10.0.0.0/16" \\\n    --subnet-name "$subnetName" \\\n    --subnet-prefix "10.0.0.0/24"\nfi\n\n# Create a new storage account for diagnostics\naz storage account create \\\n  --name "$diagStorageAccountName" \\\n  --resource-group "$virtualNetworkResourceGroup" \\\n  --location "$location" \\\n  --sku "Standard_LRS" \\\n  --kind "Storage"\n\n# Create a public IP address\naz network public-ip create \\\n  --name "$publicIPAddressName" \\\n  --resource-group "$virtualNetworkResourceGroup" \\\n  --location "$location" \\\n  --allocation-method "Dynamic" \\\n  --dns-name "$dnsNameForPublicIP"\n\n# Create a network interface with the public IP address and link to the subnet\naz network nic create \\\n  --name "$nicName" \\\n  --resource-group "$virtualNetworkResourceGroup" \\\n  --location "$location" \\\n  --subnet "$subnetRef" \\\n  --public-ip-address "$publicIPAddressName"\n\n# Create an image from the VHD\naz image create \\\n  --resource-group "$virtualNetworkResourceGroup" \\\n  --name "$imageName" \\\n  --location "$location" \\\n  --os-type "$osType" \\\n  --source "$osDiskVhdUri" \\\n  --hyper-v-generation "V2"\n\n# Create a virtual machine\naz vm create \\\n  --name "$vmName" \\\n  --resource-group "$virtualNetworkResourceGroup" \\\n  --location "$location" \\\n  --size "$vmSize" \\\n  --image "$imageName" \\\n  --admin-username "$adminUsername" \\\n  --authentication-type "$authenticationType" \\\n  --admin-password "$adminPasswordOrKey" \\\n  --nics "$nicName" \\\n  --generate-ssh-keys\n\n# Set up Linux configuration if authentication type is sshPublicKey\nif [ "$authenticationType" == "sshPublicKey" ]; then\n  az vm user update \\\n    --resource-group "$virtualNetworkResourceGroup" \\\n    --name "$vmName" \\\n    --username "$adminUsername" \\\n    --ssh-key-value "$adminPasswordOrKey"\nfi\n\n# Enable boot diagnostics using the storage account created earlier\nstorageUri=$(az storage account show --name "$diagStorageAccountName" --resource-group "$virtualNetworkResourceGroup" --query "primaryEndpoints.blob" --output tsv)\naz vm boot-diagnostics enable \\\n  --resource-group "$virtualNetworkResourceGroup" \\\n  --name "$vmName" \\\n  --storage "$storageUri"\n```\n\nThis script translates the provided ARM template into an equivalent Azure CLI script. It creates resources such as a virtual network, storage account, public IP address, network interface, image, and virtual machine based on the parameters provided. It also includes a conditional statement to handle the creation of a new virtual network if specified and sets up the Linux SSH configuration if the authentication type is sshPublicKey. Boot diagnostics are enabled using the storage account created for diagnostics.


verify_result
