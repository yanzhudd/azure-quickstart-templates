arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "vm-msi", "metadata": {"description": "The name of you Virtual Machine."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(concat(\'vm-msi-\', uniqueString(resourceGroup().id)))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "ubuntuOSVersion": {"type": "string", "defaultValue": "19.04", "allowedValues": ["16.04.0-LTS", "18.04-LTS", "19.04"], "metadata": {"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "VmSize": {"type": "string", "defaultValue": "Standard_B2s", "metadata": {"description": "The size of the VM"}}, "virtualNetworkName": {"type": "string", "defaultValue": "vNet", "metadata": {"description": "Name of the VNET"}}, "subnetName": {"type": "string", "defaultValue": "Subnet", "metadata": {"description": "Name of the subnet in the virtual network"}}, "networkSecurityGroupName": {"type": "string", "defaultValue": "SecGroupNet", "metadata": {"description": "Name of the Network Security Group"}}, "storageAccountResourceGroupName": {"type": "string", "metadata": {"description": "Resource group name for the storage account role assignment"}, "defaultValue": "zytest"}, "storageAccountName": {"type": "string", "metadata": {"description": "Storage account name the MSI will be given access to"}, "defaultValue": "zytest"}, "msiRole": {"type": "string", "defaultValue": "StorageBlobDataReader", "allowedValues": ["StorageBlobDataContributor", "StorageBlobDataOwner", "StorageBlobDataReader"], "metadata": {"description": "Role to assign to the MSI on the storage account"}}}, "variables": {"publicIpAddressName": "[concat(parameters(\'vmName\'), \'PublicIP\' )]", "networkInterfaceName": "[concat(parameters(\'vmName\'),\'NetInt\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "osDiskType": "StandardSSD_LRS", "subnetAddressPrefix": "10.1.0.0/24", "addressPrefix": "10.1.0.0/16", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "roleDefinitionId": {"StorageBlobDataContributor": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'ba92f5b4-2d11-453d-a403-e96b0029c9fe\')]", "StorageBlobDataOwner": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'b7e6dc6d-f1e8-4753-8033-0f276bb0955b\')]", "StorageBlobDataReader": "[subscriptionResourceId(\'Microsoft.Authorization/roleAssignments\', \'2a2b9908-6ea1-4ae2-8e65-a410df84e7d1\')]"}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2019-04-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetAddressPrefix\')]", "privateEndpointNetworkPolicies": "Enabled", "privateLinkServiceNetworkPolicies": "Enabled"}}]}}, {"type": "Microsoft.Network/publicIpAddresses", "apiVersion": "2019-02-01", "name": "[variables(\'publicIpAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIpAllocationMethod": "Dynamic", "publicIPAddressVersion": "IPv4", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}, "idleTimeoutInMinutes": 4}, "sku": {"name": "Basic", "tier": "Regional"}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-02-01", "name": "[parameters(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "SSH", "properties": {"priority": 1000, "protocol": "TCP", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "22"}}]}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2018-10-01", "name": "[variables(\'networkInterfaceName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups/\', parameters(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', parameters(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/publicIpAddresses/\', variables(\'publicIpAddressName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "privateIPAllocationMethod": "Dynamic", "publicIpAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\',parameters(\'networkSecurityGroupName\'))]"}}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2019-03-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'networkInterfaceName\'))]"], "identity": {"type": "SystemAssigned"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'VmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"osDisk": {"createOption": "fromImage", "managedDisk": {"storageAccountType": "[variables(\'osDiskType\')]"}}, "imageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "[parameters(\'ubuntuOSVersion\')]", "version": "latest"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'networkInterfaceName\'))]"}]}}}, {"type": "Microsoft.Resources/deployments", "apiVersion": "2019-09-01", "name": "assignRole", "resourceGroup": "[parameters(\'storageAccountResourceGroupName\')]", "dependsOn": ["[parameters(\'vmName\')]"], "properties": {"mode": "Incremental", "expressionEvaluationOptions": {"scope": "inner"}, "parameters": {"storageAccountResourceGroupName": {"value": "[parameters(\'storageAccountResourceGroupName\')]"}, "storageAccountName": {"value": "[parameters(\'storageAccountName\')]"}, "assignedRoleDefinitionId": {"value": "[variables(\'roleDefinitionId\')[parameters(\'msiRole\')]]"}, "principalId": {"value": "[reference(parameters(\'vmName\'),\'2019-07-01\', \'Full\').identity.principalId]"}}, "template": {"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"storageAccountResourceGroupName": {"type": "string"}, "storageAccountName": {"type": "string"}, "assignedRoleDefinitionId": {"type": "string"}, "principalId": {"type": "string"}}, "variables": {"roleName": "[guid(parameters(\'assignedRoleDefinitionId\'), parameters(\'principalId\'), parameters(\'storageAccountName\'))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts/providers/roleAssignments", "apiVersion": "2018-09-01-preview", "name": "[concat(parameters(\'storageAccountName\'), \'/Microsoft.Authorization/\', variables(\'roleName\') )]", "properties": {"roleDefinitionId": "[parameters(\'assignedRoleDefinitionId\')]", "principalId": "[parameters(\'principalId\')]", "principalType": "ServicePrincipal"}}], "outputs": {}}}}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}, "hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
'content': '#!/bin/bash\n\n# Define variables\nvmName="vm-msi"\nadminUsername="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\ndnsLabelPrefix="vm-msi-$(uuidgen | cut -c 1-5 | tr \'[:upper:]\' \'[:lower:]\')"\nubuntuOSVersion="19.04"\nlocation="westus"\nVmSize="Standard_B2s"\nvirtualNetworkName="vNet"\nsubnetName="Subnet"\nnetworkSecurityGroupName="SecGroupNet"\nstorageAccountResourceGroupName="zytest"\nstorageAccountName="zytest"\nmsiRole="StorageBlobDataReader"\n\npublicIpAddressName="${vmName}PublicIP"\nnetworkInterfaceName="${vmName}NetInt"\nsubnetRef="/subscriptions/$(az account show --query id -o tsv)/resourceGroups/$(az group show --name $storageAccountResourceGroupName --query name -o tsv)/providers/Microsoft.Network/virtualNetworks/$virtualNetworkName/subnets/$subnetName"\nosDiskType="StandardSSD_LRS"\nsubnetAddressPrefix="10.1.0.0/24"\naddressPrefix="10.1.0.0/16"\n\n# Create virtual network\naz network vnet create --name $virtualNetworkName --resource-group $storageAccountResourceGroupName --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetAddressPrefix\n\n# Create public IP address\naz network public-ip create --name $publicIpAddressName --resource-group $storageAccountResourceGroupName --location $location --allocation-method Dynamic --version IPv4 --dns-name $dnsLabelPrefix --sku Basic\n\n# Create network security group\naz network nsg create --name $networkSecurityGroupName --resource-group $storageAccountResourceGroupName --location $location\naz network nsg rule create --name SSH --nsg-name $networkSecurityGroupName --resource-group $storageAccountResourceGroupName --priority 1000 --protocol Tcp --access Allow --direction Inbound --source-address-prefix \'*\' --source-port-range \'*\' --destination-address-prefix \'*\' --destination-port-range \'22\'\n\n# Create network interface\naz network nic create --name $networkInterfaceName --resource-group $storageAccountResourceGroupName --location $location --subnet $subnetRef --public-ip-address $publicIpAddressName --network-security-group $networkSecurityGroupName\n\n# Create virtual machine\naz vm create --name $vmName --resource-group $storageAccountResourceGroupName --location $location --nics $networkInterfaceName --size $VmSize --image Canonical:UbuntuServer:$ubuntuOSVersion:latest --admin-username $adminUsername --admin-password $adminPasswordOrKey --authentication-type $authenticationType --storage-sku $osDiskType --assign-identity \'[system]\' --public-ip-address $publicIpAddressName\n\n# Assign role to the MSI on the storage account\nprincipalId=$(az vm show --name $vmName --resource-group $storageAccountResourceGroupName --query identity.principalId -o tsv)\nroleDefinitionId=$(az role definition list --name $msiRole --query [].name -o tsv)\naz role assignment create --role $roleDefinitionId --assignee $principalId --scope /subscriptions/$(az account show --query id -o tsv)/resourceGroups/$storageAccountResourceGroupName/providers/Microsoft.Storage/storageAccounts/$storageAccountName\n', 'validation_results': [], 'command_count': 4, 'gpt_model': 'GPT_4_32k'


verify_result
