arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine"}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "keyVaultResourceGroup": {"type": "string", "metadata": {"description": "Resource group of the KeyVault"}, "defaultValue": "zytest"}, "keyEncryptionKeyURL": {"type": "string", "defaultValue": "", "metadata": {"description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"}}, "volumeType": {"type": "string", "defaultValue": "All", "metadata": {"description": "Type of the volume OS or Data to perform encryption operation"}}, "forceUpdateTag": {"type": "string", "defaultValue": "1.0", "metadata": {"description": "Pass in an unique value like a GUID everytime the operation needs to be force run"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"extensionName": "AzureDiskEncryptionForLinux", "extensionVersion": "1.1", "encryptionOperation": "EnableEncryption", "keyEncryptionAlgorithm": "RSA-OAEP", "keyVaultResourceID": "[resourceId(parameters(\'keyVaultResourceGroup\'), \'Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(parameters(\'vmName\'),\'/\', variables(\'extensionName\'))]", "location": "[parameters(\'location\')]", "apiVersion": "2020-12-01", "properties": {"publisher": "Microsoft.Azure.Security", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "forceUpdateTag": "[parameters(\'forceUpdateTag\')]", "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[reference(variables(\'keyVaultResourceId\'),\'2016-10-01\').vaultUri]", "KeyVaultResourceId": "[variables(\'keyVaultResourceID\')]", "KeyEncryptionKeyURL": "[parameters(\'keyEncryptionKeyURL\')]", "KekVaultResourceId": "[if(empty(parameters(\'keyEncryptionKeyURL\')),\'\',variables(\'keyVaultResourceID\'))]", "KeyEncryptionAlgorithm": "[variables(\'keyEncryptionAlgorithm\')]", "VolumeType": "[parameters(\'volumeType\')]"}}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmName="zytest"\nkeyVaultName="zytest"\nkeyVaultResourceGroup="zytest"\nkeyEncryptionKeyURL=""\nvolumeType="All"\nforceUpdateTag="1.0"\nlocation="westus"\n\n# Define variables\nextensionName="AzureDiskEncryptionForLinux"\nextensionVersion="1.1"\nencryptionOperation="EnableEncryption"\nkeyEncryptionAlgorithm="RSA-OAEP"\nkeyVaultResourceID=$(az keyvault show --name $keyVaultName --resource-group $keyVaultResourceGroup --query id -o tsv)\n\n# Create VM extension for disk encryption\naz vm extension set \\\n  --resource-group $keyVaultResourceGroup \\\n  --vm-name $vmName \\\n  --name $extensionName \\\n  --publisher Microsoft.Azure.Security \\\n  --version $extensionVersion \\\n  --settings "{\'EncryptionOperation\':\'$encryptionOperation\', \'KeyVaultURL\':\'$(az keyvault show --name $keyVaultName --resource-group $keyVaultResourceGroup --query properties.vaultUri -o tsv)\', \'KeyVaultResourceId\':\'$keyVaultResourceID\', \'KeyEncryptionKeyURL\':\'$keyEncryptionKeyURL\', \'KekVaultResourceId\':\'$keyVaultResourceID\', \'KeyEncryptionAlgorithm\':\'$keyEncryptionAlgorithm\', \'VolumeType\':\'$volumeType\'}" \\\n  --location $location \\\n  --force-update-tag $forceUpdateTag\n```\n\nThis script first defines the parameters and variables. Then it uses the `az vm extension set` command to create a VM extension for disk encryption. The `--settings` option is used to pass in a JSON string that contains the settings for the extension. The `az keyvault show` command is used to get the resource ID and URL of the KeyVault.


verify_result
