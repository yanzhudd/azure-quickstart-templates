arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vhdUri": {"type": "string", "metadata": {"description": "Storage VHD Uri"}, "defaultValue": "zytest"}, "managedDiskName": {"type": "string", "metadata": {"description": "Name of the managed disk to be copied"}, "defaultValue": "zytest"}, "keyVaultResourceID": {"type": "string", "metadata": {"description": "KeyVault resource id. Ex: /subscriptions/subscriptionid/resourceGroups/contosorg/providers/Microsoft.KeyVault/vaults/contosovault"}, "defaultValue": "zytest"}, "keyVaultSecretUrl": {"type": "string", "metadata": {"description": "KeyVault secret Url. Ex: https://contosovault.vault.azure.net/secrets/contososecret/e088818e865e48488cf363af16dea596"}, "defaultValue": "zytest"}, "useExistingKek": {"type": "string", "defaultValue": "nokek", "allowedValues": ["nokek", "kek"], "metadata": {"description": "Select kek if the secret is encrypted with a key encryption key and pass explicit keyVaultKekUrl. For nokek, you can keep keyVaultKekUrl empty."}}, "kekUrl": {"type": "string", "defaultValue": "", "metadata": {"description": "key encryption key Url. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"}}, "kekVaultResourceID": {"type": "string", "defaultValue": "", "metadata": {"description": "key encryption key vault resource id. Ex: /subscriptions/subscriptionid/resourceGroups/contosorg/providers/Microsoft.KeyVault/vaults/contosovault"}}}, "variables": {"createDiskUrl": "[concat(\'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-create-encrypted-managed-disk/CreateEncryptedManagedDisk-\',parameters(\'useExistingKek\'),\'.json\')]"}, "resources": [{"name": "CreateEncryptedManagedDisk", "type": "Microsoft.Resources/deployments", "apiVersion": "2015-01-01", "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'createDiskUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"vhdUri": {"value": "[parameters(\'vhdUri\')]"}, "managedDiskName": {"value": "[parameters(\'managedDiskName\')]"}, "keyVaultResourceID": {"value": "[parameters(\'keyVaultResourceID\')]"}, "keyVaultSecretUrl": {"value": "[parameters(\'keyVaultSecretUrl\')]"}, "kekUrl": {"value": "[parameters(\'kekUrl\')]"}, "kekVaultResourceID": {"value": "[parameters(\'kekVaultResourceID\')]"}}}}]}


cli_script
Based on the provided JSON data, the ARM template includes a single resource of type `Microsoft.Resources/deployments` which is used to create an encrypted managed disk. The parameters for the template are provided in the `TemplateParameters` section.\n\nHere is the translation of the ARM template into an equivalent Azure CLI (bash) script:\n\n```bash\n#!/bin/bash\n\n# Define variables from the template parameters\nvhdUri="zytest"\nmanagedDiskName="zytest"\nkeyVaultResourceID="zytest"\nkeyVaultSecretUrl="zytest"\nuseExistingKek="nokek"\nkekUrl=""\nkekVaultResourceID=""\n\n# Define the URI for the nested template based on the useExistingKek parameter\nif [ "$useExistingKek" == "kek" ]; then\n  createDiskUrl="https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-create-encrypted-managed-disk/CreateEncryptedManagedDisk-kek.json"\nelse\n  createDiskUrl="https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-create-encrypted-managed-disk/CreateEncryptedManagedDisk-nokek.json"\nfi\n\n# Deploy the resource using Azure CLI\naz deployment group create \\\n  --name CreateEncryptedManagedDisk \\\n  --resource-group <ResourceGroupName> \\ # Replace <ResourceGroupName> with your actual resource group name\n  --template-uri "$createDiskUrl" \\\n  --parameters vhdUri="$vhdUri" \\\n               managedDiskName="$managedDiskName" \\\n               keyVaultResourceID="$keyVaultResourceID" \\\n               keyVaultSecretUrl="$keyVaultSecretUrl" \\\n               kekUrl="$kekUrl" \\\n               kekVaultResourceID="$kekVaultResourceID" \\\n  --mode Incremental\n```\n\nPlease replace `<ResourceGroupName>` with the actual name of the resource group where you want to deploy the resources.\n\nNote: The Azure CLI script assumes that you have the Azure CLI installed and you are logged in with an account that has the necessary permissions to create resources in the specified resource group.


verify_result
