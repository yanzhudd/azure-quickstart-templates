arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"storageAccountType": {"type": "string", "defaultValue": "Standard_LRS", "allowedValues": ["Standard_LRS", "Standard_GRS", "Standard_ZRS", "Premium_LRS"], "metadata": {"description": "Storage Account type"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"storageAccountName": "[concat(\'store\', uniquestring(resourceGroup().id))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2021-01-01", "name": "[variables(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "kind": "StorageV2", "sku": {"name": "[parameters(\'storageAccountType\')]"}}], "outputs": {"storageAccountName": {"type": "string", "value": "[variables(\'storageAccountName\')]"}}}


cli_script
Here is the equivalent CLI script for the provided ARM template:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nstorageAccountType="Standard_LRS"\nlocation="westus"\n\n# Generate a unique storage account name\nstorageAccountName=$(echo "store$(uuidgen | tr -d \'-\' | tr \'[:upper:]\' \'[:lower:]\')")\n\n# Create a storage account\naz storage account create --name $storageAccountName --location $location --kind StorageV2 --sku $storageAccountType\n\n# Output the storage account name\necho "Storage Account Name: $storageAccountName"\n```\n\nThis script first defines the parameters `storageAccountType` and `location` with their default values. Then it generates a unique `storageAccountName` by concatenating \'store\' with a UUID. The `az storage account create` command is used to create a new storage account with the specified parameters. Finally, the script outputs the name of the created storage account.


verify_result
