arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["password", "sshPublicKey"], "metadata": {"description": "Authentication type"}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "OS Admin password or SSH Key depending on value of authentication type"}, "defaultValue": "zytest"}, "location": {"type": "string", "metadata": {"description": "The Location For the resources"}, "defaultValue": "westus"}, "vmSize": {"type": "string", "metadata": {"description": "The size of the VM to create"}, "defaultValue": "Standard_D2s_v3"}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation."}, "defaultValue": ""}, "operatingSystem": {"type": "string", "defaultValue": "UbuntuServer_18.04-LTS", "metadata": {"description": "Operating system to use for the virtual machine"}, "allowedValues": ["UbuntuServer_18.04-LTS", "UbuntuServer_16.04-LTS", "WindowsServer_2016-DataCenter"]}}, "variables": {"azureCLI2DockerImage": "mcr.microsoft.com/azure-cli", "vmPrefix": "vm", "storageAccountName": "[concat(variables(\'vmPrefix\'),uniquestring(resourceGroup().id))]", "networkSecurityGroupName": "nsg", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "vmName": "[concat(variables(\'vmPrefix\'), uniquestring(resourceGroup().id))]", "virtualNetworkName": "vnet", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "containerName": "msi", "createVMUrl": "[uri(parameters(\'_artifactsLocation\'), concat(\'nestedtemplates/createVM.json\', parameters(\'_artifactsLocationSasToken\')))]", "createRBACUrl": "[uri(parameters(\'_artifactsLocation\'), concat(\'nestedtemplates/setUpRBAC.json\', parameters(\'_artifactsLocationSasToken\')))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2019-06-01", "location": "[parameters(\'Location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage", "properties": {}}, {"apiVersion": "2019-11-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'Location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"name": "[variables(\'networkSecurityGroupName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2019-11-01", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "allow-remote-access", "properties": {"priority": 1000, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "[if(contains(toLower(parameters(\'operatingSystem\')), \'windows\'), 3389, 22)]", "access": "Allow", "direction": "Inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"name": "creatingVM", "type": "Microsoft.Resources/deployments", "apiVersion": "2019-09-01", "dependsOn": ["[variables(\'virtualNetworkName\')]", "[variables(\'storageAccountName\')]", "[variables(\'networkSecurityGroupName\')]"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'createVMUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"_artifactsLocation": {"value": "[parameters(\'_artifactsLocation\')]"}, "_artifactsLocationSasToken": {"value": "[parameters(\'_artifactsLocationSasToken\')]"}, "adminPasswordOrKey": {"value": "[parameters(\'adminPasswordOrKey\')]"}, "adminUsername": {"value": "[parameters(\'adminUsername\')]"}, "authenticationType": {"value": "[parameters(\'authenticationType\')]"}, "azureCLI2DockerImage": {"value": "[variables(\'azureCLI2DockerImage\')]"}, "containerName": {"value": "[variables(\'containerName\')]"}, "operatingSystem": {"value": "[parameters(\'operatingSystem\')]"}, "location": {"value": "[parameters(\'location\')]"}, "nsgId": {"value": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}, "provisionExtensions": {"value": false}, "storageAccountId": {"value": "[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))]"}, "storageAccountName": {"value": "[variables(\'storageAccountName\')]"}, "subnetRef": {"value": "[variables(\'subnetRef\')]"}, "vmSize": {"value": "[parameters(\'vmSize\')]"}, "vmName": {"value": "[variables(\'vmName\')]"}}}}, {"name": "creatingRBAC", "type": "Microsoft.Resources/deployments", "apiVersion": "2019-09-01", "dependsOn": ["creatingVM"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'createRBACUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"principalId": {"value": "[reference(resourceId(\'Microsoft.Resources/deployments\', \'creatingVM\'), \'2019-09-01\').outputs.principalId.value]"}, "storageAccountName": {"value": "[variables(\'storageAccountName\')]"}}}}, {"name": "updatingVM", "type": "Microsoft.Resources/deployments", "apiVersion": "2019-09-01", "dependsOn": ["creatingRBAC"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'createVMUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"_artifactsLocation": {"value": "[parameters(\'_artifactsLocation\')]"}, "_artifactsLocationSasToken": {"value": "[parameters(\'_artifactsLocationSasToken\')]"}, "adminPasswordOrKey": {"value": "[parameters(\'adminPasswordOrKey\')]"}, "adminUsername": {"value": "[parameters(\'adminUsername\')]"}, "authenticationType": {"value": "[parameters(\'authenticationType\')]"}, "azureCLI2DockerImage": {"value": "[variables(\'azureCLI2DockerImage\')]"}, "containerName": {"value": "[variables(\'containerName\')]"}, "operatingSystem": {"value": "[parameters(\'operatingSystem\')]"}, "location": {"value": "[parameters(\'location\')]"}, "nsgId": {"value": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}, "provisionExtensions": {"value": true}, "storageAccountId": {"value": "[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))]"}, "storageAccountName": {"value": "[variables(\'storageAccountName\')]"}, "subnetRef": {"value": "[variables(\'subnetRef\')]"}, "vmSize": {"value": "[parameters(\'vmSize\')]"}, "vmName": {"value": "[variables(\'vmName\')]"}}}}]}


cli_script
'content': '#!/bin/bash\n\n# Define parameters\nadminUsername="zytest"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nlocation="westus"\nvmSize="Standard_D2s_v3"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\noperatingSystem="UbuntuServer_18.04-LTS"\n\n# Define variables\nazureCLI2DockerImage="mcr.microsoft.com/azure-cli"\nvmPrefix="vm"\nstorageAccountName="${vmPrefix}$(az group show --name ${resourceGroupName} --query id -o tsv | shasum | cut -c1-10)"\nnetworkSecurityGroupName="nsg"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nvmName="${vmPrefix}$(az group show --name ${resourceGroupName} --query id -o tsv | shasum | cut -c1-10)"\nvirtualNetworkName="vnet"\ncontainerName="msi"\n\n# Create storage account\naz storage account create --name $storageAccountName --location $location --sku Standard_LRS --kind Storage\n\n# Create virtual network\naz network vnet create --name $virtualNetworkName --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetPrefix\n\n# Create network security group\naz network nsg create --name $networkSecurityGroupName --location $location\n\n# Add security rule to the network security group\nif [[ $operatingSystem == *"windows"* ]]; then\n    destinationPortRange=3389\nelse\n    destinationPortRange=22\nfi\naz network nsg rule create --nsg-name $networkSecurityGroupName --name allow-remote-access --priority 1000 --source-address-prefixes \'*\' --destination-port-ranges $destinationPortRange --access Allow --protocol Tcp --direction Inbound\n\n# Create VM\naz vm create --name $vmName --location $location --admin-username $adminUsername --authentication-type $authenticationType --admin-password-or-key $adminPasswordOrKey --size $vmSize --image $operatingSystem --vnet-name $virtualNetworkName --subnet $subnetName --nsg $networkSecurityGroupName --storage-sku Standard_LRS\n\n# Assign RBAC role to the VM\nprincipalId=$(az vm show --name $vmName --query identity.principalId -o tsv)\naz role assignment create --assignee $principalId --role "Contributor"\n\n# Update VM\naz vm update --name $vmName --admin-username $adminUsername --authentication-type $authenticationType --admin-password-or-key $adminPasswordOrKey --size $vmSize --image $operatingSystem --vnet-name $virtualNetworkName --subnet $subnetName --nsg $networkSecurityGroupName --storage-sku Standard_LRS', 'validation_results': [{'command': 'az storage account create --name $storageAccountName --location $location --sku Standard_LRS --kind Storage', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az network vnet create --name $virtualNetworkName --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetPrefix', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az network nsg create --name $networkSecurityGroupName --location $location', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'the following arguments are required: --resource-group/-g '}, {'command': 'az vm create --name $vmName --location $location --admin-username $adminUsername --authentication-type $authenticationType --admin-password-or-key $adminPasswordOrKey --size $vmSize --image $operatingSystem --vnet-name $virtualNetworkName --subnet $subnetName --nsg $networkSecurityGroupName --storage-sku Standard_LRS', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'unrecognized arguments: --admin-password-or-key $adminPasswordOrKey'}, {'command': 'az vm update --name $vmName --admin-username $adminUsername --authentication-type $authenticationType --admin-password-or-key $adminPasswordOrKey --size $vmSize --image $operatingSystem --vnet-name $virtualNetworkName --subnet $subnetName --nsg $networkSecurityGroupName --storage-sku Standard_LRS', 'is_valid': False, 'cmd_source': 'CommandSource.CORE_MODULE', 'validated_param': True, 'error_message': 'unrecognized arguments: --admin-username $adminUsername --authentication-type $authenticationType --admin-password-or-key $adminPasswordOrKey --image $operatingSystem --vnet-name $virtualNetworkName --subnet $subnetName --nsg $networkSecurityGroupName --storage-sku Standard_LRS'}], 'command_count': 5, 'gpt_model': 'GPT_4_32k'


verify_result
