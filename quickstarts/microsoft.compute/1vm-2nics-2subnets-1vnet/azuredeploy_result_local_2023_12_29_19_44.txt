arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.5.6.12127", "templateHash": "13701565265914879608"}}, "parameters": {"virtualMachineSize": {"type": "string", "defaultValue": "Standard_DS1_v2", "metadata": {"description": "Virtual machine size (has to be at least the size of Standard_A3 to support 2 NICs)"}}, "adminUsername": {"type": "string", "metadata": {"description": "Default Admin username"}, "defaultValue": "zytest"}, "adminPassword": {"type": "secureString", "metadata": {"description": "Default Admin password"}, "defaultValue": "zytest"}, "storageAccountType": {"type": "string", "defaultValue": "Standard_LRS", "allowedValues": ["Standard_LRS", "Premium_LRS"], "metadata": {"description": "Storage Account type for the VM and VM diagnostic storage"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"virtualMachineName": "VM-MultiNic", "nic1Name": "nic-1", "nic2Name": "nic-2", "virtualNetworkName": "virtualNetwork", "subnet1Name": "subnet-1", "subnet2Name": "subnet-2", "publicIPAddressName": "publicIp", "diagStorageAccountName": "[format(\'diags{0}\', uniqueString(resourceGroup().id))]", "networkSecurityGroupName": "NSG", "networkSecurityGroupName2": "[format(\'{0}-nsg\', variables(\'subnet2Name\'))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2020-06-01", "name": "[variables(\'virtualMachineName\')]", "location": "[parameters(\'location\')]", "properties": {"osProfile": {"computerName": "[variables(\'virtualMachineName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "windowsConfiguration": {"provisionVMAgent": true}}, "hardwareProfile": {"vmSize": "[parameters(\'virtualMachineSize\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2019-Datacenter", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"properties": {"primary": true}, "id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic1Name\'))]"}, {"properties": {"primary": false}, "id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic2Name\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'diagStorageAccountName\'))).primaryEndpoints.blob]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'diagStorageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic1Name\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nic2Name\'))]"]}, {"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2019-06-01", "name": "[variables(\'diagStorageAccountName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[parameters(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-06-01", "name": "[variables(\'networkSecurityGroupName2\')]", "location": "[parameters(\'location\')]"}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-06-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnet1Name\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}, {"name": "[variables(\'subnet2Name\')]", "properties": {"addressPrefix": "10.0.1.0/24", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName2\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName2\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-06-01", "name": "[variables(\'nic1Name\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnet1Name\'))]"}, "privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-06-01", "name": "[variables(\'nic2Name\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnet2Name\'))]"}, "privateIPAllocationMethod": "Dynamic"}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-06-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic"}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-06-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-rdp", "properties": {"priority": 1000, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "3389", "access": "Allow", "direction": "Inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}]}


cli_script
Based on the provided ARM template and parameters, here is the equivalent Azure CLI bash script:\n\n```bash\n#!/bin/bash\n\n# Define template parameters as variables\nvirtualMachineSize="Standard_DS1_v2"\nadminUsername="zytest"\nadminPassword="zytest" # Please replace with a secure way to handle passwords, such as using Key Vault\nstorageAccountType="Standard_LRS"\nlocation="westus"\n\n# Define variables from ARM template\nvirtualMachineName="VM-MultiNic"\nnic1Name="nic-1"\nnic2Name="nic-2"\nvirtualNetworkName="virtualNetwork"\nsubnet1Name="subnet-1"\nsubnet2Name="subnet-2"\npublicIPAddressName="publicIp"\n# The diagStorageAccountName is dynamically generated using a unique string in the ARM template, which is not directly translatable to a bash script\n# You would need to generate a unique name for the storage account in your bash script, or predefine it\ndiagStorageAccountName="diags$(uuidgen | tr \'[:upper:]\' \'[:lower:]\' | sed \'s/-//g\')"\nnetworkSecurityGroupName="NSG"\nnetworkSecurityGroupName2="${subnet2Name}-nsg"\n\n# Create a network security group for NIC2\naz network nsg create --name "$networkSecurityGroupName2" --location "$location"\n\n# Create a virtual network with two subnets\naz network vnet create --name "$virtualNetworkName" --location "$location" --address-prefix "10.0.0.0/16" \\\n    --subnet-name "$subnet1Name" --subnet-prefix "10.0.0.0/24"\n\naz network vnet subnet create --name "$subnet2Name" --vnet-name "$virtualNetworkName" --address-prefix "10.0.1.0/24" \\\n    --network-security-group "$networkSecurityGroupName2"\n\n# Create a public IP address\naz network public-ip create --name "$publicIPAddressName" --location "$location"\n\n# Create a network security group for NIC1\naz network nsg create --name "$networkSecurityGroupName" --location "$location"\n\n# Add a security rule to allow RDP\naz network nsg rule create --nsg-name "$networkSecurityGroupName" --name "default-allow-rdp" --priority 1000 \\\n    --source-address-prefixes "*" --protocol Tcp --destination-port-ranges 3389 --access Allow --direction Inbound \\\n    --source-port-ranges "*" --destination-address-prefixes "*"\n\n# Create network interfaces\naz network nic create --name "$nic1Name" --location "$location" --vnet-name "$virtualNetworkName" \\\n    --subnet "$subnet1Name" --public-ip-address "$publicIPAddressName" --network-security-group "$networkSecurityGroupName"\n\naz network nic create --name "$nic2Name" --location "$location" --vnet-name "$virtualNetworkName" \\\n    --subnet "$subnet2Name"\n\n# Create a storage account for diagnostics\naz storage account create --name "$diagStorageAccountName" --location "$location" --sku "$storageAccountType" --kind "StorageV2"\n\n# Retrieve the storage account blob endpoint\nstorageAccountBlobEndpoint=$(az storage account show --name "$diagStorageAccountName" --query "primaryEndpoints.blob" --output tsv)\n\n# Create a virtual machine\naz vm create --name "$virtualMachineName" --location "$location" --nics "$nic1Name" "$nic2Name" \\\n    --size "$virtualMachineSize" --admin-username "$adminUsername" --admin-password "$adminPassword" \\\n    --image "MicrosoftWindowsServer:WindowsServer:2019-Datacenter:latest" --storage-sku "$storageAccountType" \\\n    --boot-diagnostics-storage "$diagStorageAccountName"\n\n# Note: The diagnosticsProfile property is not directly supported by the az vm create command.\n# The boot diagnostics storage is set by specifying the storage account name with the --boot-diagnostics-storage parameter.\n```\n\nPlease note that the `adminPassword` should be handled securely. In this script, it is directly written which is not recommended for production use. Instead, consider using Azure Key Vault or another secure method to manage sensitive information. Additionally, the `diagStorageAccountName` generation in the ARM template uses a unique string function that is not directly available in bash, so I used `uuidgen` to simulate a unique name generation. Adjust as needed for your use case.


verify_result
