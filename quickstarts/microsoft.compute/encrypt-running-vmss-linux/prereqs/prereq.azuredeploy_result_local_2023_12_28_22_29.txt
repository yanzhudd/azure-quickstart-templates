arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Name of existing VM Scale Set"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"namingInfix": "existingvmss", "existingVmssName": "existingvmss", "virtualNetworkName": "[concat(variables(\'namingInfix\'), \'vnet\')]", "publicIPAddressName": "[concat(variables(\'namingInfix\'), \'pip\')]", "subnetName": "[concat(variables(\'namingInfix\'), \'subnet\')]", "loadBalancerName": "[concat(variables(\'namingInfix\'), \'lb\')]", "natPoolName": "[concat(variables(\'namingInfix\'), \'natpool\')]", "bePoolName": "[concat(variables(\'namingInfix\'), \'bepool\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2021-02-01", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2021-02-01", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[toLower(substring(concat(variables(\'existingVmssName\'), uniqueString(resourceGroup().id)), 0, 16))]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2021-02-01", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50119, "backendPort": 3389}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[variables(\'existingVmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2021-04-01", "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "sku": {"name": "Standard_D2_v3", "tier": "Standard", "capacity": 2}, "properties": {"overprovision": true, "upgradePolicy": {"mode": "Automatic"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage"}, "imageReference": {"publisher": "RedHat", "offer": "RHEL", "sku": "7.5", "version": "latest"}}, "osProfile": {"computerNamePrefix": "existvmss", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[concat(variables(\'namingInfix\'), \'nic\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[concat(variables(\'namingInfix\'), \'ipconfig\')]", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'loadBalancerName\'), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'loadBalancerName\'), variables(\'natPoolName\'))]"}]}}]}}]}}}}], "outputs": {"existingVmssName": {"type": "string", "value": "[variables(\'existingVmssName\')]"}}}


cli_script
Below is the translated bash script of the provided ARM template and template parameters into Azure CLI commands:\n\n```bash\n#!/bin/bash\n\n# Assign the parameters to variables\nadminUsername="zytest"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Define variables based on the ARM template\'s variables\nnamingInfix="existingvmss"\nexistingVmssName="existingvmss"\nvirtualNetworkName="${namingInfix}vnet"\npublicIPAddressName="${namingInfix}pip"\nsubnetName="${namingInfix}subnet"\nloadBalancerName="${namingInfix}lb"\nnatPoolName="${namingInfix}natpool"\nbePoolName="${namingInfix}bepool"\n\n# Create the Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefixes "10.0.0.0/16" \\\n    --subnet-name $subnetName \\\n    --subnet-prefix "10.0.0.0/24"\n\n# Create the Public IP Address\nuniqueDnsName=$(az network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --query \'publicIp.dnsSettings.domainNameLabel\' \\\n    --output tsv)\n\n# Create the Load Balancer\naz network lb create \\\n    --name $loadBalancerName \\\n    --location $location \\\n    --frontend-ip-name LoadBalancerFrontEnd \\\n    --public-ip-address $publicIPAddressName \\\n    --backend-pool-name $bePoolName\n\n# Create an Inbound NAT pool for the Load Balancer\naz network lb inbound-nat-pool create \\\n    --lb-name $loadBalancerName \\\n    --name $natPoolName \\\n    --protocol tcp \\\n    --frontend-port-range-start 50000 \\\n    --frontend-port-range-end 50119 \\\n    --backend-port 3389 \\\n    --frontend-ip-name LoadBalancerFrontEnd\n\n# Create the VM Scale Set\nsshKeyPath="/home/$adminUsername/.ssh/authorized_keys"\nif [ "$authenticationType" == "sshPublicKey" ]; then\n  linuxConfiguration=\'{"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "\'$sshKeyPath\'", "keyData": "\'$adminPasswordOrKey\'"}]}}\'\nelse\n  linuxConfiguration=null\nfi\n\naz vmss create \\\n    --name $existingVmssName \\\n    --location $location \\\n    --vm-sku Standard_D2_v3 \\\n    --instance-count 2 \\\n    --upgrade-policy-mode Automatic \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --admin-password $adminPasswordOrKey \\\n    --image "RedHat:RHEL:7.5:latest" \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --lb $loadBalancerName \\\n    --backend-pool-name $bePoolName \\\n    --nat-pool $natPoolName \\\n    --linux-configuration "$linuxConfiguration"\n\n# Output the name of the VM Scale Set\necho "Existing VMSS Name: $existingVmssName"\n```\n\nPlease note that the script assumes that the Azure CLI is already logged in and has the necessary permissions to create resources in the specified subscription and resource group. The `uniqueDnsName` variable is used to store the result of the DNS name label creation for the public IP address, which is needed for the load balancer\'s frontend configuration. The `authenticationType` is checked to determine whether to use SSH keys or a password for the VM scale set.


verify_result
