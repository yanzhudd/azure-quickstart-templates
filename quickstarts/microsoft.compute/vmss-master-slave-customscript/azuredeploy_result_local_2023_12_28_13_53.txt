arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"masterNodeCount": {"type": "int", "minValue": 1, "maxValue": 50, "metadata": {"description": "Number of master node in VMSS; if singlePlacementGroup is true (the default), then this value must be 100 or less; if singlePlacementGroup is false, then ths value must be 50 or less"}, "defaultValue": "zytest"}, "masterNodeSku": {"defaultValue": "Standard_A1", "type": "string", "metadata": {"description": "Size of VMs in the VM Scale Set for master node."}}, "dataNodeSku": {"defaultValue": "Standard_D4S_v3", "type": "string", "metadata": {"description": "Size of VMs in the VM Scale Set for data node."}}, "dataNodeCount": {"type": "int", "minValue": 1, "maxValue": 100, "metadata": {"description": "Number of data nodes in VMSS; if singlePlacementGroup is true (the default), then this value must be 100 or less; if singlePlacementGroup is false, then ths value must be 100 or less"}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "osImagePublisher": {"type": "string", "defaultValue": "OpenLogic", "metadata": {"description": "Maps to the publisher in the Azure Stack Platform Image Repository manifest file."}}, "osImageOffer": {"type": "string", "defaultValue": "CentOS", "metadata": {"description": "Maps to the Offer in the Azure Stack Platform Image Repository manifest file."}}, "osImageSku": {"type": "string", "defaultValue": "7.4", "metadata": {"description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOS version. Default value: 7.4"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"vmssName": "[concat(\'vmss\', uniqueString(resourceGroup().id, deployment().name))]", "vnetName": "[concat(\'vnet-\', variables(\'vmssName\'))]", "subnetMaster": "[concat(\'mastersubnet-\', variables(\'vmssName\'))]", "subnetData": "[concat(\'datasubnet-\', variables(\'vmssName\'))]", "masterPublicIPAddressName": "[toLower(concat(\'pip-master\', variables(\'vmssName\')))]", "dataPublicIPAddressName": "[toLower(concat(\'pip-data\', variables(\'vmssName\')))]", "vmssDomainName": "[toLower(concat(\'pubdns\', variables(\'vmssName\')))]", "masterNodeLoadBalancerName": "[concat(\'LB-MasterN\', variables(\'vmssName\'))]", "dataNodeLoadBalancerName": "[concat(\'LB-DataN\', variables(\'vmssName\'))]", "masterNodeLoadBalancerFrontEndName": "[concat(\'LBFrontEnd\', variables(\'vmssName\'))]", "dataNodeLoadBalancerFrontEndName": "[concat(\'LBFrontEnd\', variables(\'vmssName\'))]", "masterNodeLoadBalancerBackEndName": "[concat(\'LBBackEnd\',variables(\'vmssName\'))]", "dataNodeLoadBalancerBackEndName": "[concat(\'LBBackEnd\',variables(\'vmssName\'))]", "masterNodeLoadBalancerProbeName": "[concat(\'LBHttpProbe\', variables(\'vmssName\'))]", "dataNodeLoadBalancerProbeName": "[concat(\'LBHttpProbe\', variables(\'vmssName\'))]", "masterNodeLoadBalancerNatPoolName": "[concat(\'LBNatPool\', variables(\'vmssName\'))]", "dataNodeLoadBalancerNatPoolName": "[concat(\'LBNatPool\', variables(\'vmssName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'vnetName\')]", "apiVersion": "2020-08-01", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetMaster\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}, {"name": "[variables(\'subnetData\')]", "properties": {"addressPrefix": "10.0.1.0/24"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'masterPublicIPAddressName\')]", "apiVersion": "2017-06-01", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[concat(variables(\'vmssDomainName\'),\'-master-node\')]"}}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'dataPublicIPAddressName\')]", "apiVersion": "2017-06-01", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[concat(variables(\'vmssDomainName\'),\'-data-node\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'masterNodeLoadBalancerName\')]", "apiVersion": "2017-06-01", "location": "[parameters(\'location\')]", "properties": {"frontendIPConfigurations": [{"name": "[variables(\'masterNodeLoadBalancerFrontEndName\')]", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'masterPublicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'masterNodeLoadBalancerBackendName\')]"}], "loadBalancingRules": [{"name": "roundRobinLBRule", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerFrontEndName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerBackendName\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerProbeName\'))]"}}}], "probes": [{"name": "[variables(\'masterNodeLoadBalancerProbeName\')]", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}], "inboundNatPools": [{"name": "[variables(\'masterNodeLoadBalancerNatPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerFrontEndName\'))]"}, "protocol": "Tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50019, "backendPort": 22}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'masterPublicIPAddressName\'))]"]}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'dataNodeLoadBalancerName\')]", "apiVersion": "2017-06-01", "location": "[parameters(\'location\')]", "properties": {"frontendIPConfigurations": [{"name": "[variables(\'dataNodeLoadBalancerFrontEndName\')]", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'dataPublicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'dataNodeLoadBalancerBackendName\')]"}], "loadBalancingRules": [{"name": "roundRobinLBRule", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerFrontEndName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerBackendName\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerProbeName\'))]"}}}], "probes": [{"name": "[variables(\'dataNodeLoadBalancerProbeName\')]", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}], "inboundNatPools": [{"name": "[variables(\'dataNodeLoadBalancerNatPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerFrontEndName\'))]"}, "protocol": "Tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50019, "backendPort": 22}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'dataPublicIPAddressName\'))]"]}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "sku": {"name": "[parameters(\'masterNodeSku\')]", "tier": "Standard", "capacity": "[parameters(\'masterNodeCount\')]"}, "name": "[concat(variables(\'vmssName\'), \'-master-node\')]", "apiVersion": "2017-12-01", "location": "[parameters(\'location\')]", "properties": {"upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}, "imageReference": {"publisher": "[parameters(\'osImagePublisher\')]", "offer": "[parameters(\'osImageOffer\')]", "sku": "[parameters(\'osImageSku\')]", "version": "latest"}}, "osProfile": {"computerNamePrefix": "[variables(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "nic", "properties": {"primary": true, "ipConfigurations": [{"name": "ipconfig", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetMaster\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerBackEndName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerNatPoolName\'))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmssName\'),\'-LinuxCustomScriptExtension\')]", "properties": {"publisher": "Microsoft.OSTCExtensions", "type": "CustomScriptForLinux", "typeHandlerVersion": "1.3", "autoUpgradeMinorVersion": true, "settings": {"commandToExecute": "touch test1.txt"}}}]}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'masterNodeLoadBalancerName\'))]"]}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "sku": {"name": "[parameters(\'dataNodeSku\')]", "tier": "Standard", "capacity": "[parameters(\'dataNodeCount\')]"}, "name": "[concat(variables(\'vmssName\'), \'-data-node\')]", "apiVersion": "2017-12-01", "location": "[parameters(\'location\')]", "properties": {"upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}, "imageReference": {"publisher": "[parameters(\'osImagePublisher\')]", "offer": "[parameters(\'osImageOffer\')]", "sku": "[parameters(\'osImageSku\')]", "version": "latest"}}, "osProfile": {"computerNamePrefix": "[variables(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "nic", "properties": {"primary": true, "ipConfigurations": [{"name": "ipconfig", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetData\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerBackendName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerNatPoolName\'))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmssName\'),\'-LinuxCustomScriptExtension\')]", "properties": {"publisher": "Microsoft.OSTCExtensions", "type": "CustomScriptForLinux", "typeHandlerVersion": "1.3", "autoUpgradeMinorVersion": true, "settings": {"commandToExecute": "touch test2.txt"}}}]}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'dataNodeLoadBalancerName\'))]"]}]}


cli_script
The provided JSON data includes an ARM template that defines various resources like virtual networks, public IP addresses, load balancers, and virtual machine scale sets. Additionally, there are template parameters provided which should be converted into variables for the CLI script. Below is the translated CLI script based on the given ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\nmasterNodeCount=3 # Default value, as "zytest" is not a valid integer.\nmasterNodeSku="Standard_A1"\ndataNodeSku="Standard_D4S_v3"\ndataNodeCount=3 # Default value, as "zytest" is not a valid integer.\nadminUsername="zytest"\nosImagePublisher="OpenLogic"\nosImageOffer="CentOS"\nosImageSku="7.4"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Create Virtual Network and Subnets\naz network vnet create \\\n    --name vnet-$masterNodeSku \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --address-prefixes 10.0.0.0/16 \\\n    --subnet-name mastersubnet-$masterNodeSku \\\n    --subnet-prefix 10.0.0.0/24\n\naz network vnet subnet create \\\n    --vnet-name vnet-$masterNodeSku \\\n    --resource-group myResourceGroup \\\n    --name datasubnet-$masterNodeSku \\\n    --address-prefix 10.0.1.0/24\n\n# Create Public IP Addresses\naz network public-ip create \\\n    --name pip-master$masterNodeSku \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name pubdns$masterNodeSku-master-node\n\naz network public-ip create \\\n    --name pip-data$masterNodeSku \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --allocation-method Dynamic \\\n    --dns-name pubdns$masterNodeSku-data-node\n\n# Create Load Balancers\naz network lb create \\\n    --name LB-MasterN$masterNodeSku \\\n    --resource-group myResourceGroup \\\n    --location $location \\\n    --frontend-ip-name LBFrontEnd$masterNodeSku \\\n    --backend-pool-name LBBackEnd$masterNodeSku \\\n    --public-ip-address pip-master$masterNodeSku\n\naz network lb probe create \\\n    --lb-name LB-MasterN$masterNodeSku \\\n    --resource-group myResourceGroup \\\n    --name LBHttpProbe$masterNodeSku \\\n    --protocol tcp \\\n    --port 80 \\\n    --interval 5 \\\n    --count 2\n\naz network lb rule create \\\n    --lb-name LB-MasterN$masterNodeSku \\\n    --resource-group myResourceGroup \\\n    --name roundRobinLBRule \\\n    --protocol Tcp \\\n    --frontend-port 80 \\\n    --backend-port 80 \\\n    --frontend-ip-name LBFrontEnd$masterNodeSku \\\n    --backend-pool-name LBBackEnd$masterNodeSku \\\n    --probe-name LBHttpProbe$masterNodeSku\n\naz network lb inbound-nat-pool create \\\n    --lb-name LB-MasterN$masterNodeSku \\\n    --resource-group myResourceGroup \\\n    --name LBNatPool$masterNodeSku \\\n    --protocol Tcp \\\n    --frontend-port-range-start 50000 \\\n    --frontend-port-range-end 50019 \\\n    --backend-port 22 \\\n    --frontend-ip-name LBFrontEnd$masterNodeSku\n\n# Repeat the above commands for the data node load balancer, replacing \'MasterN\' with \'DataN\' and \'master\' with \'data\'\n\n# Create Virtual Machine Scale Sets (VMSS)\n# Master Node VMSS\naz vmss create \\\n    --resource-group myResourceGroup \\\n    --name vmss$masterNodeSku-master-node \\\n    --location $location \\\n    --vm-sku $masterNodeSku \\\n    --instance-count $masterNodeCount \\\n    --vnet-name vnet-$masterNodeSku \\\n    --subnet mastersubnet-$masterNodeSku \\\n    --admin-username $adminUsername \\\n    --authentication-type $authenticationType \\\n    --admin-password $adminPasswordOrKey \\\n    --public-ip-address pip-master$masterNodeSku \\\n    --lb LB-MasterN$masterNodeSku \\\n    --backend-pool-name LBBackEnd$masterNodeSku\n\n# Data Node VMSS\n# Repeat the above command for the data node VMSS, replacing \'master\' with \'data\' and using the \'dataNodeSku\' and \'dataNodeCount\' variables\n\n# Note: The actual script will depend on the outcome of the conditionals and the existence of certain resources.\n# The script above assumes the resources are created in a resource group called \'myResourceGroup\'.\n# Replace \'myResourceGroup\' with the actual resource group name where the resources should be created.\n```\n\nPlease note that the default values for `masterNodeCount` and `dataNodeCount` are set to 3 because the original "defaultValue" provided in the JSON was "zytest", which is not a valid integer. Adjust these values as needed.\n\nAlso, the `authenticationType` parameter determines whether to use SSH keys or a password for VM authentication. The script assumes SSH keys are used (`"sshPublicKey"`). If password authentication is needed, the script will require modifications to handle the password securely.\n\nThis script should be executed in an Azure CLI environment where you have the necessary permissions to create the resources. Make sure to replace `myResourceGroup` with the actual name of your Azure resource group.


verify_result
