arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "freeBSDOSVersion": {"type": "string", "defaultValue": "12.0", "allowedValues": ["12.0", "11.2", "11.1", "11.0", "10.4", "10.3"], "metadata": {"description": "The FreeBSD version for the VM. This will pick a fully patched image of this given FreeBSD version."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "Size of the virtual machine."}}}, "variables": {"storageAccountName": "[concat(uniquestring(resourceGroup().id), \'safreebsdvm\')]", "imagePublisher": "MicrosoftOSTC", "imageOffer": "FreeBSD", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "storageAccountType": "Standard_LRS", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "vmName": "MyFreeBSDVM", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2", "properties": {}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'freeBSDOSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": 1023, "lun": 0, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\')), \'2020-08-01-preview\').primaryEndpoints[\'blob\']]"}}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}, "sshCommand": {"type": "string", "value": "[concat(\'ssh \', parameters(\'adminUsername\'), \'@\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nadminUsername="zytest"\ndnsLabelPrefix="zytest"\nfreeBSDOSVersion="12.0"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nvmSize="Standard_A1_v2"\n\n# Create a resource group\naz group create --name myResourceGroup --location $location\n\n# Create a storage account\naz storage account create --name safreebsdvm --resource-group myResourceGroup --location $location --sku Standard_LRS --kind StorageV2\n\n# Create a public IP address\naz network public-ip create --name myPublicIP --resource-group myResourceGroup --location $location --dns-name $dnsLabelPrefix --allocation-method Dynamic\n\n# Create a network security group\naz network nsg create --name Subnet-nsg --resource-group myResourceGroup --location $location\n\n# Create a virtual network\naz network vnet create --name MyVNET --resource-group myResourceGroup --location $location --address-prefix 10.0.0.0/16 --subnet-name Subnet --subnet-prefix 10.0.0.0/24 --network-security-group Subnet-nsg\n\n# Create a network interface\naz network nic create --name myVMNic --resource-group myResourceGroup --location $location --subnet Subnet --public-ip-address myPublicIP --vnet-name MyVNET\n\n# Create a virtual machine\naz vm create --name MyFreeBSDVM --resource-group myResourceGroup --location $location --nics myVMNic --image MicrosoftOSTC:FreeBSD:$freeBSDOSVersion:latest --admin-username $adminUsername --admin-password $adminPasswordOrKey --size $vmSize --storage-account safreebsdvm --generate-ssh-keys\n\n# Get the public IP address of the VM\npublicIp=$(az network public-ip show --name myPublicIP --resource-group myResourceGroup --query [ipAddress] --output tsv)\n\n# Output the ssh command to connect to the VM\necho "ssh $adminUsername@$publicIp"\n```\n\nThis script first defines the parameters, then creates a resource group, a storage account, a public IP address, a network security group, a virtual network, a network interface, and a virtual machine. Finally, it outputs the ssh command to connect to the VM.


verify_result
