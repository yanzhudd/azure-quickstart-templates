arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.17.1.54307", "templateHash": "13045471063543149627"}}, "parameters": {"storagename": {"type": "string", "defaultValue": "[format(\'storage{0}\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Storage Account name"}}, "vm_dns": {"type": "string", "defaultValue": "[format(\'winssh-{0}\', uniqueString(resourceGroup().id))]", "metadata": {"description": "VM DNS label prefix"}}, "adminUser": {"type": "string", "metadata": {"description": "Admin user for VM"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "defaultValue": "[newGuid()]"}, "publicSshKey": {"type": "string", "metadata": {"description": "Your public SSH key"}, "defaultValue": "zytest"}, "vmsize": {"type": "string", "defaultValue": "Standard_D4s_v5", "metadata": {"description": "VM size for VM"}}, "vmSku": {"type": "string", "defaultValue": "2022-datacenter-core-smalldisk-g2", "allowedValues": ["2019-datacenter-core-g2", "2019-datacenter-core-smalldisk-g2", "2022-datacenter-core-g2", "2022-datacenter-core-smalldisk-g2", "2022-datacenter-azure-edition-core", "2022-datacenter-azure-edition-core-smalldisk"], "metadata": {"description": "SKU of the Windows Server"}}, "diskSku": {"type": "string", "defaultValue": "StandardSSD_LRS", "allowedValues": ["Standard_LRS", "StandardSSD_LRS", "Premium_LRS"], "metadata": {"description": "SKU of the attached data disk (Standard HDD, Standard SSD or Premium SSD)"}}, "diskSizeGB": {"type": "int", "defaultValue": 256, "metadata": {"description": "Size of the attached data disk in GB"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Deployment location"}}, "_artifactsLocation": {"type": "string", "defaultValue": "[deployment().properties.templateLink.uri]", "metadata": {"description": "The base URI where artifacts required by this template are located including a trailing \'/\'"}}, "_artifactsLocationSasToken": {"type": "securestring", "defaultValue": "", "metadata": {"description": "SAS Token for accessing script path"}}, "secureBoot": {"type": "bool", "defaultValue": true, "metadata": {"description": "Secure Boot setting of the virtual machine."}}, "vTPM": {"type": "bool", "defaultValue": true, "metadata": {"description": "vTPM setting of the virtual machine."}}}, "variables": {"vmName": "sshhost", "extensionName": "GuestAttestation", "extensionPublisher": "Microsoft.Azure.Security.WindowsAttestation", "extensionVersion": "1.0", "maaTenantName": "GuestAttestation", "initScriptUrl": "[uri(parameters(\'_artifactsLocation\'), format(\'initialize.ps1{0}\', parameters(\'_artifactsLocationSasToken\')))]", "sshdConfigUrl": "[uri(parameters(\'_artifactsLocation\'), format(\'configs/sshd_config_wopwd{0}\', parameters(\'_artifactsLocationSasToken\')))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2021-06-01", "name": "[toLower(parameters(\'storagename\'))]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage", "tags": {"displayName": "Storage account"}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-11-01", "name": "publicIP", "location": "[parameters(\'location\')]", "tags": {"displayName": "PublicIPAddress"}, "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'vm_dns\')]"}}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-04-01", "name": "nsg", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "rdp", "properties": {"description": "description", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "3389", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Deny", "priority": 100, "direction": "Inbound"}}, {"name": "ssh", "properties": {"description": "description", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "22", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 110, "direction": "Inbound"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-04-01", "name": "virtualNetwork", "location": "[parameters(\'location\')]", "tags": {"displayName": "Virtual Network"}, "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "subnet", "properties": {"addressPrefix": "10.0.0.0/24", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', \'nsg\')]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', \'nsg\')]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-04-01", "name": "nic", "location": "[parameters(\'location\')]", "tags": {"displayName": "Network Interface"}, "properties": {"ipConfigurations": [{"name": "ipConfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', \'publicIP\')]"}, "subnet": {"id": "[reference(resourceId(\'Microsoft.Network/virtualNetworks\', \'virtualNetwork\'), \'2020-04-01\').subnets[0].id]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', \'publicIP\')]", "[resourceId(\'Microsoft.Network/virtualNetworks\', \'virtualNetwork\')]"]}, {"type": "Microsoft.Compute/disks", "apiVersion": "2020-09-30", "name": "datadisk", "location": "[parameters(\'location\')]", "properties": {"diskSizeGB": "[parameters(\'diskSizeGB\')]", "creationData": {"createOption": "Empty"}}, "sku": {"name": "[parameters(\'diskSku\')]"}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2021-07-01", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "Windows Server with SSH"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmsize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUser\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'vmSku\')]", "version": "latest"}, "osDisk": {"name": "osdisk", "caching": "ReadWrite", "createOption": "FromImage"}, "dataDisks": [{"createOption": "Attach", "lun": 0, "managedDisk": {"id": "[resourceId(\'Microsoft.Compute/disks\', \'datadisk\')]"}}]}, "securityProfile": {"uefiSettings": {"secureBootEnabled": "[parameters(\'secureBoot\')]", "vTpmEnabled": "[parameters(\'vTPM\')]"}, "securityType": "TrustedLaunch"}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', \'nic\')]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', toLower(parameters(\'storagename\'))), \'2021-06-01\').primaryEndpoints.blob]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/disks\', \'datadisk\')]", "[resourceId(\'Microsoft.Network/networkInterfaces\', \'nic\')]", "[resourceId(\'Microsoft.Storage/storageAccounts\', toLower(parameters(\'storagename\')))]"]}, {"condition": "[and(parameters(\'vTPM\'), parameters(\'secureBoot\'))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2022-03-01", "name": "[format(\'{0}/{1}\', variables(\'vmName\'), \'GuestAttestation\')]", "location": "[parameters(\'location\')]", "properties": {"publisher": "[variables(\'extensionPublisher\')]", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "enableAutomaticUpgrade": true, "settings": {"AttestationConfig": {"MaaSettings": {"maaEndpoint": "", "maaTenantName": "[variables(\'maaTenantName\')]"}, "AscSettings": {"ascReportingEndpoint": "", "ascReportingFrequency": ""}, "useCustomToken": "false", "disableAlerts": "false"}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', variables(\'vmName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2021-07-01", "name": "[format(\'{0}/{1}\', variables(\'vmName\'), \'setupScript\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "Setup script for SSH"}, "properties": {"publisher": "Microsoft.Compute", "type": "CustomScriptExtension", "typeHandlerVersion": "1.10", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[variables(\'initScriptUrl\')]", "[variables(\'sshdConfigUrl\')]"]}, "protectedSettings": {"commandToExecute": "[format(\'powershell -ExecutionPolicy Bypass -file initialize.ps1 -publicSshKey \\"{0}\\"\', parameters(\'publicSshKey\'))]"}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', variables(\'vmName\'))]"]}], "outputs": {"sshhost_connect": {"type": "string", "value": "[format(\'ssh {0}@{1}\', parameters(\'adminUser\'), reference(resourceId(\'Microsoft.Network/publicIPAddresses\', \'publicIP\'), \'2020-11-01\').dnsSettings.fqdn)]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Declare variables\nstoragename="storage$(uuidgen)"\nvm_dns="winssh-$(uuidgen)"\nadminUser="zytest"\nadminPassword=$(uuidgen)\npublicSshKey="zytest"\nvmsize="Standard_D4s_v5"\nvmSku="2022-datacenter-core-smalldisk-g2"\ndiskSku="StandardSSD_LRS"\ndiskSizeGB=256\nlocation="westus"\nsecureBoot=true\nvTPM=true\n\n# Create a storage account\naz storage account create --name $storagename --location $location --kind Storage --sku Standard_LRS\n\n# Create a public IP address\naz network public-ip create --name publicIP --location $location --dns-name $vm_dns\n\n# Create a network security group\naz network nsg create --name nsg --location $location\n\n# Add security rules to the network security group\naz network nsg rule create --nsg-name nsg --name rdp --protocol Tcp --source-port-ranges \'*\' --destination-port-ranges \'3389\' --source-address-prefixes \'*\' --destination-address-prefixes \'*\' --access Deny --priority 100 --direction Inbound\naz network nsg rule create --nsg-name nsg --name ssh --protocol Tcp --source-port-ranges \'*\' --destination-port-ranges \'22\' --source-address-prefixes \'*\' --destination-address-prefixes \'*\' --access Allow --priority 110 --direction Inbound\n\n# Create a virtual network\naz network vnet create --name virtualNetwork --location $location --address-prefixes \'10.0.0.0/16\' --subnet-name subnet --network-security-group nsg\n\n# Create a network interface\naz network nic create --name nic --location $location --subnet subnet --public-ip-address publicIP\n\n# Create a data disk\naz disk create --name datadisk --location $location --size-gb $diskSizeGB --sku $diskSku\n\n# Create a virtual machine\naz vm create --name sshhost --location $location --size $vmsize --admin-username $adminUser --admin-password $adminPassword --image MicrosoftWindowsServer:WindowsServer:$vmSku:latest --nics nic --data-disk-sizes-gb $diskSizeGB --os-disk-name osdisk --os-disk-caching ReadWrite --storage-sku $diskSku --boot-diagnostics-storage $storagename\n\n# Add extensions to the virtual machine\naz vm extension set --publisher Microsoft.Azure.Security.WindowsAttestation --name GuestAttestation --version 1.0 --vm-name sshhost --settings \'{"AttestationConfig": {"MaaSettings": {"maaEndpoint": "", "maaTenantName": "GuestAttestation"}, "AscSettings": {"ascReportingEndpoint": "", "ascReportingFrequency": ""}, "useCustomToken": "false", "disableAlerts": "false"}}\'\naz vm extension set --publisher Microsoft.Compute --name CustomScriptExtension --version 1.10 --vm-name sshhost --settings \'{"fileUris": ["initialize.ps1", "configs/sshd_config_wopwd"]}\' --protected-settings \'{"commandToExecute": "powershell -ExecutionPolicy Bypass -file initialize.ps1 -publicSshKey \\"$publicSshKey\\""}\'\n```\n\nPlease replace the `uuidgen` command with the actual command to generate a unique string in your environment. Also, replace the `"initialize.ps1"` and `"configs/sshd_config_wopwd"` in the `fileUris` with the actual URLs of these files.


verify_result
