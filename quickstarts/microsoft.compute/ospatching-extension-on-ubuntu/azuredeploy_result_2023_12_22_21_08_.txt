arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSize": {"type": "string", "metadata": {"description": "Size of vm"}, "defaultValue": "Standard_D2_v3"}, "username": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "newStorageAccountName": {"type": "string", "metadata": {"description": "Unique DNS Name for the Storage Account where the Virtual Machine\'s disks will be placed."}, "defaultValue": "zytest"}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "rebootAfterPatch": {"type": "string", "defaultValue": "Auto", "metadata": {"description": "The reboot behavior after patching."}, "allowedValues": ["RebootIfNeed", "Required", "NotRequired", "Auto"]}, "category": {"type": "string", "defaultValue": "ImportantAndRecommended", "metadata": {"description": "Type of patches to install."}, "allowedValues": ["Important", "ImportantAndRecommended"]}, "installDuration": {"type": "string", "defaultValue": "01:00", "metadata": {"description": "The allowed total time for installation."}}, "oneoff": {"type": "bool", "defaultValue": false, "metadata": {"description": "Patch the OS immediately."}, "allowedValues": [true, false]}, "dayOfWeek": {"type": "string", "defaultValue": "Sunday|Wednesday", "metadata": {"description": "The patching date (of the week)You can specify multiple days in a week."}}, "startTime": {"type": "string", "defaultValue": "03:00", "metadata": {"description": "Start time of patching."}}, "idleTestScript": {"type": "string", "defaultValue": "", "metadata": {"description": "The uri of the idle test script"}}, "healthyTestScript": {"type": "string", "defaultValue": "", "metadata": {"description": "The uri of the healthy test script"}}, "storageAccountName": {"type": "string", "defaultValue": "zytest", "metadata": {"description": "The name of storage account."}}, "storageAccountResourceId": {"type": "string", "defaultValue": "", "metadata": {"description": "ResourceId for Storage account."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"scenarioPrefix": "ospatchingLinux", "imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "ubuntuOSVersion": "18.04-LTS", "nicName": "[concat(variables(\'scenarioPrefix\'),\'Nic\')]", "vnetAddressPrefix": "10.0.0.0/16", "subnetName": "[concat(variables(\'scenarioPrefix\'),\'Subnet\')]", "subnetPrefix": "10.0.0.0/24", "storageAccountType": "Standard_LRS", "publicIPAddressName": "[concat(variables(\'scenarioPrefix\'),\'PublicIp\')]", "publicIPAddressType": "Dynamic", "vmName": "[concat(variables(\'scenarioPrefix\'),\'VM\')]", "virtualNetworkName": "[concat(variables(\'scenarioPrefix\'),\'Vnet\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'username\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[parameters(\'newStorageAccountName\')]", "apiVersion": "2021-04-01", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'vnetAddressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2019-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', parameters(\'newStorageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'username\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'vmName\'),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmName\'),\'/installospatching\')]", "apiVersion": "2019-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/\', variables(\'vmName\'))]"], "properties": {"publisher": "Microsoft.OSTCExtensions", "type": "OSPatchingForLinux", "typeHandlerVersion": "2.0", "settings": {"disabled": false, "stop": false, "rebootAfterPatch": "[parameters(\'rebootAfterPatch\')]", "category": "[parameters(\'category\')]", "installDuration": "[parameters(\'installDuration\')]", "oneoff": "[parameters(\'oneoff\')]", "intervalOfWeeks": "1", "dayOfWeek": "[parameters(\'dayOfWeek\')]", "startTime": "[parameters(\'startTime\')]", "vmStatusTest": {"local": false, "idleTestScript": "[parameters(\'idleTestScript\')]", "healthyTestScript": "[parameters(\'healthyTestScript\')]"}}, "protectedSettings": {"storageAccountName": "[parameters(\'storageAccountName\')]", "storageAccountKey": "[listKeys(parameters(\'storageAccountResourceId\'), \'2021-04-01\').keys[0].value]"}}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmSize="Standard_D2_v3"\nusername="zytest"\nnewStorageAccountName="zytest"\ndnsNameForPublicIP="zytest"\nrebootAfterPatch="Auto"\ncategory="ImportantAndRecommended"\ninstallDuration="01:00"\noneoff=false\ndayOfWeek="Sunday|Wednesday"\nstartTime="03:00"\nidleTestScript=""\nhealthyTestScript=""\nstorageAccountName="zytest"\nstorageAccountResourceId=""\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Create storage account\naz storage account create --name $newStorageAccountName --location $location --sku Standard_LRS --kind StorageV2\n\n# Create public IP address\naz network public-ip create --name ospatchingLinuxPublicIp --location $location --allocation-method Dynamic --dns-name $dnsNameForPublicIP\n\n# Create virtual network\naz network vnet create --name ospatchingLinuxVnet --location $location --address-prefix 10.0.0.0/16 --subnet-name ospatchingLinuxSubnet --subnet-prefix 10.0.0.0/24\n\n# Create network interface\naz network nic create --name ospatchingLinuxNic --location $location --vnet-name ospatchingLinuxVnet --subnet ospatchingLinuxSubnet --public-ip-address ospatchingLinuxPublicIp\n\n# Create virtual machine\naz vm create --name ospatchingLinuxVM --location $location --size $vmSize --image Canonical:UbuntuServer:18.04-LTS:latest --admin-username $username --admin-password $adminPasswordOrKey --nics ospatchingLinuxNic --storage-account $newStorageAccountName --authentication-type $authenticationType\n\n# Add extension to virtual machine\naz vm extension set --publisher Microsoft.OSTCExtensions --version 2.0 --name OSPatchingForLinux --vm-name ospatchingLinuxVM --settings \'{"disabled": false, "stop": false, "rebootAfterPatch": "\'$rebootAfterPatch\'", "category": "\'$category\'", "installDuration": "\'$installDuration\'", "oneoff": \'$oneoff\', "intervalOfWeeks": "1", "dayOfWeek": "\'$dayOfWeek\'", "startTime": "\'$startTime\'", "vmStatusTest": {"local": false, "idleTestScript": "\'$idleTestScript\'", "healthyTestScript": "\'$healthyTestScript\'"}}\' --protected-settings \'{"storageAccountName": "\'$storageAccountName\'", "storageAccountKey": "\'$(az storage account keys list --account-name $storageAccountName --query [0].value --output tsv)\'"}\'\n```\n\nThis script first defines all the parameters, then creates the necessary resources (storage account, public IP address, virtual network, network interface, and virtual machine) using the `az` CLI commands. Finally, it adds an extension to the virtual machine for OS patching.


verify_result
