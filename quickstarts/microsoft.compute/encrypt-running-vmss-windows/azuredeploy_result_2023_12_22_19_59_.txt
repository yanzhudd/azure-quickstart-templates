arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmssName": {"type": "string", "metadata": {"description": "Name of the virtual machine."}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "enabledForDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."}}, "enabledForDiskEncryption": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."}}, "enabledForTemplateDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."}}, "keysPermissions": {"type": "array", "defaultValue": ["list", "get", "decrypt", "encrypt", "unwrapkey", "wrapkey"], "metadata": {"description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."}}, "secretsPermissions": {"type": "array", "defaultValue": ["list", "get"], "metadata": {"description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."}}, "skuName": {"type": "string", "defaultValue": "Standard", "allowedValues": ["Standard", "Premium"], "metadata": {"description": "Specifies whether the key vault is a standard vault or a premium vault."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location of the resources."}}}, "variables": {"keyVaultURL": "[concat(\'https://\', parameters(\'keyVaultName\'), environment().suffixes.keyVaultDns)]", "encryptionOperation": "EnableEncryption"}, "resources": [{"type": "Microsoft.KeyVault/vaults", "apiVersion": "2021-04-01-preview", "name": "[parameters(\'keyVaultName\')]", "location": "[parameters(\'location\')]", "properties": {"enabledForDeployment": "[parameters(\'enabledForDeployment\')]", "enabledForDiskEncryption": "[parameters(\'enabledForDiskEncryption\')]", "enabledForTemplateDeployment": "[parameters(\'enabledForTemplateDeployment\')]", "tenantId": "[subscription().tenantId]", "accessPolicies": [{"objectId": "[reference(resourceId(\'Microsoft.Compute/virtualMachineScaleSets/\', parameters(\'vmssName\')), \'2020-12-01\', \'full\').identity.principalId]", "tenantId": "[subscription().tenantId]", "permissions": {"keys": "[parameters(\'keysPermissions\')]", "secrets": "[parameters(\'secretsPermissions\')]"}}], "sku": {"name": "[parameters(\'skuName\')]", "family": "A"}, "networkAcls": {"defaultAction": "Allow", "bypass": "AzureServices"}}}, {"type": "Microsoft.Compute/virtualMachineScaleSets/extensions", "name": "[concat(parameters(\'vmssName\'),\'/diskEncryption\')]", "apiVersion": "2020-12-01", "dependsOn": ["[resourceId(\'Microsoft.KeyVault/vaults\', parameters(\'keyVaultName\'))]"], "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "AzureDiskEncryption", "typeHandlerVersion": "2.2", "autoUpgradeMinorVersion": true, "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[variables(\'keyVaultURL\')]", "KeyVaultResourceId": "[resourceId(\'Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]", "VolumeType": "All"}}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmssName="zytest"\nkeyVaultName="zytest"\nenabledForDeployment=true\nenabledForDiskEncryption=true\nenabledForTemplateDeployment=true\nkeysPermissions=("list" "get" "decrypt" "encrypt" "unwrapkey" "wrapkey")\nsecretsPermissions=("list" "get")\nskuName="Standard"\nlocation="westus"\n\n# Define variables\nkeyVaultURL="https://$keyVaultName.vault.azure.net/"\nencryptionOperation="EnableEncryption"\n\n# Create KeyVault\naz keyvault create --name $keyVaultName --resource-group $resourceGroupName --location $location --enabled-for-deployment $enabledForDeployment --enabled-for-disk-encryption $enabledForDiskEncryption --enabled-for-template-deployment $enabledForTemplateDeployment --sku $skuName\n\n# Get the principalId of the VMSS\nprincipalId=$(az vmss show --name $vmssName --resource-group $resourceGroupName --query identity.principalId -o tsv)\n\n# Set the access policy of the KeyVault\naz keyvault set-policy --name $keyVaultName --object-id $principalId --key-permissions ${keysPermissions[@]} --secret-permissions ${secretsPermissions[@]}\n\n# Add disk encryption extension to VMSS\naz vmss extension set --publisher Microsoft.Azure.Security --name AzureDiskEncryption --version 2.2 --resource-group $resourceGroupName --vmss-name $vmssName --settings "{\'EncryptionOperation\': \'$encryptionOperation\', \'KeyVaultURL\': \'$keyVaultURL\', \'KeyVaultResourceId\': \'/subscriptions/$subscriptionId/resourceGroups/$resourceGroupName/providers/Microsoft.KeyVault/vaults/$keyVaultName\', \'VolumeType\': \'All\'}"\n```\n\nPlease replace `$resourceGroupName` and `$subscriptionId` with your actual resource group name and subscription id.


verify_result
