arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.7.4.23292", "templateHash": "13011212433525937845"}}, "parameters": {"vmssName": {"type": "string", "defaultValue": "vmss-quickstart", "metadata": {"description": "Name for the virtual machine scale set"}}, "vmssAdminUserName": {"type": "string", "metadata": {"description": "User name for virtual machine instances"}, "defaultValue": "zytest"}, "vmssAdminPasswordOrSSHKey": {"type": "secureString", "metadata": {"description": "Password or SSH Key for the VM instances. Be sure to also update whether using Password or SSH Key authentication on the VMSS Flex"}, "defaultValue": "zytest"}, "instanceCount": {"type": "int", "defaultValue": 3, "maxValue": 1000, "minValue": 0, "metadata": {"description": "Number of virtual machine instances in the scale set"}}, "platformFaultDomainCount": {"type": "int", "defaultValue": 1, "allowedValues": [1, 2, 3, 4, 5], "metadata": {"description": "The platform fault domain count for your scale set. Set to 1 to allow Azure to maximally spread instances across many racks in the datacenter."}}, "zones": {"type": "array", "defaultValue": [], "metadata": {"description": "Instances will be spread evenly between the zones you selected"}}, "sku": {"type": "string", "defaultValue": "Standard_B1s", "metadata": {"description": "Specifies the virtual machine SKU to be used"}}, "vnetPrefix": {"type": "string", "defaultValue": "[parameters(\'vmssName\')]", "metadata": {"description": "Virtual network prefix"}}, "lbName": {"type": "string", "defaultValue": "[format(\'{0}-LB\', parameters(\'vmssName\'))]", "metadata": {"description": "Name for the load balancer"}}, "os": {"type": "string", "defaultValue": "ubuntulinux", "allowedValues": ["ubuntulinux", "windowsserver"], "metadata": {"description": "Choose the operating system for the VMs in the Virtual Machine Scale Set"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Region where the scale set will be deployed"}}}, "variables": {"vnetName": "[format(\'{0}{1}\', parameters(\'vnetPrefix\'), uniqueString(resourceGroup().name))]"}, "resources": [{"type": "Microsoft.Resources/deployments", "apiVersion": "2020-10-01", "name": "basenetwork", "properties": {"expressionEvaluationOptions": {"scope": "inner"}, "mode": "Incremental", "parameters": {"virtualNetworkName": {"value": "[variables(\'vnetName\')]"}, "location": {"value": "[parameters(\'location\')]"}}, "template": {"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.7.4.23292", "templateHash": "11303518320404158019"}}, "parameters": {"location": {"type": "string", "defaultValue": "[resourceGroup().location]", "metadata": {"description": "Location for all resources."}}, "virtualNetworkName": {"type": "string", "defaultValue": "vNet", "metadata": {"description": "Name of the VNET."}}, "subnetName": {"type": "string", "defaultValue": "Subnet", "metadata": {"description": "Name of the subnet"}}}, "variables": {"subnetAddressPrefix": "10.1.0.0/24", "addressPrefix": "10.1.0.0/16", "nsgName": "[format(\'{0}NSG\', parameters(\'virtualNetworkName\'))]"}, "resources": [{"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2021-02-01", "name": "[variables(\'nsgName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "SSH", "properties": {"priority": 1000, "protocol": "Tcp", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "22"}}, {"name": "RDP", "properties": {"priority": 1050, "protocol": "Tcp", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "3389"}}, {"name": "HTTP", "properties": {"priority": 1100, "protocol": "Tcp", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "80"}}, {"name": "HTTPS", "properties": {"priority": 1200, "protocol": "Tcp", "access": "Allow", "direction": "Inbound", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*", "destinationPortRange": "443"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2021-02-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[format(\'{0}-1\', parameters(\'subnetName\'))]", "properties": {"addressPrefix": "[variables(\'subnetAddressPrefix\')]", "privateEndpointNetworkPolicies": "Enabled", "privateLinkServiceNetworkPolicies": "Enabled", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'nsgName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'nsgName\'))]"]}], "outputs": {"vnetId": {"type": "string", "value": "[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))]"}, "vnetSubnetArray": {"type": "array", "value": "[reference(resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))).subnets]"}, "vnet": {"type": "object", "value": "[reference(resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\')), \'2021-02-01\', \'full\')]"}}}}}, {"type": "Microsoft.Resources/deployments", "apiVersion": "2020-10-01", "name": "slb", "properties": {"expressionEvaluationOptions": {"scope": "inner"}, "mode": "Incremental", "parameters": {"slbName": {"value": "[parameters(\'lbName\')]"}, "location": {"value": "[parameters(\'location\')]"}, "osType": {"value": "[parameters(\'os\')]"}}, "template": {"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.7.4.23292", "templateHash": "3878165754653131925"}}, "parameters": {"slbName": {"type": "string", "defaultValue": "myLoadBalancer", "metadata": {"description": "Load Balancer name"}}, "location": {"type": "string", "defaultValue": "[resourceGroup().location]", "metadata": {"description": "Location for the resources"}}, "osType": {"type": "string", "defaultValue": "ubuntulinux", "allowedValues": ["ubuntulinux", "windowsserver"], "metadata": {"description": "OS type. Used to set the correct NAT rule destination"}}}, "variables": {"slbPIPName": "[format(\'{0}-PIP\', parameters(\'slbName\'))]", "natRuleName": "[format(\'{0}-natrule\', parameters(\'slbName\'))]", "natRuleBackendPort": "[if(equals(parameters(\'osType\'), \'ubuntulinux\'), 22, 3389)]", "feConfigName": "FrontEndConfig", "bePoolName": "bepool01"}, "resources": [{"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2021-02-01", "name": "[variables(\'slbPIPName\')]", "location": "[parameters(\'location\')]", "sku": {"tier": "Regional", "name": "Standard"}, "properties": {"publicIPAddressVersion": "IPv4", "publicIPAllocationMethod": "Static", "idleTimeoutInMinutes": 4}}, {"type": "Microsoft.Network/loadBalancers", "apiVersion": "2021-08-01", "name": "[parameters(\'slbName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard", "tier": "Regional"}, "properties": {"frontendIPConfigurations": [{"properties": {"privateIPAllocationMethod": "Dynamic", "privateIPAddressVersion": "IPv4", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'slbPIPName\'))]"}}, "name": "[variables(\'feConfigName\')]"}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "loadBalancingRules": [{"properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', parameters(\'slbName\'), variables(\'feConfigName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', parameters(\'slbName\'), variables(\'bePoolName\'))]"}, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', parameters(\'slbName\'), \'probe01\')]"}, "protocol": "Tcp", "loadDistribution": "Default", "frontendPort": 80, "backendPort": 80, "idleTimeoutInMinutes": 4, "enableFloatingIP": false, "enableTcpReset": false, "disableOutboundSnat": false}, "name": "string"}], "probes": [{"properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}, "name": "probe01"}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'slbPIPName\'))]"]}, {"type": "Microsoft.Network/loadBalancers/inboundNatRules", "apiVersion": "2021-08-01", "name": "[format(\'{0}/{1}\', parameters(\'slbName\'), variables(\'natRuleName\'))]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', parameters(\'slbName\'), variables(\'feConfigName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', parameters(\'slbName\'), variables(\'bePoolName\'))]"}, "backendPort": "[variables(\'natRuleBackendPort\')]", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 51000, "protocol": "Tcp", "idleTimeoutInMinutes": 4}, "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers\', parameters(\'slbName\'))]"]}], "outputs": {"slbId": {"type": "string", "value": "[resourceId(\'Microsoft.Network/loadBalancers\', parameters(\'slbName\'))]"}, "slbName": {"type": "string", "value": "[parameters(\'slbName\')]"}, "slbFeConfigName": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Network/loadBalancers\', parameters(\'slbName\'))).frontendIPConfigurations[0].name]"}, "slbBePoolName": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Network/loadBalancers\', parameters(\'slbName\'))).backendAddressPools[0].name]"}, "slbBackendPoolArray": {"type": "array", "value": "[reference(resourceId(\'Microsoft.Network/loadBalancers\', parameters(\'slbName\'))).backendAddressPools]"}, "slbPublicIPAddress": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'slbPIPName\'))).ipAddress]"}}}}}, {"type": "Microsoft.Resources/deployments", "apiVersion": "2020-10-01", "name": "vmss-bicep", "properties": {"expressionEvaluationOptions": {"scope": "inner"}, "mode": "Incremental", "parameters": {"location": {"value": "[parameters(\'location\')]"}, "vmssname": {"value": "[parameters(\'vmssName\')]"}, "vmCount": {"value": "[parameters(\'instanceCount\')]"}, "vmSize": {"value": "[parameters(\'sku\')]"}, "adminUsername": {"value": "[parameters(\'vmssAdminUserName\')]"}, "adminPasswordOrKey": {"value": "[parameters(\'vmssAdminPasswordOrSSHKey\')]"}, "os": {"value": "[parameters(\'os\')]"}, "platformFaultDomainCount": {"value": "[parameters(\'platformFaultDomainCount\')]"}, "zones": {"value": "[parameters(\'zones\')]"}, "subnetId": {"value": "[reference(resourceId(\'Microsoft.Resources/deployments\', \'basenetwork\')).outputs.vnetSubnetArray.value[0].id]"}, "lbBackendPoolArray": {"value": ["[reference(resourceId(\'Microsoft.Resources/deployments\', \'slb\')).outputs.slbBackendPoolArray.value[0]]"]}}, "template": {"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.7.4.23292", "templateHash": "11855597662150632502"}}, "parameters": {"vmssname": {"type": "string", "defaultValue": "myVmssFlex"}, "location": {"type": "string", "defaultValue": "[resourceGroup().location]"}, "zones": {"type": "array", "defaultValue": []}, "vmSize": {"type": "string", "defaultValue": "Standard_DS1_v2"}, "platformFaultDomainCount": {"type": "int", "defaultValue": 1, "allowedValues": [1, 2, 3, 5]}, "vmCount": {"type": "int", "defaultValue": 3, "maxValue": 1000, "minValue": 0}, "os": {"type": "string", "defaultValue": "ubuntulinux", "allowedValues": ["ubuntulinux", "windowsserver"]}, "subnetId": {"type": "string"}, "lbBackendPoolArray": {"type": "array", "defaultValue": []}, "adminUsername": {"type": "string"}, "authenticationType": {"type": "string", "defaultValue": "password", "allowedValues": ["password", "sshPublicKey"]}, "adminPasswordOrKey": {"type": "secureString"}}, "variables": {"networkApiVersion": "2020-11-01", "linuxConfiguration": {"disablePasswordAuthentication": true, "provisionVMAgent": true, "ssh": {"publicKeys": [{"path": "[format(\'/home/{0}/.ssh/authorized_keys\', parameters(\'adminUsername\'))]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "linuxImageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18_04-LTS-Gen2", "version": "latest"}, "windowsImageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2019-Datacenter", "version": "latest"}, "windowsConfiguration": {"timeZone": "Pacific Standard Time"}, "imageReference": "[if(equals(parameters(\'os\'), \'ubuntulinux\'), variables(\'linuxImageReference\'), variables(\'windowsImageReference\'))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachineScaleSets", "apiVersion": "2021-04-01", "name": "[parameters(\'vmssname\')]", "location": "[parameters(\'location\')]", "zones": "[parameters(\'zones\')]", "sku": {"name": "[parameters(\'vmSize\')]", "tier": "Standard", "capacity": "[parameters(\'vmCount\')]"}, "properties": {"orchestrationMode": "Flexible", "singlePlacementGroup": false, "platformFaultDomainCount": "[parameters(\'platformFaultDomainCount\')]", "virtualMachineProfile": {"osProfile": {"computerNamePrefix": "myVm", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[if(equals(parameters(\'authenticationType\'), \'password\'), parameters(\'adminPasswordOrKey\'), null())]", "linuxConfiguration": "[if(and(equals(parameters(\'os\'), \'ubuntulinux\'), equals(parameters(\'authenticationType\'), \'sshPublicKey\')), variables(\'linuxConfiguration\'), null())]", "windowsConfiguration": "[if(equals(parameters(\'os\'), \'windowsserver\'), variables(\'windowsConfiguration\'), null())]"}, "networkProfile": {"networkApiVersion": "[variables(\'networkApiVersion\')]", "networkInterfaceConfigurations": [{"name": "[format(\'{0}NicConfig01\', parameters(\'vmssname\'))]", "properties": {"primary": true, "enableAcceleratedNetworking": false, "ipConfigurations": [{"name": "[format(\'{0}IpConfig\', parameters(\'vmssname\'))]", "properties": {"publicIPAddressConfiguration": {"name": "[format(\'{0}PipConfig\', parameters(\'vmssname\'))]", "properties": {"publicIPAddressVersion": "IPv4", "idleTimeoutInMinutes": 5}}, "privateIPAddressVersion": "IPv4", "subnet": {"id": "[parameters(\'subnetId\')]"}, "loadBalancerBackendAddressPools": "[parameters(\'lbBackendPoolArray\')]"}}]}}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true}}, "storageProfile": {"osDisk": {"createOption": "FromImage", "caching": "ReadWrite", "managedDisk": {"storageAccountType": "Premium_LRS"}}, "imageReference": "[variables(\'imageReference\')]"}}}}], "outputs": {"vmssid": {"type": "string", "value": "[resourceId(\'Microsoft.Compute/virtualMachineScaleSets\', parameters(\'vmssname\'))]"}, "vmssAdminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}}}}, "dependsOn": ["[resourceId(\'Microsoft.Resources/deployments\', \'basenetwork\')]", "[resourceId(\'Microsoft.Resources/deployments\', \'slb\')]"]}]}


cli_script
Below is the translated bash script for the provided ARM template and template parameters. The script includes Azure CLI commands to create the resources as defined in the ARM template.\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nvmssName="vmss-quickstart"\nvmssAdminUserName="zytest"\nvmssAdminPasswordOrSSHKey="zytest"\ninstanceCount=3\nplatformFaultDomainCount=1\nzones=()\nsku="Standard_B1s"\nvnetPrefix="$vmssName"\nlbName="${vmssName}-LB"\nos="ubuntulinux"\nlocation="westus"\n\n# Derived variables\nvnetName="${vnetPrefix}$(az group show --query name -o tsv | tr -d \'\\n\' | shasum | head -c 10)"\n\n# Create a Network Security Group\nnsgName="${vnetName}NSG"\naz network nsg create \\\n    --name "$nsgName" \\\n    --location "$location" \\\n    --resource-group "$(az group show --query name -o tsv)"\n\n# Define NSG Security Rules\naz network nsg rule create \\\n    --nsg-name "$nsgName" \\\n    --name "SSH" \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --protocol Tcp \\\n    --source-address-prefix "*" \\\n    --source-port-range "*" \\\n    --destination-address-prefix "*" \\\n    --destination-port-range 22\n\naz network nsg rule create \\\n    --nsg-name "$nsgName" \\\n    --name "RDP" \\\n    --priority 1050 \\\n    --access Allow \\\n    --direction Inbound \\\n    --protocol Tcp \\\n    --source-address-prefix "*" \\\n    --source-port-range "*" \\\n    --destination-address-prefix "*" \\\n    --destination-port-range 3389\n\naz network nsg rule create \\\n    --nsg-name "$nsgName" \\\n    --name "HTTP" \\\n    --priority 1100 \\\n    --access Allow \\\n    --direction Inbound \\\n    --protocol Tcp \\\n    --source-address-prefix "*" \\\n    --source-port-range "*" \\\n    --destination-address-prefix "*" \\\n    --destination-port-range 80\n\naz network nsg rule create \\\n    --nsg-name "$nsgName" \\\n    --name "HTTPS" \\\n    --priority 1200 \\\n    --access Allow \\\n    --direction Inbound \\\n    --protocol Tcp \\\n    --source-address-prefix "*" \\\n    --source-port-range "*" \\\n    --destination-address-prefix "*" \\\n    --destination-port-range 443\n\n# Create Virtual Network and Subnet\nsubnetAddressPrefix="10.1.0.0/24"\naddressPrefix="10.1.0.0/16"\nsubnetName="${vnetName}-1"\n\naz network vnet create \\\n    --name "$vnetName" \\\n    --location "$location" \\\n    --address-prefix "$addressPrefix" \\\n    --resource-group "$(az group show --query name -o tsv)"\n\naz network vnet subnet create \\\n    --vnet-name "$vnetName" \\\n    --name "$subnetName" \\\n    --address-prefix "$subnetAddressPrefix" \\\n    --network-security-group "$nsgName" \\\n    --resource-group "$(az group show --query name -o tsv)"\n\n# Get the subnet ID\nsubnetId=$(az network vnet subnet show \\\n    --vnet-name "$vnetName" \\\n    --name "$subnetName" \\\n    --query id -o tsv)\n\n# Create a Public IP for the Load Balancer\nslbPIPName="${lbName}-PIP"\n\naz network public-ip create \\\n    --name "$slbPIPName" \\\n    --sku Standard \\\n    --allocation-method Static \\\n    --resource-group "$(az group show --query name -o tsv)"\n\n# Create Load Balancer\naz network lb create \\\n    --name "$lbName" \\\n    --frontend-ip-name "FrontEndConfig" \\\n    --backend-pool-name "bepool01" \\\n    --public-ip-address "$slbPIPName" \\\n    --sku Standard \\\n    --resource-group "$(az group show --query name -o tsv)"\n\n# Create Probe for Load Balancer\naz network lb probe create \\\n    --lb-name "$lbName" \\\n    --name "probe01" \\\n    --protocol Tcp \\\n    --port 80 \\\n    --interval 5 \\\n    --count 2 \\\n    --resource-group "$(az group show --query name -o tsv)"\n\n# Create Load Balancing Rule\naz network lb rule create \\\n    --lb-name "$lbName" \\\n    --name "LBRuleHTTP" \\\n    --protocol Tcp \\\n    --frontend-port 80 \\\n    --backend-port 80 \\\n    --frontend-ip-name "FrontEndConfig" \\\n    --backend-pool-name "bepool01" \\\n    --probe-name "probe01" \\\n    --resource-group "$(az group show --query name -o tsv)"\n\n# Create Inbound NAT Rule\nnatRuleName="${lbName}-natrule"\naz network lb inbound-nat-rule create \\\n    --lb-name "$lbName" \\\n    --name "$natRuleName" \\\n    --frontend-ip-name "FrontEndConfig" \\\n    --protocol Tcp \\\n    --frontend-port-range-start 50000 \\\n    --frontend-port-range-end 51000 \\\n    --backend-port 22 \\\n    --resource-group "$(az group show --query name -o tsv)"\n\n# Create Virtual Machine Scale Set\naz vmss create \\\n    --name "$vmssName" \\\n    --resource-group "$(az group show --query name -o tsv)" \\\n    --location "$location" \\\n    --zones "${zones[@]}" \\\n    --vm-sku "$sku" \\\n    --instance-count "$instanceCount" \\\n    --admin-username "$vmssAdminUserName" \\\n    --admin-password "$vmssAdminPasswordOrSSHKey" \\\n    --image "Canonical:UbuntuServer:18_04-LTS-Gen2:latest" \\\n    --subnet "$subnetId" \\\n    --lb "$lbName" \\\n    --lb-nat-pool "$natRuleName" \\\n    --platform-fault-domain-count "$platformFaultDomainCount"\n\n# Output the VMSS ID\nvmssId=$(az vmss show --name "$vmssName" --query id -o tsv)\necho "VMSS ID: $vmssId"\n```\n\nPlease note that this script assumes you are already logged in to the Azure CLI and have set the desired subscription. It also assumes that the resource group already exists and is obtained with `az group show --query name -o tsv`. Adjustments may be necessary based on your specific Azure environment and requirements.


verify_result
