arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "vmName": {"type": "string", "metadata": {"description": "Name for the Virtual Machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "description"}}}, "variables": {"storageAccountName": "[concat(uniquestring(parameters(\'vmName\')), \'storage\')]", "imagePublisher": "RedHat", "imageOffer": "RHEL", "nicName": "[concat(uniquestring(parameters(\'vmName\')), \'nic\')]", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "storageAccountType": "Standard_LRS", "publicIPAddressName": "[concat(uniquestring(parameters(\'vmName\')), \'publicip\')]", "publicIPAddressType": "Dynamic", "virtualNetworkName": "[concat(uniquestring(parameters(\'vmName\')), \'vnet\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "[concat(variables(\'subnetName\'), \'-nsg\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]"}}, {"comments": "Simple Network Security Group for subnet [variables(\'subnetName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "7.8", "version": "latest"}, "osDisk": {"name": "[concat(parameters(\'vmName\'),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}, "dataDisks": [{"name": "[concat(parameters(\'vmName\'),\'_DataDisk1\')]", "diskSizeGB": 100, "lun": 0, "createOption": "Empty"}, {"name": "[concat(parameters(\'vmName\'),\'_DataDisk2\')]", "diskSizeGB": 100, "lun": 1, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\')), \'2020-08-01-preview\').primaryEndpoints[\'blob\']]"}}}}]}


cli_script
Below is the translated bash script for the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nadminUsername="zytest"\nvmName="zytest"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nvmSize="Standard_A1_v2"\n\n# Unique resource names based on the vmName\nstorageAccountName=$(echo -n "$vmName" | md5sum | cut -d \' \' -f1)"storage"\nnicName=$(echo -n "$vmName" | md5sum | cut -d \' \' -f1)"nic"\npublicIPAddressName=$(echo -n "$vmName" | md5sum | cut -d \' \' -f1)"publicip"\nvirtualNetworkName=$(echo -n "$vmName" | md5sum | cut -d \' \' -f1)"vnet"\nnetworkSecurityGroupName="Subnet-nsg"\n\n# Create a storage account\naz storage account create \\\n  --name $storageAccountName \\\n  --location $location \\\n  --sku Standard_LRS \\\n  --kind StorageV2\n\n# Create a public IP address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --allocation-method Dynamic\n\n# Create Network Security Group and rule\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --location $location\n\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name default-allow-22 \\\n  --priority 1000 \\\n  --access Allow \\\n  --direction Inbound \\\n  --destination-port-ranges 22 \\\n  --protocol Tcp \\\n  --source-address-prefix "*" \\\n  --source-port-range "*"\n\n# Create a virtual network with a subnet\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --location $location \\\n  --address-prefixes 10.0.0.0/16 \\\n  --subnet-name Subnet \\\n  --subnet-prefix 10.0.0.0/24 \\\n  --network-security-group $networkSecurityGroupName\n\n# Create a network interface\naz network nic create \\\n  --name $nicName \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet Subnet \\\n  --public-ip-address $publicIPAddressName\n\n# Define Linux configuration for VM\nlinuxConfiguration=\'null\'\nif [ "$authenticationType" == "sshPublicKey" ]; then\n  linuxConfiguration=$(jq -n \\\n    --arg keyData "$adminPasswordOrKey" \\\n    --arg adminUsername "$adminUsername" \\\n    \'{\n      "disablePasswordAuthentication": true,\n      "ssh": {\n        "publicKeys": [\n          {\n            "path": "/home/\\($adminUsername)/.ssh/authorized_keys",\n            "keyData": $keyData\n          }\n        ]\n      }\n    }\')\nfi\n\n# Create a virtual machine\naz vm create \\\n  --resource-group myResourceGroup \\\n  --name $vmName \\\n  --location $location \\\n  --nics $nicName \\\n  --image RedHat:RHEL:7.8:latest \\\n  --size $vmSize \\\n  --admin-username $adminUsername \\\n  --authentication-type $authenticationType \\\n  --ssh-key-value "$adminPasswordOrKey" \\\n  --os-disk-name "${vmName}_OSDisk" \\\n  --storage-sku Standard_LRS \\\n  --data-disk-sizes-gb 100 100 \\\n  --custom-data "$linuxConfiguration" \\\n  --enable-agent true \\\n  --tags "webserver=backend"\n\n# Note: Replace \'myResourceGroup\' with your actual resource group name.\n```\n\nPlease ensure that you replace `\'myResourceGroup\'` with the name of the resource group where you want to deploy these resources. Also, the script assumes you have `jq` installed for processing JSON data. If the `authenticationType` is `sshPublicKey`, the script will configure the VM to use SSH keys for authentication. If it\'s `password`, the script will prompt for a password instead.


verify_result
