arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}, "defaultValue": ""}, "glassfishVersion": {"type": "int", "allowedValues": [3, 4], "metadata": {"description": "Release number for the GlassFish package to be deployed."}, "defaultValue": "zytest"}, "glassfishRelease": {"type": "string", "allowedValues": ["3.1.1", "3.1.2", "3.1.2.2", "3.2", "4.0", "4.1"], "metadata": {"description": "Version of GlassFish to deploy"}, "defaultValue": "zytest"}, "numberOfInstances": {"type": "int", "minValue": 1, "maxValue": 10, "metadata": {"description": "Number of VMs"}, "defaultValue": "zytest"}, "dnsNameforLBIP": {"type": "string", "minLength": 1, "metadata": {"description": "DNS for Load Balancer IP"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "VM(s) size"}}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username"}, "defaultValue": "zytest"}, "glassfishAdminPassword": {"type": "securestring", "metadata": {"description": "GlassFish admin user password"}, "defaultValue": "zytest"}, "sshPublicKey": {"type": "securestring", "metadata": {"description": "SSH public key on all VMs"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"location": "[parameters(\'location\')]", "namePrefix": "gf-", "storageAccountName": "[concat(uniqueString(resourceGroup().id), \'sa\')]", "availabilitySetName": "[concat(variables(\'namePrefix\'), \'nodes\')]", "publicIPAddressName": "[concat(variables(\'namePrefix\'), \'ip\')]", "vnetName": "[concat(variables(\'namePrefix\'), \'vnet\')]", "subnetName": "[concat(variables(\'namePrefix\'), \'subnet\')]", "nsgName": "[concat(variables(\'subnetName\'), \'-nsg\')]", "lbName": "[concat(variables(\'namePrefix\'), \'lb\')]", "frontEndIPConfigID": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\',variables(\'lbName\'),\'LoadBalancerFrontEnd\')]", "lbPoolName": "lbBackend", "lbProbeName": "[concat(variables(\'namePrefix\'), \'tcp-probe\')]", "sshKeyPath": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "nestedTemplateFolder": "nestedtemplates/", "nestedTemplateFileName": "azuredeploy.json", "nestedTemplateUrl": "[uri(parameters(\'_artifactsLocation\'), concat(variables(\'nestedTemplateFolder\'), variables(\'nestedTemplateFileName\'), parameters(\'_artifactsLocationSasToken\')))]"}, "resources": [{"apiVersion": "2021-02-01", "location": "[variables(\'location\')]", "name": "[variables(\'storageAccountName\')]", "sku": {"name": "Standard_LRS"}, "type": "Microsoft.Storage/storageAccounts"}, {"apiVersion": "2020-12-01", "location": "[variables(\'location\')]", "name": "[variables(\'availabilitySetName\')]", "sku": {"name": "Aligned"}, "properties": {"platformFaultDomainCount": 2, "platformUpdateDomainCount": 5}, "type": "Microsoft.Compute/availabilitySets"}, {"apiVersion": "2020-07-01", "location": "[variables(\'location\')]", "name": "[variables(\'publicIPAddressName\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameforLBIP\')]"}}, "type": "Microsoft.Network/publicIPAddresses"}, {"apiVersion": "2020-07-01", "type": "Microsoft.Network/networkSecurityGroups", "name": "[variables(\'nsgName\')]", "location": "[variables(\'location\')]", "properties": {"securityRules": [{"name": "ssh-rule", "properties": {"description": "Allow SSH", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "22", "sourceAddressPrefix": "Internet", "destinationAddressPrefix": "*", "access": "Allow", "priority": 100, "direction": "Inbound"}}, {"name": "web-rule", "properties": {"description": "Allow WEB", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "8080", "sourceAddressPrefix": "Internet", "destinationAddressPrefix": "*", "access": "Allow", "priority": 101, "direction": "Inbound"}}]}}, {"apiVersion": "2020-07-01", "location": "[variables(\'location\')]", "name": "[variables(\'vnetName\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups/\', variables(\'nsgName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'nsgName\'))]"}}}]}, "type": "Microsoft.Network/virtualNetworks"}, {"apiVersion": "2020-07-01", "name": "[variables(\'lbName\')]", "type": "Microsoft.Network/loadBalancers", "location": "[variables(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'lbPoolName\')]"}], "loadBalancingRules": [{"name": "LBRule", "properties": {"backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\',variables(\'lbName\'),variables(\'lbPoolName\'))]"}, "backendPort": 8080, "enableFloatingIP": false, "frontendIPConfiguration": {"id": "[variables(\'frontEndIPConfigID\')]"}, "frontendPort": 80, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\',variables(\'lbName\'),variables(\'lbProbeName\'))]"}, "protocol": "Tcp"}}], "probes": [{"name": "[variables(\'lbProbeName\')]", "properties": {"intervalInSeconds": 5, "numberOfProbes": 2, "port": 8080, "protocol": "Tcp"}}]}}, {"apiVersion": "2020-07-01", "type": "Microsoft.Network/loadBalancers/inboundNatRules", "name": "[concat(variables(\'lbName\'), \'/ssh-\', variables(\'namePrefix\'), copyIndex())]", "location": "[variables(\'location\')]", "copy": {"name": "lbSSHNatLoop", "count": "[parameters(\'numberOfInstances\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'lbName\'))]"], "properties": {"frontendIPConfiguration": {"id": "[variables(\'frontEndIPConfigID\')]"}, "protocol": "Tcp", "frontendPort": "[copyIndex(5000)]", "backendPort": 22, "enableFloatingIP": false}}, {"apiVersion": "2020-07-01", "type": "Microsoft.Network/loadBalancers/inboundNatRules", "name": "[concat(variables(\'lbName\'), \'/admin-\', variables(\'namePrefix\'), copyIndex())]", "location": "[variables(\'location\')]", "copy": {"name": "lbAdminNatLoop", "count": "[parameters(\'numberOfInstances\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'lbName\'))]"], "properties": {"frontendIPConfiguration": {"id": "[variables(\'frontEndIPConfigID\')]"}, "protocol": "Tcp", "frontendPort": "[copyIndex(4800)]", "backendPort": 4848, "enableFloatingIP": false}}, {"apiVersion": "2020-07-01", "type": "Microsoft.Network/networkInterfaces", "name": "[concat(variables(\'namePrefix\'), \'nic-\', copyindex())]", "location": "[variables(\'location\')]", "copy": {"name": "nicLoop", "count": "[parameters(\'numberOfInstances\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers/\', variables(\'lbName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatRules\',variables(\'lbName\'),concat(\'ssh-\', variables(\'namePrefix\'), copyIndex()))]", "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatRules\',variables(\'lbName\'),concat(\'admin-\', variables(\'namePrefix\'), copyIndex()))]"], "properties": {"ipConfigurations": [{"name": "ipconfig", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\',variables(\'lbName\'),variables(\'lbPoolName\'))]"}], "loadBalancerInboundNatRules": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatRules\',variables(\'lbName\'),concat(\'ssh-\', variables(\'namePrefix\'), copyIndex()))]"}, {"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatRules\',variables(\'lbName\'),concat(\'admin-\', variables(\'namePrefix\'), copyIndex()))]"}]}}]}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[concat(variables(\'namePrefix\'), \'vm-\', copyindex())]", "copy": {"name": "virtualMachineLoop", "count": "[parameters(\'numberOfInstances\')]"}, "location": "[variables(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', concat(variables(\'namePrefix\'),\'nic-\', copyindex()))]", "[resourceId(\'Microsoft.Compute/availabilitySets/\', variables(\'availabilitySetName\'))]"], "properties": {"availabilitySet": {"id": "[resourceId(\'Microsoft.Compute/availabilitySets\',variables(\'availabilitySetName\'))]"}, "hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[concat(variables(\'namePrefix\'), copyIndex())]", "adminUsername": "[parameters(\'adminUsername\')]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[variables(\'sshKeyPath\')]", "keyData": "[parameters(\'sshPublicKey\')]"}]}}}, "storageProfile": {"imageReference": {"publisher": "SUSE", "offer": "openSUSE-Leap", "sku": "15-2", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'namePrefix\'), \'vm-\', copyindex(),\'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',concat(variables(\'namePrefix\'), \'nic-\', copyindex()))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'storageAccountName\'),\'2021-02-01\').primaryendpoints[\'blob\']]"}}}}, {"name": "GlassFishDeployment", "type": "Microsoft.Resources/deployments", "apiVersion": "2021-04-01", "dependsOn": ["virtualMachineLoop"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'nestedTemplateUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"_artifactsLocation": {"value": "[parameters(\'_artifactsLocation\')]"}, "_artifactsLocationSasToken": {"value": "[parameters(\'_artifactsLocationSasToken\')]"}, "vmPrefix": {"value": "[concat(variables(\'namePrefix\'), \'vm-\')]"}, "numberOfInstances": {"value": "[parameters(\'numberOfInstances\')]"}, "glassfishVersion": {"value": "[parameters(\'glassfishVersion\')]"}, "glassfishRelease": {"value": "[parameters(\'glassfishRelease\')]"}, "glassfishAdminPassword": {"value": "[parameters(\'glassfishAdminPassword\')]"}}}}], "outputs": {"LoadBalancedApplicationServerURL": {"type": "string", "value": "[concat(\'http://\', reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn)]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Declare variables\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\nglassfishVersion="zytest"\nglassfishRelease="zytest"\nnumberOfInstances="zytest"\ndnsNameforLBIP="zytest"\nvmSize="Standard_D2s_v3"\nadminUsername="zytest"\nglassfishAdminPassword="zytest"\nsshPublicKey="zytest"\nlocation="westus"\n\n# Create resources\naz storage account create --name $storageAccountName --location $location --sku Standard_LRS\naz vm availability-set create --name $availabilitySetName --location $location --platform-fault-domain-count 2 --platform-update-domain-count 5\naz network public-ip create --name $publicIPAddressName --location $location --dns-name $dnsNameforLBIP\naz network nsg create --name $nsgName --location $location\naz network vnet create --name $vnetName --location $location --address-prefix 10.0.0.0/16 --subnet-name $subnetName\naz network lb create --name $lbName --location $location --frontend-ip-name LoadBalancerFrontEnd --public-ip-address $publicIPAddressName --backend-pool-name $lbPoolName\naz network lb rule create --lb-name $lbName --name LBRule --protocol Tcp --frontend-port 80 --backend-port 8080 --frontend-ip-name LoadBalancerFrontEnd --backend-pool-name $lbPoolName\naz network lb probe create --lb-name $lbName --name $lbProbeName --protocol Tcp --port 8080 --interval 5 --count 2\naz network lb inbound-nat-rule create --lb-name $lbName --name $lbSSHNatLoop --protocol Tcp --frontend-port 5000 --backend-port 22 --frontend-ip-name LoadBalancerFrontEnd\naz network lb inbound-nat-rule create --lb-name $lbName --name $lbAdminNatLoop --protocol Tcp --frontend-port 4800 --backend-port 4848 --frontend-ip-name LoadBalancerFrontEnd\naz network nic create --name $nicName --location $location --vnet-name $vnetName --subnet $subnetName --lb-name $lbName --lb-address-pools $lbPoolName --lb-inbound-nat-rules $lbSSHNatLoop $lbAdminNatLoop\naz vm create --name $vmName --location $location --availability-set $availabilitySetName --size $vmSize --image SUSE:openSUSE-Leap:15-2:latest --admin-username $adminUsername --ssh-key-value $sshPublicKey --storage-account $storageAccountName --nics $nicName\naz group deployment create --name GlassFishDeployment --template-uri $nestedTemplateUrl --parameters _artifactsLocation=$artifactsLocation _artifactsLocationSasToken=$artifactsLocationSasToken vmPrefix=$vmPrefix numberOfInstances=$numberOfInstances glassfishVersion=$glassfishVersion glassfishRelease=$glassfishRelease glassfishAdminPassword=$glassfishAdminPassword\n```\n\nPlease replace the variable values with your actual values before running the script.


verify_result
