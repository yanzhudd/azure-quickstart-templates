arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.17.1.54307", "templateHash": "13045471063543149627"}}, "parameters": {"storagename": {"type": "string", "defaultValue": "[format(\'storage{0}\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Storage Account name"}}, "vm_dns": {"type": "string", "defaultValue": "[format(\'winssh-{0}\', uniqueString(resourceGroup().id))]", "metadata": {"description": "VM DNS label prefix"}}, "adminUser": {"type": "string", "metadata": {"description": "Admin user for VM"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "defaultValue": "[newGuid()]"}, "publicSshKey": {"type": "string", "metadata": {"description": "Your public SSH key"}, "defaultValue": "zytest"}, "vmsize": {"type": "string", "defaultValue": "Standard_D4s_v5", "metadata": {"description": "VM size for VM"}}, "vmSku": {"type": "string", "defaultValue": "2022-datacenter-core-smalldisk-g2", "allowedValues": ["2019-datacenter-core-g2", "2019-datacenter-core-smalldisk-g2", "2022-datacenter-core-g2", "2022-datacenter-core-smalldisk-g2", "2022-datacenter-azure-edition-core", "2022-datacenter-azure-edition-core-smalldisk"], "metadata": {"description": "SKU of the Windows Server"}}, "diskSku": {"type": "string", "defaultValue": "StandardSSD_LRS", "allowedValues": ["Standard_LRS", "StandardSSD_LRS", "Premium_LRS"], "metadata": {"description": "SKU of the attached data disk (Standard HDD, Standard SSD or Premium SSD)"}}, "diskSizeGB": {"type": "int", "defaultValue": 256, "metadata": {"description": "Size of the attached data disk in GB"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Deployment location"}}, "_artifactsLocation": {"type": "string", "defaultValue": "[deployment().properties.templateLink.uri]", "metadata": {"description": "The base URI where artifacts required by this template are located including a trailing \'/\'"}}, "_artifactsLocationSasToken": {"type": "securestring", "defaultValue": "", "metadata": {"description": "SAS Token for accessing script path"}}, "secureBoot": {"type": "bool", "defaultValue": true, "metadata": {"description": "Secure Boot setting of the virtual machine."}}, "vTPM": {"type": "bool", "defaultValue": true, "metadata": {"description": "vTPM setting of the virtual machine."}}}, "variables": {"vmName": "sshhost", "extensionName": "GuestAttestation", "extensionPublisher": "Microsoft.Azure.Security.WindowsAttestation", "extensionVersion": "1.0", "maaTenantName": "GuestAttestation", "initScriptUrl": "[uri(parameters(\'_artifactsLocation\'), format(\'initialize.ps1{0}\', parameters(\'_artifactsLocationSasToken\')))]", "sshdConfigUrl": "[uri(parameters(\'_artifactsLocation\'), format(\'configs/sshd_config_wopwd{0}\', parameters(\'_artifactsLocationSasToken\')))]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2021-06-01", "name": "[toLower(parameters(\'storagename\'))]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage", "tags": {"displayName": "Storage account"}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-11-01", "name": "publicIP", "location": "[parameters(\'location\')]", "tags": {"displayName": "PublicIPAddress"}, "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'vm_dns\')]"}}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-04-01", "name": "nsg", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "rdp", "properties": {"description": "description", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "3389", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Deny", "priority": 100, "direction": "Inbound"}}, {"name": "ssh", "properties": {"description": "description", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "22", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 110, "direction": "Inbound"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-04-01", "name": "virtualNetwork", "location": "[parameters(\'location\')]", "tags": {"displayName": "Virtual Network"}, "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "subnet", "properties": {"addressPrefix": "10.0.0.0/24", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', \'nsg\')]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', \'nsg\')]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-04-01", "name": "nic", "location": "[parameters(\'location\')]", "tags": {"displayName": "Network Interface"}, "properties": {"ipConfigurations": [{"name": "ipConfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', \'publicIP\')]"}, "subnet": {"id": "[reference(resourceId(\'Microsoft.Network/virtualNetworks\', \'virtualNetwork\'), \'2020-04-01\').subnets[0].id]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', \'publicIP\')]", "[resourceId(\'Microsoft.Network/virtualNetworks\', \'virtualNetwork\')]"]}, {"type": "Microsoft.Compute/disks", "apiVersion": "2020-09-30", "name": "datadisk", "location": "[parameters(\'location\')]", "properties": {"diskSizeGB": "[parameters(\'diskSizeGB\')]", "creationData": {"createOption": "Empty"}}, "sku": {"name": "[parameters(\'diskSku\')]"}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2021-07-01", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "Windows Server with SSH"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmsize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUser\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'vmSku\')]", "version": "latest"}, "osDisk": {"name": "osdisk", "caching": "ReadWrite", "createOption": "FromImage"}, "dataDisks": [{"createOption": "Attach", "lun": 0, "managedDisk": {"id": "[resourceId(\'Microsoft.Compute/disks\', \'datadisk\')]"}}]}, "securityProfile": {"uefiSettings": {"secureBootEnabled": "[parameters(\'secureBoot\')]", "vTpmEnabled": "[parameters(\'vTPM\')]"}, "securityType": "TrustedLaunch"}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', \'nic\')]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', toLower(parameters(\'storagename\'))), \'2021-06-01\').primaryEndpoints.blob]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/disks\', \'datadisk\')]", "[resourceId(\'Microsoft.Network/networkInterfaces\', \'nic\')]", "[resourceId(\'Microsoft.Storage/storageAccounts\', toLower(parameters(\'storagename\')))]"]}, {"condition": "[and(parameters(\'vTPM\'), parameters(\'secureBoot\'))]", "type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2022-03-01", "name": "[format(\'{0}/{1}\', variables(\'vmName\'), \'GuestAttestation\')]", "location": "[parameters(\'location\')]", "properties": {"publisher": "[variables(\'extensionPublisher\')]", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "enableAutomaticUpgrade": true, "settings": {"AttestationConfig": {"MaaSettings": {"maaEndpoint": "", "maaTenantName": "[variables(\'maaTenantName\')]"}, "AscSettings": {"ascReportingEndpoint": "", "ascReportingFrequency": ""}, "useCustomToken": "false", "disableAlerts": "false"}}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', variables(\'vmName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2021-07-01", "name": "[format(\'{0}/{1}\', variables(\'vmName\'), \'setupScript\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "Setup script for SSH"}, "properties": {"publisher": "Microsoft.Compute", "type": "CustomScriptExtension", "typeHandlerVersion": "1.10", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[variables(\'initScriptUrl\')]", "[variables(\'sshdConfigUrl\')]"]}, "protectedSettings": {"commandToExecute": "[format(\'powershell -ExecutionPolicy Bypass -file initialize.ps1 -publicSshKey \\"{0}\\"\', parameters(\'publicSshKey\'))]"}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', variables(\'vmName\'))]"]}], "outputs": {"sshhost_connect": {"type": "string", "value": "[format(\'ssh {0}@{1}\', parameters(\'adminUser\'), reference(resourceId(\'Microsoft.Network/publicIPAddresses\', \'publicIP\'), \'2020-11-01\').dnsSettings.fqdn)]"}}}


cli_script
Below is the translated bash script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\nstoragename=$(echo "storage$(echo -n $(az group show --name <ResourceGroupName> --query id --output tsv) | shasum -a 256 | cut -c1-13)")\nvm_dns=$(echo "winssh-$(echo -n $(az group show --name <ResourceGroupName> --query id --output tsv) | shasum -a 256 | cut -c1-13)")\nadminUser="zytest"\nadminPassword=$(uuidgen)\npublicSshKey="zytest"\nvmsize="Standard_D4s_v5"\nvmSku="2022-datacenter-core-smalldisk-g2"\ndiskSku="StandardSSD_LRS"\ndiskSizeGB=256\nlocation="westus"\n_artifactsLocation=$(az deployment group show --name <DeploymentName> --resource-group <ResourceGroupName> --query properties.templateLink.uri --output tsv)\n_artifactsLocationSasToken=""\nsecureBoot=true\nvTPM=true\n\n# Create Storage Account\naz storage account create \\\n    --name $storagename \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --kind Storage \\\n    --tags displayName="Storage account"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name publicIP \\\n    --location $location \\\n    --tags displayName="PublicIPAddress" \\\n    --dns-name $vm_dns \\\n    --allocation-method Dynamic\n\n# Create Network Security Group and Rules\naz network nsg create \\\n    --name nsg \\\n    --location $location\n\n# Deny RDP rule\naz network nsg rule create \\\n    --nsg-name nsg \\\n    --name rdp \\\n    --priority 100 \\\n    --direction Inbound \\\n    --access Deny \\\n    --protocol Tcp \\\n    --destination-port-range 3389\n\n# Allow SSH rule\naz network nsg rule create \\\n    --nsg-name nsg \\\n    --name ssh \\\n    --priority 110 \\\n    --direction Inbound \\\n    --access Allow \\\n    --protocol Tcp \\\n    --destination-port-range 22\n\n# Create Virtual Network and Subnet\naz network vnet create \\\n    --name virtualNetwork \\\n    --location $location \\\n    --address-prefixes 10.0.0.0/16 \\\n    --subnet-name subnet \\\n    --subnet-prefix 10.0.0.0/24 \\\n    --network-security-group nsg\n\n# Create Network Interface\naz network nic create \\\n    --name nic \\\n    --location $location \\\n    --vnet-name virtualNetwork \\\n    --subnet subnet \\\n    --public-ip-address publicIP\n\n# Create Data Disk\naz disk create \\\n    --name datadisk \\\n    --location $location \\\n    --size-gb $diskSizeGB \\\n    --sku $diskSku \\\n    --create-option Empty\n\n# Create Virtual Machine\naz vm create \\\n    --name sshhost \\\n    --location $location \\\n    --tags displayName="Windows Server with SSH" \\\n    --size $vmsize \\\n    --admin-username $adminUser \\\n    --admin-password $adminPassword \\\n    --image MicrosoftWindowsServer:WindowsServer:$vmSku:latest \\\n    --os-disk-name osdisk \\\n    --nics nic \\\n    --attach-data-disks datadisk \\\n    --boot-diagnostics-storage $storagename \\\n    --secure-boot $secureBoot \\\n    --enable-vtpm $vTPM\n\n# Create VM Extension for Guest Attestation (if vTPM and secureBoot are true)\nif [ "$vTPM" = true ] && [ "$secureBoot" = true ]; then\n    az vm extension set \\\n        --vm-name sshhost \\\n        --name GuestAttestation \\\n        --publisher Microsoft.Azure.Security.WindowsAttestation \\\n        --version 1.0 \\\n        --settings \'{"AttestationConfig":{"MaaSettings":{"maaEndpoint":"","maaTenantName":"GuestAttestation"},"AscSettings":{"ascReportingEndpoint":"","ascReportingFrequency":""},"useCustomToken":"false","disableAlerts":"false"}}\'\nfi\n\n# Create VM Extension for Setup Script\naz vm extension set \\\n    --vm-name sshhost \\\n    --name setupScript \\\n    --publisher Microsoft.Compute \\\n    --version 1.10 \\\n    --settings \'{"fileUris":["\'$_artifactsLocation\'initialize.ps1\'$_artifactsLocationSasToken\'","\'$_artifactsLocation\'configs/sshd_config_wopwd\'$_artifactsLocationSasToken\'"]}\' \\\n    --protected-settings \'{"commandToExecute":"powershell -ExecutionPolicy Bypass -file initialize.ps1 -publicSshKey \\"\'$publicSshKey\'\\""}\'\n\n# Output the SSH connection string\npublicIp=$(az network public-ip show --name publicIP --query ipAddress --output tsv)\necho "ssh $adminUser@$publicIp"\n```\n\nPlease replace `<ResourceGroupName>` and `<DeploymentName>` with your actual Azure Resource Group name and deployment name where applicable. Also, ensure that you have the necessary permissions and that the Azure CLI is installed and configured to interact with your Azure subscription.


verify_result
