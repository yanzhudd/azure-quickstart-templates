arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.5.6.12127", "templateHash": "2460534072844581148"}}, "parameters": {"adminPasswordOrKey": {"type": "secureString", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "instanceCount": {"type": "int", "defaultValue": 5, "maxValue": 16, "minValue": 1, "metadata": {"description": "Number of VM instances (16 or less)."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for resources. Default is the current resource group location."}}, "publicIPPrefixLength": {"type": "int", "defaultValue": 28, "allowedValues": [28, 29, 30, 31], "metadata": {"description": "Length of public IP prefix."}}, "vmSku": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of VMs in the VM Scale Set."}}, "vmssName": {"type": "string", "maxLength": 9, "metadata": {"description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."}, "defaultValue": "zytest"}, "dnsName": {"type": "string", "maxLength": 61, "minLength": 3, "metadata": {"description": "String used to connect to your VMSS VM using dnsName.location.cloudapp.azure.com (must be globally unique)"}, "defaultValue": "zytest"}}, "variables": {"linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[format(\'/home/{0}/.ssh/authorized_keys\', parameters(\'adminUsername\'))]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "osType": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18.04-LTS", "version": "latest"}, "imageReference": "[variables(\'osType\')]", "publicIPAddressName": "[format(\'{0}pip\', parameters(\'vmssName\'))]", "publicIPPrefixName": "[format(\'{0}pubipprefix\', parameters(\'vmssName\'))]", "virtualNetworkName": "[format(\'{0}vnet\', parameters(\'vmssName\'))]", "subnetName": "[format(\'{0}subnet\', parameters(\'vmssName\'))]", "addressPrefix": "10.0.0.0/16", "subnetPrefix": "10.0.0.0/24", "loadBalancerName": "[format(\'{0}lb\', parameters(\'vmssName\'))]", "natPoolName": "[format(\'{0}natpool\', parameters(\'vmssName\'))]", "natStartPort": 50000, "natEndPort": 50120, "natBackendPort": 22, "bePoolName": "[format(\'{0}bepool\', parameters(\'vmssName\'))]", "nicName": "[format(\'{0}nic\', parameters(\'vmssName\'))]", "ipConfigName": "[format(\'{0}ipconfig\', parameters(\'vmssName\'))]"}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2021-02-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"type": "Microsoft.Network/publicIPPrefixes", "apiVersion": "2021-02-01", "name": "[variables(\'publicIPPrefixName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard", "tier": "Regional"}, "properties": {"prefixLength": "[parameters(\'publicIPPrefixLength\')]", "publicIPAddressVersion": "IPv4"}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2021-02-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard", "tier": "Regional"}, "properties": {"publicIPAllocationMethod": "Static", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsName\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "apiVersion": "2020-05-01", "name": "[variables(\'loadBalancerName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard"}, "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'bePoolName\')]"}], "inboundNatPools": [{"name": "[variables(\'natPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'loadBalancerName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": "[variables(\'natStartPort\')]", "frontendPortRangeEnd": "[variables(\'natEndPort\')]", "backendPort": "[variables(\'natBackendPort\')]"}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"]}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "apiVersion": "2020-06-01", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[parameters(\'vmSku\')]", "tier": "Standard", "capacity": "[parameters(\'instanceCount\')]"}, "properties": {"overprovision": false, "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadOnly", "createOption": "FromImage"}, "imageReference": "[variables(\'imageReference\')]"}, "osProfile": {"computerNamePrefix": "[parameters(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "[variables(\'nicName\')]", "properties": {"primary": true, "ipConfigurations": [{"name": "[variables(\'ipConfigName\')]", "properties": {"subnet": {"id": "[format(\'{0}/subnets/{1}\', resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\')), variables(\'subnetName\'))]"}, "publicIPAddressConfiguration": {"name": "pub1", "properties": {"idleTimeoutInMinutes": 15, "publicIPPrefix": {"id": "[resourceId(\'Microsoft.Network/publicIPPrefixes\', variables(\'publicIPPrefixName\'))]"}}}, "loadBalancerBackendAddressPools": [{"id": "[format(\'{0}/backendAddressPools/{1}\', resourceId(\'Microsoft.Network/loadBalancers\', variables(\'loadBalancerName\')), variables(\'bePoolName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[format(\'{0}/inboundNatPools/{1}\', resourceId(\'Microsoft.Network/loadBalancers\', variables(\'loadBalancerName\')), variables(\'natPoolName\'))]"}]}}]}}]}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'loadBalancerName\'))]", "[resourceId(\'Microsoft.Network/publicIPPrefixes\', variables(\'publicIPPrefixName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}]}


cli_script
Based on the provided ARM template and parameters, here is the equivalent Azure CLI script in Bash:\n\n```bash\n#!/bin/bash\n\n# Define variables from template parameters\nadminPasswordOrKey="zytest" # SecureString, SSH Key or password for the Virtual Machine.\nadminUsername="zytest" # Admin username on all VMs.\nauthenticationType="sshPublicKey" # Type of authentication to use on the Virtual Machine. SSH key is recommended.\ninstanceCount=5 # Number of VM instances (16 or less).\nlocation="westus" # Location for resources.\npublicIPPrefixLength=28 # Length of public IP prefix.\nvmSku="Standard_D2_v3" # Size of VMs in the VM Scale Set.\nvmssName="zytest" # String used as a base for naming resources.\ndnsName="zytest" # String used to connect to your VMSS VM using dnsName.location.cloudapp.azure.com.\n\n# Define variables from the ARM template\'s variables\npublicIPAddressName="${vmssName}pip"\npublicIPPrefixName="${vmssName}pubipprefix"\nvirtualNetworkName="${vmssName}vnet"\nsubnetName="${vmssName}subnet"\naddressPrefix="10.0.0.0/16"\nsubnetPrefix="10.0.0.0/24"\nloadBalancerName="${vmssName}lb"\nnatPoolName="${vmssName}natpool"\nnatStartPort=50000\nnatEndPort=50120\nnatBackendPort=22\nbePoolName="${vmssName}bepool"\nnicName="${vmssName}nic"\nipConfigName="${vmssName}ipconfig"\n\n# Create a Virtual Network\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --location $location \\\n  --address-prefixes $addressPrefix \\\n  --subnet-name $subnetName \\\n  --subnet-prefix $subnetPrefix\n\n# Create a Public IP Prefix\naz network public-ip prefix create \\\n  --name $publicIPPrefixName \\\n  --location $location \\\n  --length $publicIPPrefixLength\n\n# Create a Public IP Address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --sku Standard \\\n  --allocation-method Static \\\n  --dns-name $dnsName\n\n# Create a Load Balancer\npublicIPAddressId=$(az network public-ip show --name $publicIPAddressName --query id -o tsv)\naz network lb create \\\n  --name $loadBalancerName \\\n  --location $location \\\n  --frontend-ip-name LoadBalancerFrontEnd \\\n  --public-ip-address $publicIPAddressId \\\n  --backend-pool-name $bePoolName\n\n# Create an Inbound NAT Pool\naz network lb inbound-nat-pool create \\\n  --lb-name $loadBalancerName \\\n  --name $natPoolName \\\n  --protocol Tcp \\\n  --frontend-port-range-start $natStartPort \\\n  --frontend-port-range-end $natEndPort \\\n  --backend-port $natBackendPort \\\n  --frontend-ip-name LoadBalancerFrontEnd\n\n# Create a Virtual Machine Scale Set\nsubnetId=$(az network vnet subnet show --vnet-name $virtualNetworkName --name $subnetName --query id -o tsv)\npublicIPPrefixId=$(az network public-ip prefix show --name $publicIPPrefixName --query id -o tsv)\nbePoolId=$(az network lb address-pool show --lb-name $loadBalancerName --name $bePoolName --query id -o tsv)\nnatPoolId=$(az network lb inbound-nat-pool show --lb-name $loadBalancerName --name $natPoolName --query id -o tsv)\n\naz vmss create \\\n  --name $vmssName \\\n  --location $location \\\n  --vm-sku $vmSku \\\n  --instance-count $instanceCount \\\n  --upgrade-policy-mode Manual \\\n  --admin-username $adminUsername \\\n  --authentication-type $authenticationType \\\n  --admin-password $adminPasswordOrKey \\\n  --image Canonical:UbuntuServer:18.04-LTS:latest \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetId \\\n  --public-ip-per-vm \\\n  --public-ip-prefix $publicIPPrefixId \\\n  --load-balancer $loadBalancerName \\\n  --backend-pool-name $bePoolName \\\n  --nat-pool $natPoolId\n\n# Note: The above script assumes that the SSH public key is already set up in the Azure portal for the given admin username.\n```\n\nPlease note that the above script is a direct translation of the provided ARM template and parameters. It assumes that the SSH public key is already set up in the Azure portal for the given admin username. If that is not the case, you will need to modify the script accordingly to provide the SSH public key.


verify_result
