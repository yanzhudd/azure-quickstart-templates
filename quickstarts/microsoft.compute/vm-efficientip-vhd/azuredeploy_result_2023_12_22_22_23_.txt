arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the VM"}, "defaultValue": "zytest"}, "osType": {"type": "string", "defaultValue": "Linux", "allowedValues": ["Linux"], "metadata": {"description": "Type of OS on the existing vhd"}}, "osDiskVhdUri": {"type": "string", "metadata": {"description": "URI of the existing VHD in ARM standard or premium storage"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "Size of the VM"}}, "vmDiskSizeGB": {"type": "string", "defaultValue": "150", "allowedValues": ["150", "300"], "metadata": {"description": "Diskspace size of the VM"}}, "existingVirtualNetworkResourceGroup": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "Name of the existing VNET resource group"}}, "existingVirtualNetworkName": {"type": "string", "metadata": {"description": "Name of the existing VNET"}, "defaultValue": "zytest"}, "subnetName": {"type": "string", "metadata": {"description": "Name of the subnet in the virtual network you want to use"}, "defaultValue": "zytest"}, "existingSecurityGroupName": {"type": "string", "metadata": {"description": "Name of the network Security Group that needs to be assocated to virtual NIC. "}, "defaultValue": "zytest"}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"diagStorageAccountName": "[concat(uniquestring(resourceGroup().id), \'specvm\')]", "publicIPAddressType": "Dynamic", "subnetRef": "[resourceId(parameters(\'existingVirtualNetworkResourceGroup\'), \'Microsoft.Network/virtualNetworks/subnets\', parameters(\'existingVirtualNetworkName\'),  parameters(\'subnetName\'))]", "nicName": "[parameters(\'vmName\')]", "publicIPAddressName": "[parameters(\'vmName\')]"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'diagStorageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_GRS"}, "kind": "Storage", "properties": {}}, {"apiVersion": "2015-06-15", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "PublicIPAddress"}, "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2017-03-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "tags": {"displayName": "NetworkInterface"}, "properties": {"networkSecurityGroup": {"id": "[resourceId(parameters(\'existingVirtualNetworkResourceGroup\'), \'Microsoft.Network/networkSecurityGroups\', parameters(\'existingSecurityGroupName\'))]"}, "ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/disks", "apiVersion": "2017-03-30", "name": "[concat(parameters(\'vmName\'), \'_OSdisk\')]", "location": "[parameters(\'location\')]", "properties": {"creationData": {"createOption": "Import", "sourceUri": "[parameters(\'osDiskVhdUri\')]"}, "osType": "[parameters(\'osType\')]"}}, {"apiVersion": "2017-03-30", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "VirtualMachine"}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]", "[resourceId(\'Microsoft.Compute/disks\', concat(parameters(\'vmName\'), \'_OSdisk\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "storageProfile": {"osDisk": {"osType": "[parameters(\'osType\')]", "caching": "ReadWrite", "managedDisk": {"id": "[resourceId(\'Microsoft.Compute/disks\', concat(parameters(\'vmName\'), \'_OSdisk\'))]"}, "createOption": "Attach", "diskSizeGB": "[parameters(\'vmDiskSizeGB\')]"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'diagStorageAccountName\')), \'2020-08-01-preview\').primaryEndpoints.blob]"}}}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmName="zytest"\nosType="Linux"\nosDiskVhdUri="zytest"\nvmSize="Standard_A1_v2"\nvmDiskSizeGB="150"\nexistingVirtualNetworkResourceGroup=$(az group show --query name --output tsv)\nexistingVirtualNetworkName="zytest"\nsubnetName="zytest"\nexistingSecurityGroupName="zytest"\ndnsNameForPublicIP="zytest"\nlocation="westus"\n\n# Define variables\ndiagStorageAccountName=$(az storage account create --name $(echo -n $vmName | md5sum | cut -c 1-24)specvm --location $location --sku Standard_GRS --kind Storage --query name --output tsv)\npublicIPAddressType="Dynamic"\nsubnetRef=$(az network vnet subnet show --resource-group $existingVirtualNetworkResourceGroup --vnet-name $existingVirtualNetworkName --name $subnetName --query id --output tsv)\nnicName=$vmName\npublicIPAddressName=$vmName\n\n# Create resources\naz storage account create --name $diagStorageAccountName --location $location --sku Standard_GRS --kind Storage\naz network public-ip create --name $publicIPAddressName --location $location --allocation-method $publicIPAddressType --dns-name $dnsNameForPublicIP\naz network nic create --name $nicName --location $location --subnet $subnetRef --network-security-group $(az network nsg show --resource-group $existingVirtualNetworkResourceGroup --name $existingSecurityGroupName --query id --output tsv) --public-ip-address $publicIPAddressName\naz disk create --name ${vmName}_OSdisk --location $location --source $osDiskVhdUri --os-type $osType\naz vm create --name $vmName --location $location --size $vmSize --os-type $osType --attach-os-disk ${vmName}_OSdisk --nics $nicName --boot-diagnostics-storage $diagStorageAccountName\n```\n\nThis script first defines all the parameters and variables, then creates the resources in the order specified in the ARM template. The `az` command is used to interact with Azure resources. The `--query` option is used to extract specific data from the output of the `az` command, and the `--output tsv` option is used to format the output as tab-separated values, which can be easily used in the script.


verify_result
