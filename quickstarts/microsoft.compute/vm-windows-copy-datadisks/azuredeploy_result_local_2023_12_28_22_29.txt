arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[concat(\'ddvm-\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "OSVersion": {"type": "string", "defaultValue": "2019-Datacenter", "allowedValues": ["2019-Datacenter", "2016-Datacenter", "2016-Datacenter-Server-Core", "2016-Datacenter-Server-Core-smalldisk", "2016-Datacenter-smalldisk", "2016-Datacenter-with-Containers", "2016-Nano-Server"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."}}, "numberOfDataDisks": {"type": "int", "minValue": 0, "maxValue": 16, "defaultValue": 16, "metadata": {"description": "The number of dataDisks to be returned in the output array."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D8s_v3", "metadata": {"description": "description"}}}, "variables": {"imagePublisher": "MicrosoftWindowsServer", "imageOffer": "WindowsServer", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "publicIPAddressName": "myPublicIP", "publicIPAddressType": "Dynamic", "vmName": "VMDataDisks", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "networkSecurityGroupName": "default-NSG"}, "resources": [{"apiVersion": "2020-05-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-06-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[parameters(\'OSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "copy": [{"name": "dataDisks", "count": "[parameters(\'numberOfDataDisks\')]", "input": {"diskSizeGB": 1023, "lun": "[copyIndex(\'dataDisks\')]", "createOption": "Empty"}}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}}}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\nadminUsername="zytest"\nadminPassword="zytest"\n# The dnsLabelPrefix parameter is dynamically generated in ARM using the uniqueString function.\n# Since Azure CLI does not have an equivalent, you will need to generate this beforehand or set it manually.\ndnsLabelPrefix="your-unique-dns-label-prefix"\nOSVersion="2019-Datacenter"\nnumberOfDataDisks=16\nlocation="westus"\nvmSize="Standard_D8s_v3"\n\n# Variables (hardcoded from ARM template as they are not parameterized)\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressName="myPublicIP"\npublicIPAddressType="Dynamic"\nvmName="VMDataDisks"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="default-NSG"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method $publicIPAddressType \\\n    --dns-name $dnsLabelPrefix\n\n# Create Network Security Group\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Create a security rule that allows traffic on port 3389\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name default-allow-3389 \\\n    --priority 1000 \\\n    --access Allow \\\n    --direction Inbound \\\n    --destination-port-ranges 3389 \\\n    --protocol Tcp \\\n    --source-address-prefix \'*\' \\\n    --source-port-range \'*\' \\\n    --destination-address-prefix \'*\'\n\n# Create Virtual Network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefixes $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix \\\n    --network-security-group $networkSecurityGroupName\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --public-ip-address $publicIPAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --size $vmSize \\\n    --image $imagePublisher:$imageOffer:$OSVersion:latest \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPassword\n\n# Add data disks to the VM\nfor ((i=0; i<$numberOfDataDisks; i++)); do\n    az vm disk attach \\\n        --vm-name $vmName \\\n        --name "${vmName}_datadisk${i}" \\\n        --new \\\n        --size-gb 1023 \\\n        --lun $i\ndone\n\n# Output hostname (FQDN) - This command assumes that the public IP address has been created and associated with the VM.\n# Replace <resource-group-name> with your actual resource group name.\naz network public-ip show \\\n    --name $publicIPAddressName \\\n    --query "[dnsSettings.fqdn]" \\\n    --output tsv\n```\n\nPlease note that the `dnsLabelPrefix` should be unique across Azure, so you\'ll need to generate or set this value manually. The script also assumes that you replace `<resource-group-name>` with the actual name of your resource group when querying for the FQDN at the end.


verify_result
