arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"masterNodeCount": {"type": "int", "minValue": 1, "maxValue": 50, "metadata": {"description": "Number of master node in VMSS; if singlePlacementGroup is true (the default), then this value must be 100 or less; if singlePlacementGroup is false, then ths value must be 50 or less"}, "defaultValue": "zytest"}, "masterNodeSku": {"defaultValue": "Standard_A1", "type": "string", "metadata": {"description": "Size of VMs in the VM Scale Set for master node."}}, "dataNodeSku": {"defaultValue": "Standard_D4S_v3", "type": "string", "metadata": {"description": "Size of VMs in the VM Scale Set for data node."}}, "dataNodeCount": {"type": "int", "minValue": 1, "maxValue": 100, "metadata": {"description": "Number of data nodes in VMSS; if singlePlacementGroup is true (the default), then this value must be 100 or less; if singlePlacementGroup is false, then ths value must be 100 or less"}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username on all VMs."}, "defaultValue": "zytest"}, "osImagePublisher": {"type": "string", "defaultValue": "OpenLogic", "metadata": {"description": "Maps to the publisher in the Azure Stack Platform Image Repository manifest file."}}, "osImageOffer": {"type": "string", "defaultValue": "CentOS", "metadata": {"description": "Maps to the Offer in the Azure Stack Platform Image Repository manifest file."}}, "osImageSku": {"type": "string", "defaultValue": "7.4", "metadata": {"description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOS version. Default value: 7.4"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"vmssName": "[concat(\'vmss\', uniqueString(resourceGroup().id, deployment().name))]", "vnetName": "[concat(\'vnet-\', variables(\'vmssName\'))]", "subnetMaster": "[concat(\'mastersubnet-\', variables(\'vmssName\'))]", "subnetData": "[concat(\'datasubnet-\', variables(\'vmssName\'))]", "masterPublicIPAddressName": "[toLower(concat(\'pip-master\', variables(\'vmssName\')))]", "dataPublicIPAddressName": "[toLower(concat(\'pip-data\', variables(\'vmssName\')))]", "vmssDomainName": "[toLower(concat(\'pubdns\', variables(\'vmssName\')))]", "masterNodeLoadBalancerName": "[concat(\'LB-MasterN\', variables(\'vmssName\'))]", "dataNodeLoadBalancerName": "[concat(\'LB-DataN\', variables(\'vmssName\'))]", "masterNodeLoadBalancerFrontEndName": "[concat(\'LBFrontEnd\', variables(\'vmssName\'))]", "dataNodeLoadBalancerFrontEndName": "[concat(\'LBFrontEnd\', variables(\'vmssName\'))]", "masterNodeLoadBalancerBackEndName": "[concat(\'LBBackEnd\',variables(\'vmssName\'))]", "dataNodeLoadBalancerBackEndName": "[concat(\'LBBackEnd\',variables(\'vmssName\'))]", "masterNodeLoadBalancerProbeName": "[concat(\'LBHttpProbe\', variables(\'vmssName\'))]", "dataNodeLoadBalancerProbeName": "[concat(\'LBHttpProbe\', variables(\'vmssName\'))]", "masterNodeLoadBalancerNatPoolName": "[concat(\'LBNatPool\', variables(\'vmssName\'))]", "dataNodeLoadBalancerNatPoolName": "[concat(\'LBNatPool\', variables(\'vmssName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'vnetName\')]", "apiVersion": "2023-04-01", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetMaster\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}, {"name": "[variables(\'subnetData\')]", "properties": {"addressPrefix": "10.0.1.0/24"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'masterPublicIPAddressName\')]", "apiVersion": "2023-04-01", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[concat(variables(\'vmssDomainName\'),\'-master-node\')]"}}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'dataPublicIPAddressName\')]", "apiVersion": "2023-04-01", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[concat(variables(\'vmssDomainName\'),\'-data-node\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'masterNodeLoadBalancerName\')]", "apiVersion": "2023-04-01", "location": "[parameters(\'location\')]", "properties": {"frontendIPConfigurations": [{"name": "[variables(\'masterNodeLoadBalancerFrontEndName\')]", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'masterPublicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'masterNodeLoadBalancerBackendName\')]"}], "loadBalancingRules": [{"name": "roundRobinLBRule", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerFrontEndName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerBackendName\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerProbeName\'))]"}}}], "probes": [{"name": "[variables(\'masterNodeLoadBalancerProbeName\')]", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}], "inboundNatPools": [{"name": "[variables(\'masterNodeLoadBalancerNatPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerFrontEndName\'))]"}, "protocol": "Tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50019, "backendPort": 22}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'masterPublicIPAddressName\'))]"]}, {"type": "Microsoft.Network/loadBalancers", "name": "[variables(\'dataNodeLoadBalancerName\')]", "apiVersion": "2023-04-01", "location": "[parameters(\'location\')]", "properties": {"frontendIPConfigurations": [{"name": "[variables(\'dataNodeLoadBalancerFrontEndName\')]", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'dataPublicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'dataNodeLoadBalancerBackendName\')]"}], "loadBalancingRules": [{"name": "roundRobinLBRule", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerFrontEndName\'))]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerBackendName\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerProbeName\'))]"}}}], "probes": [{"name": "[variables(\'dataNodeLoadBalancerProbeName\')]", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}], "inboundNatPools": [{"name": "[variables(\'dataNodeLoadBalancerNatPoolName\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerFrontEndName\'))]"}, "protocol": "Tcp", "frontendPortRangeStart": 50000, "frontendPortRangeEnd": 50019, "backendPort": 22}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'dataPublicIPAddressName\'))]"]}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "sku": {"name": "[parameters(\'masterNodeSku\')]", "tier": "Standard", "capacity": "[parameters(\'masterNodeCount\')]"}, "name": "[concat(variables(\'vmssName\'), \'-master-node\')]", "apiVersion": "2023-03-01", "location": "[parameters(\'location\')]", "properties": {"upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}, "imageReference": {"publisher": "[parameters(\'osImagePublisher\')]", "offer": "[parameters(\'osImageOffer\')]", "sku": "[parameters(\'osImageSku\')]", "version": "latest"}}, "osProfile": {"computerNamePrefix": "[variables(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "nic", "properties": {"primary": true, "ipConfigurations": [{"name": "ipconfig", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetMaster\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerBackEndName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'masterNodeLoadBalancerName\'), variables(\'masterNodeLoadBalancerNatPoolName\'))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmssName\'),\'-LinuxCustomScriptExtension\')]", "properties": {"publisher": "Microsoft.OSTCExtensions", "type": "CustomScriptForLinux", "typeHandlerVersion": "1.3", "autoUpgradeMinorVersion": true, "settings": {"commandToExecute": "touch test1.txt"}}}]}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'masterNodeLoadBalancerName\'))]"]}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "sku": {"name": "[parameters(\'dataNodeSku\')]", "tier": "Standard", "capacity": "[parameters(\'dataNodeCount\')]"}, "name": "[concat(variables(\'vmssName\'), \'-data-node\')]", "apiVersion": "2023-03-01", "location": "[parameters(\'location\')]", "properties": {"upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}, "imageReference": {"publisher": "[parameters(\'osImagePublisher\')]", "offer": "[parameters(\'osImageOffer\')]", "sku": "[parameters(\'osImageSku\')]", "version": "latest"}}, "osProfile": {"computerNamePrefix": "[variables(\'vmssName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "nic", "properties": {"primary": true, "ipConfigurations": [{"name": "ipconfig", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'vnetName\'), variables(\'subnetData\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerBackendName\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'dataNodeLoadBalancerName\'), variables(\'dataNodeLoadBalancerNatPoolName\'))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmssName\'),\'-LinuxCustomScriptExtension\')]", "properties": {"publisher": "Microsoft.OSTCExtensions", "type": "CustomScriptForLinux", "typeHandlerVersion": "1.3", "autoUpgradeMinorVersion": true, "settings": {"commandToExecute": "touch test2.txt"}}}]}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers\', variables(\'dataNodeLoadBalancerName\'))]"]}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nmasterNodeCount="zytest"\nmasterNodeSku="Standard_A1"\ndataNodeSku="Standard_D4S_v3"\ndataNodeCount="zytest"\nadminUsername="zytest"\nosImagePublisher="OpenLogic"\nosImageOffer="CentOS"\nosImageSku="7.4"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Create virtual network\naz network vnet create --name vnet-vmss --address-prefix 10.0.0.0/16 --location $location\n\n# Create subnets\naz network vnet subnet create --name mastersubnet-vmss --vnet-name vnet-vmss --address-prefix 10.0.0.0/24\naz network vnet subnet create --name datasubnet-vmss --vnet-name vnet-vmss --address-prefix 10.0.1.0/24\n\n# Create public IP addresses\naz network public-ip create --name pip-master-vmss --allocation-method Dynamic --dns-name pubdns-vmss-master-node --location $location\naz network public-ip create --name pip-data-vmss --allocation-method Dynamic --dns-name pubdns-vmss-data-node --location $location\n\n# Create load balancers\naz network lb create --name LB-MasterN-vmss --frontend-ip-name LBFrontEnd-vmss --public-ip-address pip-master-vmss --backend-pool-name LBBackEnd-vmss --location $location\naz network lb create --name LB-DataN-vmss --frontend-ip-name LBFrontEnd-vmss --public-ip-address pip-data-vmss --backend-pool-name LBBackEnd-vmss --location $location\n\n# Create virtual machine scale sets\naz vmss create --name vmss-master-node --vm-sku $masterNodeSku --instance-count $masterNodeCount --image $osImagePublisher:$osImageOffer:$osImageSku:latest --admin-username $adminUsername --admin-password $adminPasswordOrKey --vnet-name vnet-vmss --subnet mastersubnet-vmss --location $location\naz vmss create --name vmss-data-node --vm-sku $dataNodeSku --instance-count $dataNodeCount --image $osImagePublisher:$osImageOffer:$osImageSku:latest --admin-username $adminUsername --admin-password $adminPasswordOrKey --vnet-name vnet-vmss --subnet datasubnet-vmss --location $location\n\n# Add extensions to VMSS\naz vmss extension set --publisher Microsoft.OSTCExtensions --name CustomScriptForLinux --version 1.3 --resource-group myResourceGroup --vmss-name vmss-master-node --settings \'{"commandToExecute":"touch test1.txt"}\'\naz vmss extension set --publisher Microsoft.OSTCExtensions --name CustomScriptForLinux --version 1.3 --resource-group myResourceGroup --vmss-name vmss-data-node --settings \'{"commandToExecute":"touch test2.txt"}\'\n```\n\nPlease replace the placeholder values with your actual values. Also, please note that this script assumes that you have already logged in to Azure CLI using `az login` command.


verify_result
