arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine"}, "defaultValue": "zytest"}, "aadClientID": {"type": "string", "metadata": {"description": "Client ID of AAD app which has permissions to KeyVault"}, "defaultValue": "zytest"}, "aadClientCertThumbprint": {"type": "string", "metadata": {"description": "Thumbprint of the certificate associated with the AAD app which has permissions to KeyVault"}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "keyVaultResourceGroup": {"type": "string", "metadata": {"description": "Resource group of the KeyVault"}, "defaultValue": "zytest"}, "useExistingKek": {"type": "string", "defaultValue": "nokek", "allowedValues": ["nokek", "kek"], "metadata": {"description": "Select kek if the secret should be encrypted with a key encryption key and pass explicit keyEncryptionKeyURL. For nokek, you can keep keyEncryptionKeyURL empty."}}, "keyEncryptionKeyURL": {"type": "string", "defaultValue": "", "metadata": {"description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"}}, "volumeType": {"type": "string", "defaultValue": "All", "metadata": {"description": "Type of the volume OS or Data to perform encryption operation"}}, "sequenceVersion": {"type": "string", "defaultValue": "1.0", "metadata": {"description": "Pass in an unique value like a GUID everytime the operation needs to be force run"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"extensionName": "AzureDiskEncryption", "extensionVersion": "1.1", "encryptionOperation": "EnableEncryption", "keyEncryptionAlgorithm": "RSA-OAEP", "updateVmUrl": "[concat(\'https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-encrypt-running-windows-vm/updatevm-\',parameters(\'useExistingKek\'),\'.json\')]", "keyVaultURL": "[concat(\'https://\', parameters(\'keyVaultName\'), \'.vault.azure.net/\')]", "keyVaultResourceID": "[concat(subscription().id,\'/resourceGroups/\',parameters(\'keyVaultResourceGroup\'),\'/providers/Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(parameters(\'vmName\'),\'/\', variables(\'extensionName\'))]", "apiVersion": "2016-04-30-preview", "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "AzureDiskEncryption", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "forceUpdateTag": "[parameters(\'sequenceVersion\')]", "settings": {"AADClientID": "[parameters(\'aadClientID\')]", "AADClientCertThumbprint": "[parameters(\'aadClientCertThumbprint\')]", "KeyVaultURL": "[variables(\'keyVaultURL\')]", "KeyEncryptionKeyURL": "[parameters(\'keyEncryptionKeyURL\')]", "KeyEncryptionAlgorithm": "[variables(\'keyEncryptionAlgorithm\')]", "VolumeType": "[parameters(\'volumeType\')]", "EncryptionOperation": "[variables(\'encryptionOperation\')]"}}}, {"name": "updatevm", "type": "Microsoft.Resources/deployments", "apiVersion": "2015-01-01", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/extensions\',  parameters(\'vmName\'), variables(\'extensionName\'))]"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'updateVmUrl\')]", "contentVersion": "1.0.0.0"}, "parameters": {"vmName": {"value": "[parameters(\'vmName\')]"}, "keyVaultResourceID": {"value": "[variables(\'keyVaultResourceID\')]"}, "keyVaultSecretUrl": {"value": "[reference(resourceId(\'Microsoft.Compute/virtualMachines/extensions\',  parameters(\'vmName\'), variables(\'extensionName\'))).instanceView.statuses[0].message]"}, "keyEncryptionKeyURL": {"value": "[parameters(\'keyEncryptionKeyURL\')]"}}}}], "outputs": {"BitLockerKey": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Compute/virtualMachines/extensions\',  parameters(\'vmName\'), variables(\'extensionName\'))).instanceView.statuses[0].message]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmName="zytest"\naadClientID="zytest"\naadClientCertThumbprint="zytest"\nkeyVaultName="zytest"\nkeyVaultResourceGroup="zytest"\nuseExistingKek="nokek"\nkeyEncryptionKeyURL=""\nvolumeType="All"\nsequenceVersion="1.0"\nlocation="westus"\n\n# Define variables\nextensionName="AzureDiskEncryption"\nextensionVersion="1.1"\nencryptionOperation="EnableEncryption"\nkeyEncryptionAlgorithm="RSA-OAEP"\nupdateVmUrl="https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-encrypt-running-windows-vm/updatevm-$useExistingKek.json"\nkeyVaultURL="https://$keyVaultName.vault.azure.net/"\nkeyVaultResourceID="/subscriptions/{subscriptionId}/resourceGroups/$keyVaultResourceGroup/providers/Microsoft.KeyVault/vaults/$keyVaultName"\n\n# Create Microsoft.Compute/virtualMachines/extensions resource\naz vm extension set \\\n  --resource-group $keyVaultResourceGroup \\\n  --vm-name $vmName \\\n  --name $extensionName \\\n  --publisher Microsoft.Azure.Security \\\n  --version $extensionVersion \\\n  --settings "{\'AADClientID\': \'$aadClientID\', \'AADClientCertThumbprint\': \'$aadClientCertThumbprint\', \'KeyVaultURL\': \'$keyVaultURL\', \'KeyEncryptionKeyURL\': \'$keyEncryptionKeyURL\', \'KeyEncryptionAlgorithm\': \'$keyEncryptionAlgorithm\', \'VolumeType\': \'$volumeType\', \'EncryptionOperation\': \'$encryptionOperation\'}" \\\n  --location $location\n\n# Create Microsoft.Resources/deployments resource\naz group deployment create \\\n  --resource-group $keyVaultResourceGroup \\\n  --template-uri $updateVmUrl \\\n  --parameters "{\'vmName\': {\'value\': \'$vmName\'}, \'keyVaultResourceID\': {\'value\': \'$keyVaultResourceID\'}, \'keyVaultSecretUrl\': {\'value\': \'$keyVaultURL\'}, \'keyEncryptionKeyURL\': {\'value\': \'$keyEncryptionKeyURL\'}}"\n```\n\nPlease replace `{subscriptionId}` with your actual Azure subscription ID.


verify_result
