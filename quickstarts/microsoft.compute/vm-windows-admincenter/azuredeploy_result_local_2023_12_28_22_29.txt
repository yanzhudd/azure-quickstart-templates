arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "metadata": {"_generator": {"name": "bicep", "version": "0.5.6.12127", "templateHash": "11838008456592452284"}}, "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "secureString", "minLength": 12, "metadata": {"description": "Password for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[toLower(format(\'{0}-{1}\', parameters(\'vmName\'), uniqueString(resourceGroup().id, parameters(\'vmName\'))))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "publicIpName": {"type": "string", "defaultValue": "myPublicIP", "metadata": {"description": "Name for the Public IP used to access the Virtual Machine."}}, "publicIPAllocationMethod": {"type": "string", "defaultValue": "Dynamic", "allowedValues": ["Dynamic", "Static"], "metadata": {"description": "Allocation method for the Public IP used to access the Virtual Machine."}}, "publicIpSku": {"type": "string", "defaultValue": "Basic", "allowedValues": ["Basic", "Standard"], "metadata": {"description": "SKU for the Public IP used to access the Virtual Machine."}}, "OSVersion": {"type": "string", "defaultValue": "2022-datacenter-azure-edition", "allowedValues": ["2022-datacenter-azure-edition", "2022-datacenter-azure-edition-core", "2022-datacenter-azure-edition-core-smalldisk", "2022-datacenter-azure-edition-smalldisk", "2022-datacenter-g2", "2022-datacenter-core-g2", "2022-datacenter-core-smalldisk-g2", "2022-datacenter-smalldisk-g2", "2019-datacenter-gensecond", "2019-datacenter-core-gensecond", "2019-datacenter-core-smalldisk-gensecond", "2019-datacenter-core-with-containers-gensecond", "2019-datacenter-core-with-containers-smalldisk-g2", "2019-datacenter-smalldisk-gensecond", "2019-datacenter-with-containers-gensecond", "2019-datacenter-with-containers-smalldisk-g2", "2016-datacenter-gensecond"], "metadata": {"description": "The Windows version for the VM. This will pick a fully patched Gen2 image of this given Windows version."}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the virtual machine."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "vmName": {"type": "string", "defaultValue": "simple-vm", "metadata": {"description": "Name of the virtual machine."}}}, "variables": {"storageAccountName": "[format(\'bootdiags{0}\', uniqueString(resourceGroup().id))]", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "virtualNetworkName": "MyVNET", "networkSecurityGroupName": "default-NSG", "windowsAdminCenterPort": 6516}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "apiVersion": "2021-08-01", "name": "[variables(\'storageAccountName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage"}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2021-05-01", "name": "[parameters(\'publicIpName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "[parameters(\'publicIpSku\')]"}, "properties": {"publicIPAllocationMethod": "[parameters(\'publicIPAllocationMethod\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2021-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-3389", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "3389", "protocol": "Tcp", "sourcePortRange": "*", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*"}}, {"name": "default-allow-admincenter", "properties": {"priority": 1001, "access": "Allow", "direction": "Inbound", "destinationPortRange": "[string(variables(\'windowsAdminCenterPort\'))]", "protocol": "Tcp", "sourcePortRange": "*", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*"}}]}}, {"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2021-05-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"]}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2021-05-01", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]"}, "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}}}]}, "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2021-11-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "[parameters(\'OSVersion\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage", "managedDisk": {"storageAccountType": "StandardSSD_LRS"}}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))).primaryEndpoints.blob]"}}}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]", "[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))]"]}, {"type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2021-11-01", "name": "[format(\'{0}/{1}\', parameters(\'vmName\'), \'AdminCenter\')]", "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.AdminCenter", "type": "AdminCenter", "typeHandlerVersion": "0.0", "autoUpgradeMinorVersion": true, "settings": {"port": "[variables(\'windowsAdminCenterPort\')]", "salt": "[guid(resourceGroup().id, parameters(\'vmName\'))]"}}, "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"]}], "outputs": {"hostname": {"type": "string", "value": "[reference(resourceId(\'Microsoft.Network/publicIPAddresses\', parameters(\'publicIpName\'))).dnsSettings.fqdn]"}}}


cli_script
Below is the translated Azure CLI script from the provided ARM template. Please note that the script assumes that you have already logged in to the Azure CLI and set your subscription context accordingly.\n\n```bash\n#!/bin/bash\n\n# Parameters\nadminUsername="zytest"\nadminPassword="zytest" # Please replace with a secure password\ndnsLabelPrefix="simple-vm-uniquestring" # Replace \'uniquestring\' with the actual unique string\npublicIpName="myPublicIP"\npublicIPAllocationMethod="Dynamic"\npublicIpSku="Basic"\nOSVersion="2022-datacenter-azure-edition"\nvmSize="Standard_D2s_v3"\nlocation="westus"\nvmName="simple-vm"\n\n# Variables (Replace uniqueString function with actual values)\nstorageAccountName="bootdiagsuniquestring" # Replace \'uniquestring\' with the actual unique string\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="default-NSG"\nwindowsAdminCenterPort=6516\n\n# Create a storage account\naz storage account create \\\n  --name $storageAccountName \\\n  --location $location \\\n  --sku Standard_LRS \\\n  --kind Storage\n\n# Create a public IP address\naz network public-ip create \\\n  --name $publicIpName \\\n  --location $location \\\n  --allocation-method $publicIPAllocationMethod \\\n  --sku $publicIpSku \\\n  --dns-name $dnsLabelPrefix\n\n# Create a network security group and rules\naz network nsg create \\\n  --name $networkSecurityGroupName \\\n  --location $location\n\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name default-allow-3389 \\\n  --priority 1000 \\\n  --access Allow \\\n  --direction Inbound \\\n  --protocol Tcp \\\n  --destination-port-range 3389 \\\n  --source-address-prefix \'*\' \\\n  --destination-address-prefix \'*\'\n\naz network nsg rule create \\\n  --nsg-name $networkSecurityGroupName \\\n  --name default-allow-admincenter \\\n  --priority 1001 \\\n  --access Allow \\\n  --direction Inbound \\\n  --protocol Tcp \\\n  --destination-port-range $windowsAdminCenterPort \\\n  --source-address-prefix \'*\' \\\n  --destination-address-prefix \'*\'\n\n# Create a virtual network and subnet\naz network vnet create \\\n  --name $virtualNetworkName \\\n  --location $location \\\n  --address-prefix $addressPrefix \\\n  --subnet-name $subnetName \\\n  --subnet-prefix $subnetPrefix \\\n  --network-security-group $networkSecurityGroupName\n\n# Create a network interface\naz network nic create \\\n  --name $nicName \\\n  --location $location \\\n  --vnet-name $virtualNetworkName \\\n  --subnet $subnetName \\\n  --public-ip-address $publicIpName\n\n# Create a virtual machine\naz vm create \\\n  --name $vmName \\\n  --location $location \\\n  --nics $nicName \\\n  --image Win2022Datacenter \\\n  --size $vmSize \\\n  --admin-username $adminUsername \\\n  --admin-password $adminPassword \\\n  --os-disk-storage-account-type StandardSSD_LRS \\\n  --enable-boot-diagnostics \\\n  --storage-account $storageAccountName\n\n# Add Admin Center extension to the virtual machine\naz vm extension set \\\n  --vm-name $vmName \\\n  --name AdminCenter \\\n  --publisher Microsoft.AdminCenter \\\n  --settings \'{"port": "\'$windowsAdminCenterPort\'", "salt": "unique-guid"}\' # Replace \'unique-guid\' with the actual GUID\n\n# Output hostname\nhostname=$(az network public-ip show --name $publicIpName --query "dnsSettings.fqdn" -o tsv)\necho "Hostname: $hostname"\n```\n\nPlease ensure that you replace placeholder values like \'uniquestring\' and \'unique-guid\' with actual unique strings and GUIDs as required. The `az network public-ip show` command at the end retrieves the fully qualified domain name (FQDN) of the public IP address and outputs it to the console.


verify_result
