arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"location": {"metadata": {"description": "The Location For the resources"}, "type": "string", "defaultValue": "westus"}, "adminPasswordOrKey": {"metadata": {"description": "OS Admin password or SSH Key depending on value of authentication type"}, "type": "securestring", "defaultValue": "zytest"}, "adminUsername": {"metadata": {"description": "Username for the Virtual Machine."}, "type": "string", "defaultValue": "zytest"}, "authenticationType": {"allowedValues": ["password", "sshPublicKey"], "defaultValue": "password", "metadata": {"description": "Authentication type"}, "type": "string"}, "nsgId": {"defaultValue": null, "metadata": {"description": "The nsg id for the VM"}, "type": "string"}, "operatingSystem": {"type": "string", "metadata": {"description": "OS for the VM, this is the offer and SKU concatenated with underscores and then mapped to a variable"}, "defaultValue": "zytest"}, "storageAccountId": {"defaultValue": "", "metadata": {"description": "The storage account Id for boot diagnostics for the VMs"}, "type": "string"}, "subnetRef": {"type": "string", "defaultValue": "zytest"}, "vmSize": {"defaultValue": "Standard_DS2_V3", "metadata": {"description": "The size of the VM to create"}, "type": "string"}, "vmName": {"metadata": {"description": "The name of the vm"}, "type": "string", "defaultValue": "zytest"}}, "variables": {"isWindowsOS": "[bool(contains(toLower(variables(\'imageReference\')[parameters(\'operatingSystem\')].offer), \'windows\'))]", "imageReference": {"UbuntuServer_16.04-LTS": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "16.04-LTS", "version": "latest"}, "UbuntuServer_18.04-LTS": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18.04-LTS", "version": "latest"}, "WindowsServer_2016-DataCenter": {"publisher": "MicrosoftWindowsServer", "offer": "WindowsServer", "sku": "2016-Datacenter", "version": "latest"}}, "windowsConfiguration": {"provisionVmAgent": "true"}, "publicIPAddressName": "publicIp", "nicName": "nic", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "enableBootDiags": "[not(equals(parameters(\'storageAccountId\'), \'\'))]"}, "resources": [{"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-08-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "Dynamic"}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2018-07-01", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[parameters(\'subnetRef\')]"}}}], "networkSecurityGroup": {"id": "[parameters(\'nsgId\')]"}}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2017-03-30", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'nicName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]", "windowsConfiguration": "[if(variables(\'isWindowsOS\'), variables(\'windowsConfiguration\'), json(\'null\'))]"}, "storageProfile": {"imageReference": "[variables(\'imageReference\')[parameters(\'operatingSystem\')]]"}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": "[variables(\'enableBootDiags\')]", "storageUri": "[if(variables(\'enableBootDiags\'), reference(parameters(\'storageAccountId\'), \'2018-02-01\').primaryEndpoints.blob, json(\'null\'))]"}}}}], "outputs": {"publicIpId": {"type": "string", "value": "[resourceId(\'Microsoft.Network/publicIpAddresses\', variables(\'publicIPAddressName\'))]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nlocation="westus"\nadminPasswordOrKey="zytest"\nadminUsername="zytest"\nauthenticationType="password"\nnsgId=""\noperatingSystem="zytest"\nstorageAccountId=""\nsubnetRef="zytest"\nvmSize="Standard_DS2_V3"\nvmName="zytest"\n\n# Define variables\npublicIPAddressName="publicIp"\nnicName="nic"\n\n# Create public IP address\naz network public-ip create --name $publicIPAddressName --resource-group myResourceGroup --location $location --allocation-method Dynamic\n\n# Create network interface\naz network nic create --name $nicName --resource-group myResourceGroup --location $location --subnet $subnetRef --network-security-group $nsgId --public-ip-address $publicIPAddressName\n\n# Create virtual machine\nif [ "$authenticationType" == "password" ]\nthen\n    az vm create --resource-group myResourceGroup --name $vmName --location $location --nics $nicName --size $vmSize --image $operatingSystem --admin-username $adminUsername --admin-password $adminPasswordOrKey --storage-account $storageAccountId\nelse\n    az vm create --resource-group myResourceGroup --name $vmName --location $location --nics $nicName --size $vmSize --image $operatingSystem --admin-username $adminUsername --ssh-key-value $adminPasswordOrKey --storage-account $storageAccountId\nfi\n\n# Output public IP address ID\npublicIpId=$(az network public-ip show --name $publicIPAddressName --resource-group myResourceGroup --query id --output tsv)\necho "Public IP Address ID: $publicIpId"\n```\n\nPlease replace `myResourceGroup` with your actual resource group name.


verify_result
