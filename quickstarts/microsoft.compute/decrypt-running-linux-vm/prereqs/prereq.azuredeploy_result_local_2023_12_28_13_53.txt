arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "metadata": {"description": "User name for the Virtual Machine."}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "keyVaultResourceGroup": {"type": "string", "metadata": {"description": "Resource group of the KeyVault"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1", "metadata": {"description": "VM Size"}}, "keyEncryptionKeyURL": {"type": "string", "defaultValue": "", "metadata": {"description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"nicName": "myVMNic", "subnetName": "Subnet", "vmName": "MyLinuxVM", "virtualNetworkName": "MyVNET", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets/\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "extensionName": "AzureDiskEncryptionForLinux", "extensionVersion": "1.1", "encryptionOperation": "EnableEncryption", "keyEncryptionAlgorithm": "RSA-OAEP", "keyVaultResourceID": "[resourceId(parameters(\'keyVaultResourceGroup\'), \'Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"apiVersion": "2020-11-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"apiVersion": "2020-11-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "16.04-DAILY-LTS", "version": "latest"}, "osDisk": {"createOption": "FromImage"}, "dataDisks": [{"diskSizeGB": 1023, "lun": 0, "createOption": "Empty"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmName\'),\'/\', variables(\'extensionName\'))]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/\', variables(\'vmName\'))]"], "apiVersion": "2020-12-01", "properties": {"publisher": "Microsoft.Azure.Security", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[reference(variables(\'keyVaultResourceId\'),\'2018-02-14-preview\').vaultUri]", "KeyVaultResourceId": "[variables(\'keyVaultResourceID\')]", "KeyEncryptionKeyURL": "[parameters(\'keyEncryptionKeyURL\')]", "KekVaultResourceId": "[variables(\'keyVaultResourceID\')]", "KeyEncryptionAlgorithm": "[variables(\'keyEncryptionAlgorithm\')]", "VolumeType": "DATA", "ResizeOSDisk": false}}}], "outputs": {"vmName": {"type": "string", "value": "[variables(\'vmName\')]"}}}


cli_script
Below is the translated bash script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Template Parameters\nadminUsername="zytest"\nkeyVaultName="zytest"\nkeyVaultResourceGroup="zytest"\nvmSize="Standard_A1"\nkeyEncryptionKeyURL=""\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Variables\nnicName="myVMNic"\nsubnetName="Subnet"\nvmName="MyLinuxVM"\nvirtualNetworkName="MyVNET"\nsubnetRef=$(az network vnet subnet show --name "$subnetName" --vnet-name "$virtualNetworkName" --query id --output tsv)\nextensionName="AzureDiskEncryptionForLinux"\nextensionVersion="1.1"\nencryptionOperation="EnableEncryption"\nkeyEncryptionAlgorithm="RSA-OAEP"\nkeyVaultResourceID=$(az keyvault show --name "$keyVaultName" --resource-group "$keyVaultResourceGroup" --query id --output tsv)\nlinuxConfiguration=$(echo "{\\"disablePasswordAuthentication\\": true, \\"ssh\\": {\\"publicKeys\\": [{\\"path\\": \\"/home/$adminUsername/.ssh/authorized_keys\\", \\"keyData\\": \\"$adminPasswordOrKey\\"}]}}")\n\n# Create Virtual Network\naz network vnet create \\\n  --name "$virtualNetworkName" \\\n  --resource-group "$keyVaultResourceGroup" \\\n  --location "$location" \\\n  --address-prefixes "10.0.0.0/16" \\\n  --subnet-name "$subnetName" \\\n  --subnet-prefix "10.0.0.0/24"\n\n# Create Network Interface\naz network nic create \\\n  --name "$nicName" \\\n  --resource-group "$keyVaultResourceGroup" \\\n  --location "$location" \\\n  --vnet-name "$virtualNetworkName" \\\n  --subnet "$subnetRef"\n\n# Create Virtual Machine\nif [ "$authenticationType" == "sshPublicKey" ]; then\n  az vm create \\\n    --name "$vmName" \\\n    --resource-group "$keyVaultResourceGroup" \\\n    --location "$location" \\\n    --nics "$nicName" \\\n    --size "$vmSize" \\\n    --image "Canonical:UbuntuServer:16.04-DAILY-LTS:latest" \\\n    --admin-username "$adminUsername" \\\n    --ssh-key-value "$adminPasswordOrKey" \\\n    --authentication-type "ssh" \\\n    --generate-ssh-keys\nelse\n  az vm create \\\n    --name "$vmName" \\\n    --resource-group "$keyVaultResourceGroup" \\\n    --location "$location" \\\n    --nics "$nicName" \\\n    --size "$vmSize" \\\n    --image "Canonical:UbuntuServer:16.04-DAILY-LTS:latest" \\\n    --admin-username "$adminUsername" \\\n    --admin-password "$adminPasswordOrKey" \\\n    --authentication-type "password"\nfi\n\n# Add Disk Encryption Extension\naz vm extension set \\\n  --resource-group "$keyVaultResourceGroup" \\\n  --vm-name "$vmName" \\\n  --name "$extensionName" \\\n  --publisher "Microsoft.Azure.Security" \\\n  --version "$extensionVersion" \\\n  --settings "{\\"EncryptionOperation\\":\\"$encryptionOperation\\",\\"KeyVaultURL\\":\\"$(az keyvault show --name \\"$keyVaultName\\" --resource-group \\"$keyVaultResourceGroup\\" --query properties.vaultUri --output tsv)\\",\\"KeyVaultResourceId\\":\\"$keyVaultResourceID\\",\\"KeyEncryptionKeyURL\\":\\"$keyEncryptionKeyURL\\",\\"KekVaultResourceId\\":\\"$keyVaultResourceID\\",\\"KeyEncryptionAlgorithm\\":\\"$keyEncryptionAlgorithm\\",\\"VolumeType\\":\\"DATA\\",\\"ResizeOSDisk\\":false}"\n\n# Output the VM name\necho "VM Name: $vmName"\n```\n\nPlease note that the ARM template provided contains a resourceId function which is not directly translatable to CLI. Instead, the script uses the `az` CLI commands to retrieve the IDs required. Additionally, the script assumes that the resource group for the KeyVault is the same as the resource group for the rest of the resources, which may not be the case in all scenarios. Adjust the resource group names in the script as necessary.


verify_result
