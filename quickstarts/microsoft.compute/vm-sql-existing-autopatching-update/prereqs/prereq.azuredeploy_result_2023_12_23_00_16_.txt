arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSize": {"type": "string", "metadata": {"description": "Virtual Machine size"}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Username to access virtual Machines"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "minLength": 12, "metadata": {"description": "Password to access virtual Machines"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"storageAccountName": "[concat(uniqueString(resourceGroup().id),\'storage\')]", "vmNSGName": "ExistingNsg", "ipAddressName": "ExistingPip", "virtualNetworkName": "ExistingVNet", "vmNicName": "ExistingNic", "vmName": "ExistingWinVm"}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2020-08-01-preview", "location": "[parameters(\'location\')]", "comments": "Storage account used to store VM disks", "tags": {"displayName": "Storage Account"}, "sku": {"name": "Standard_LRS"}, "kind": "Storage", "properties": {}}, {"type": "Microsoft.Network/networkSecurityGroups", "name": "[variables(\'vmNSGName\')]", "apiVersion": "2016-03-30", "location": "[parameters(\'location\')]", "comments": "NSG for the VM subnet.", "tags": {"displayName": "VM NSG"}}, {"type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'ipAddressName\')]", "apiVersion": "2016-03-30", "location": "[parameters(\'location\')]", "comments": " Public IP used by the Jump VM", "tags": {"displayName": "VM Public IP"}, "properties": {"publicIPAllocationMethod": "Static", "idleTimeoutInMinutes": 4}}, {"type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "apiVersion": "2016-03-30", "location": "[parameters(\'location\')]", "comments": "Virtual network for overall solution", "tags": {"displayName": "Virtual Network"}, "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'vmNSGName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "default", "properties": {"addressPrefix": "10.0.1.0/24", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'vmNSGName\'))]"}}}]}}, {"type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'vmNicName\')]", "apiVersion": "2016-03-30", "location": "[parameters(\'location\')]", "comments": "NIC for the VM", "tags": {"displayName": "VM NIC"}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'ipAddressName\'))]"}, "subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'),\'default\')]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "apiVersion": "2017-03-30", "location": "[parameters(\'location\')]", "comments": "Windows VM", "tags": {"displayName": "Virtual Machine"}, "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'vmNicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "windowsvm", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "windowsConfiguration": {"provisionVmAgent": "true"}}, "storageProfile": {"imageReference": {"publisher": "MicrosoftSQLServer", "offer": "SQL2014SP2-WS2012R2", "sku": "Enterprise", "version": "latest"}, "osDisk": {"name": "[concat(variables(\'vmName\'), \'_OSDisk\')]", "caching": "ReadWrite", "createOption": "FromImage"}, "dataDisks": [{"name": "[concat(variables(\'vmName\'), \'_DataDisk1\')]", "createOption": "Empty", "lun": 0, "diskSizeGB": 1023, "caching": "ReadOnly"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'vmNicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts/\', variables(\'storageAccountName\'))).primaryEndpoints.blob]"}}}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmName\'), \'/SqlIaasExtension\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', variables(\'vmName\'))]"], "properties": {"type": "SqlIaaSAgent", "publisher": "Microsoft.SqlServer.Management", "typeHandlerVersion": "1.2", "autoUpgradeMinorVersion": "true", "settings": {"AutoTelemetrySettings": {"Region": "[parameters(\'location\')]"}, "AutoPatchingSettings": {"PatchCategory": "WindowsMandatoryUpdates", "Enable": true, "DayOfWeek": "Sunday", "MaintenanceWindowStartingHour": "2", "MaintenanceWindowDuration": "60"}, "KeyVaultCredentialSettings": {"Enable": false}, "ServerConfigurationsManagementSettings": {"SQLConnectivityUpdateSettings": {"ConnectivityType": "Private", "Port": "1433"}, "SQLWorkloadTypeUpdateSettings": {"SQLWorkloadType": "GENERAL"}, "SQLStorageUpdateSettings": {"DiskCount": "1", "NumberOfColumns": "1", "StartingDeviceID": "2", "DiskConfigurationType": "NEW"}, "AdditionalFeaturesServerConfigurations": {"IsRServicesEnabled": "false"}}}}}], "outputs": {"existingVirtualMachineName": {"type": "string", "value": "[variables(\'vmName\')]"}}}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nvmSize="zytest"\nadminUsername="zytest"\nadminPassword="zytest"\nlocation="westus"\n\n# Define variables\nstorageAccountName=$(az group show --name myResourceGroup --query id -o tsv)storage\nvmNSGName="ExistingNsg"\nipAddressName="ExistingPip"\nvirtualNetworkName="ExistingVNet"\nvmNicName="ExistingNic"\nvmName="ExistingWinVm"\n\n# Create a storage account\naz storage account create --name $storageAccountName --location $location --sku Standard_LRS --kind Storage\n\n# Create a network security group\naz network nsg create --name $vmNSGName --location $location\n\n# Create a public IP address\naz network public-ip create --name $ipAddressName --location $location --allocation-method Static --idle-timeout 4\n\n# Create a virtual network\naz network vnet create --name $virtualNetworkName --location $location --address-prefix 10.0.0.0/16 --subnet-name default --subnet-prefix 10.0.1.0/24 --network-security-group $vmNSGName\n\n# Create a network interface\naz network nic create --name $vmNicName --location $location --vnet-name $virtualNetworkName --subnet default --public-ip-address $ipAddressName\n\n# Create a virtual machine\naz vm create --name $vmName --location $location --size $vmSize --admin-username $adminUsername --admin-password $adminPassword --nics $vmNicName --storage-account $storageAccountName --image MicrosoftSQLServer:SQL2014SP2-WS2012R2:Enterprise:latest --data-disk-sizes-gb 1023\n\n# Add SQL IaaS extension to the VM\naz vm extension set --name SqlIaasExtension --publisher Microsoft.SqlServer.Management --version 1.2 --vm-name $vmName --settings \'{"AutoTelemetrySettings": {"Region": "\'$location\'"}, "AutoPatchingSettings": {"PatchCategory": "WindowsMandatoryUpdates", "Enable": true, "DayOfWeek": "Sunday", "MaintenanceWindowStartingHour": "2", "MaintenanceWindowDuration": "60"}, "KeyVaultCredentialSettings": {"Enable": false}, "ServerConfigurationsManagementSettings": {"SQLConnectivityUpdateSettings": {"ConnectivityType": "Private", "Port": "1433"}, "SQLWorkloadTypeUpdateSettings": {"SQLWorkloadType": "GENERAL"}, "SQLStorageUpdateSettings": {"DiskCount": "1", "NumberOfColumns": "1", "StartingDeviceID": "2", "DiskConfigurationType": "NEW"}, "AdditionalFeaturesServerConfigurations": {"IsRServicesEnabled": "false"}}}\'\n\n# Output the VM name\necho $vmName\n```\n\nPlease replace `myResourceGroup` with your actual resource group name in the `storageAccountName` variable definition.


verify_result
