arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for the VM, only certain regions support zones during preview."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsLabelPrefix": {"type": "string", "defaultValue": "[concat(\'vm\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "authenticationType": {"type": "string", "defaultValue": "password", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "osType": {"type": "string", "allowedValues": ["Windows", "Linux"], "metadata": {"description": "This is the OS that your VM will be running"}, "defaultValue": "zytest"}, "osDiskVhdUri": {"type": "string", "metadata": {"description": "Uri of the your user image"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the VM, this sample uses a Gen 2 VM, see: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/generation-2#generation-2-vm-sizes"}}, "vmName": {"type": "string", "defaultValue": "vmFromImage", "metadata": {"description": "Name of the VM"}}}, "variables": {"storageAccountName": "[concat(\'diags\', uniquestring(resourceGroup().id))]", "imageName": "[concat(parameters(\'osType\'), \'-image\')]", "nicName": "myVMNic", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet", "subnetPrefix": "10.0.0.0/24", "publicIPAddressName": "myPublicIP", "virtualNetworkName": "MyVNET", "networkSecurityGroupName": "nsgAllowRemoting", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'storageAccountName\')]", "apiVersion": "2019-06-01", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage", "properties": {}}, {"type": "Microsoft.Compute/images", "apiVersion": "2019-12-01", "name": "[variables(\'imageName\')]", "location": "[parameters(\'location\')]", "properties": {"storageProfile": {"osDisk": {"osType": "[parameters(\'osType\')]", "osState": "Generalized", "blobUri": "[parameters(\'osDiskVhdUri\')]", "storageAccountType": "Standard_LRS"}}, "hyperVGeneration": "V2"}}, {"apiVersion": "2020-03-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard"}, "properties": {"publicIPAllocationMethod": "Static", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsLabelPrefix\')]"}}}, {"apiVersion": "2020-03-01", "type": "Microsoft.Network/networkSecurityGroups", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "RemoteConnection", "properties": {"description": "Allow RDP/SSH", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "[if(equals(parameters(\'osType\'), \'Windows\'), 3389, 22)]", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 100, "direction": "Inbound"}}]}}, {"apiVersion": "2020-03-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"apiVersion": "2020-03-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]", "[variables(\'virtualNetworkName\')]", "[variables(\'networkSecurityGroupName\')]"], "properties": {"networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}, "ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2019-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'storageAccountName\')]", "[variables(\'nicName\')]", "[variables(\'imageName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"id": "[resourceId(\'Microsoft.Compute/images\', variables(\'imageName\'))]"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(resourceId(\'Microsoft.Storage/storageAccounts\', variables(\'storageAccountName\'))).primaryEndpoints.blob]"}}}}], "outputs": {"hostname": {"type": "string", "value": "[reference(variables(\'publicIPAddressName\')).dnsSettings.fqdn]"}}}


cli_script
Below is the translated Azure CLI bash script from the given ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Assign template parameters to variables\nlocation="westus"\nadminUsername="zytest"\n# The dnsLabelPrefix would be dynamically generated in ARM template\n# but for CLI we will set a static value. You may need to change it to avoid conflicts.\ndnsLabelPrefix="vm$(uuidgen | cut -d \'-\' -f1)"\nauthenticationType="password"\nadminPasswordOrKey="zytest"\nosType="zytest"\nosDiskVhdUri="zytest"\nvmSize="Standard_D2s_v3"\nvmName="vmFromImage"\n\n# Variables from ARM template (not all variables are directly translatable to CLI)\nstorageAccountName="diags$(uuidgen | cut -d \'-\' -f1)"\nimageName="${osType}-image"\nnicName="myVMNic"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressName="myPublicIP"\nvirtualNetworkName="MyVNET"\nnetworkSecurityGroupName="nsgAllowRemoting"\n\n# Create a storage account\naz storage account create \\\n    --name $storageAccountName \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --kind Storage\n\n# Create an image\naz image create \\\n    --name $imageName \\\n    --location $location \\\n    --source $osDiskVhdUri \\\n    --os-type $osType \\\n    --hyper-v-generation V2\n\n# Create a public IP address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --sku Standard \\\n    --allocation-method Static \\\n    --dns-name $dnsLabelPrefix\n\n# Create a network security group and rule\naz network nsg create \\\n    --name $networkSecurityGroupName \\\n    --location $location\n\n# Add security rule for RDP/SSH\naz network nsg rule create \\\n    --nsg-name $networkSecurityGroupName \\\n    --name RemoteConnection \\\n    --protocol Tcp \\\n    --direction Inbound \\\n    --priority 100 \\\n    --source-address-prefix \'*\' \\\n    --source-port-range \'*\' \\\n    --destination-address-prefix \'*\' \\\n    --destination-port-range $( [ "$osType" = "Windows" ] && echo "3389" || echo "22" ) \\\n    --access Allow\n\n# Create a virtual network\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $addressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create a network interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --network-security-group $networkSecurityGroupName \\\n    --public-ip-address $publicIPAddressName\n\n# Create a virtual machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --image $imageName \\\n    --size $vmSize \\\n    --admin-username $adminUsername \\\n    --admin-password $adminPasswordOrKey \\\n    --authentication-type $authenticationType\n\n# Retrieve and output the fully qualified domain name (FQDN)\nhostname=$(az network public-ip show --name $publicIPAddressName --query "dnsSettings.fqdn" -o tsv)\necho "Hostname: $hostname"\n```\n\nPlease note that ARM templates allow for dynamic expressions and functions such as `uniqueString(resourceGroup().id)`, which don\'t have direct equivalents in Azure CLI. For these, I have used placeholder values, such as generating a UUID with `uuidgen` and trimming it to simulate uniqueness. You may need to adjust these to fit your exact needs or ensure uniqueness in your environment.


verify_result
