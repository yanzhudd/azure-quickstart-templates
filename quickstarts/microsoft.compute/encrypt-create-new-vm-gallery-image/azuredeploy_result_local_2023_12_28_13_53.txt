arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine."}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin user name for the virtual machine."}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin user password for virtual machine."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2_v3", "metadata": {"description": "Size of VM"}}, "virtualNetworkName": {"type": "string", "metadata": {"description": "Name of VNET to which the VM NIC belongs to"}, "defaultValue": "zytest"}, "subnetName": {"type": "string", "metadata": {"description": "Name of Subnet to which the VM NIC belongs to"}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key"}, "defaultValue": "zytest"}, "enabledForDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."}}, "enabledForDiskEncryption": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."}}, "enabledForTemplateDeployment": {"type": "bool", "defaultValue": true, "metadata": {"description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."}}, "keysPermissions": {"type": "array", "defaultValue": ["list", "get", "decrypt", "encrypt", "unwrapkey", "wrapkey"], "metadata": {"description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."}}, "secretsPermissions": {"type": "array", "defaultValue": ["list", "get"], "metadata": {"description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."}}, "skuName": {"type": "string", "defaultValue": "Standard", "allowedValues": ["Standard", "Premium"], "metadata": {"description": "Specifies whether the key vault is a standard vault or a premium vault."}}}, "variables": {"imagePublisher": "MicrosoftWindowsServer", "imageOffer": "WindowsServer", "osSku": "2012-R2-Datacenter", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'), parameters(\'subnetName\'))]", "dnsNameForPublicIP": "[toLower(parameters(\'vmName\'))]", "publicIPAddressName": "[toLower(concat(\'publicIP\',parameters(\'vmName\')))]", "publicIPAddressType": "Dynamic", "nicName": "[toLower(concat(\'nic\',parameters(\'vmName\')))]", "encryptionOperation": "EnableEncryption", "keyVaultResourceId": "[resourceId(\'Microsoft.KeyVault/vaults\', parameters(\'keyVaultName\'))]"}, "resources": [{"type": "Microsoft.Network/VirtualNetworks", "apiVersion": "2020-11-01", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-11-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[variables(\'dnsNameForPublicIP\')]"}}}, {"type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-11-01", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/virtualMachines", "apiVersion": "2021-11-01", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "identity": {"type": "SystemAssigned"}, "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[parameters(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'osSku\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}, {"type": "Microsoft.KeyVault/vaults", "apiVersion": "2021-10-01", "name": "[parameters(\'keyVaultName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'vmName\'))]"], "properties": {"enabledForDeployment": "[parameters(\'enabledForDeployment\')]", "enabledForDiskEncryption": "[parameters(\'enabledForDiskEncryption\')]", "enabledForTemplateDeployment": "[parameters(\'enabledForTemplateDeployment\')]", "tenantId": "[subscription().tenantId]", "accessPolicies": [{"objectId": "[reference(resourceId(\'Microsoft.Compute/virtualMachines/\', parameters(\'vmName\')), \'2021-11-01\', \'full\').identity.principalId]", "tenantId": "[subscription().tenantId]", "permissions": {"keys": "[parameters(\'keysPermissions\')]", "secrets": "[parameters(\'secretsPermissions\')]"}}], "sku": {"name": "[parameters(\'skuName\')]", "family": "A"}, "networkAcls": {"defaultAction": "Allow", "bypass": "AzureServices"}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2021-11-01", "name": "[concat(parameters(\'vmName\'),\'/diskEncryption\')]", "dependsOn": ["[resourceId(\'Microsoft.KeyVault/vaults\', parameters(\'keyVaultName\'))]"], "location": "[parameters(\'location\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "AzureDiskEncryption", "typeHandlerVersion": "2.2", "autoUpgradeMinorVersion": true, "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[reference(variables(\'keyVaultResourceId\'), \'2021-10-01\').vaultUri]", "KeyVaultResourceId": "[variables(\'keyVaultResourceId\')]", "VolumeType": "All"}}}]}


cli_script
Below is the translated bash script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Assigning parameter values to variables\nvmName="zytest"\nadminUsername="zytest"\nadminPassword="zytest" # This should be a secure string in practice\nlocation="westus"\nvmSize="Standard_D2_v3"\nvirtualNetworkName="zytest"\nsubnetName="zytest"\nkeyVaultName="zytest"\nenabledForDeployment=true\nenabledForDiskEncryption=true\nenabledForTemplateDeployment=true\nkeysPermissions=(\'list\' \'get\' \'decrypt\' \'encrypt\' \'unwrapkey\' \'wrapkey\')\nsecretsPermissions=(\'list\' \'get\')\nskuName="Standard"\n\n# Variables from ARM template\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nosSku="2012-R2-Datacenter"\ndnsNameForPublicIP=$(echo "$vmName" | tr \'[:upper:]\' \'[:lower:]\')\npublicIPAddressName=$(echo "publicIP$vmName" | tr \'[:upper:]\' \'[:lower:]\')\npublicIPAddressType="Dynamic"\nnicName=$(echo "nic$vmName" | tr \'[:upper:]\' \'[:lower:]\')\nencryptionOperation="EnableEncryption"\n\n# Create Virtual Network\naz network vnet create \\\n    --name "$virtualNetworkName" \\\n    --location "$location" \\\n    --address-prefixes "10.0.0.0/16" \\\n    --subnet-name "$subnetName" \\\n    --subnet-prefix "10.0.0.0/24"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name "$publicIPAddressName" \\\n    --location "$location" \\\n    --allocation-method "$publicIPAddressType" \\\n    --dns-name "$dnsNameForPublicIP"\n\n# Create Network Interface\naz network nic create \\\n    --name "$nicName" \\\n    --location "$location" \\\n    --vnet-name "$virtualNetworkName" \\\n    --subnet "$subnetName" \\\n    --public-ip-address "$publicIPAddressName"\n\n# Create Virtual Machine\naz vm create \\\n    --name "$vmName" \\\n    --location "$location" \\\n    --size "$vmSize" \\\n    --nics "$nicName" \\\n    --admin-username "$adminUsername" \\\n    --admin-password "$adminPassword" \\\n    --image "$imagePublisher:$imageOffer:$osSku:latest" \\\n    --assign-identity\n\n# Get the VM principal ID for the Key Vault access policy\nvmPrincipalId=$(az vm show --name "$vmName" --query "identity.principalId" -o tsv)\n\n# Create Key Vault\naz keyvault create \\\n    --name "$keyVaultName" \\\n    --location "$location" \\\n    --enabled-for-deployment "$enabledForDeployment" \\\n    --enabled-for-disk-encryption "$enabledForDiskEncryption" \\\n    --enabled-for-template-deployment "$enabledForTemplateDeployment" \\\n    --sku "$skuName"\n\n# Set access policy for Key Vault\naz keyvault set-policy \\\n    --name "$keyVaultName" \\\n    --object-id "$vmPrincipalId" \\\n    --key-permissions "${keysPermissions[@]}" \\\n    --secret-permissions "${secretsPermissions[@]}"\n\n# Get the Key Vault resource ID and URI for the disk encryption extension\nkeyVaultResourceId=$(az keyvault show --name "$keyVaultName" --query "id" -o tsv)\nkeyVaultUri=$(az keyvault show --name "$keyVaultName" --query "properties.vaultUri" -o tsv)\n\n# Add the disk encryption extension to the VM\naz vm extension set \\\n    --resource-group "$(az vm show --name "$vmName" --query "resourceGroup" -o tsv)" \\\n    --vm-name "$vmName" \\\n    --name "diskEncryption" \\\n    --publisher "Microsoft.Azure.Security" \\\n    --extension-type "AzureDiskEncryption" \\\n    --settings "{\\"EncryptionOperation\\":\\"$encryptionOperation\\",\\"KeyVaultURL\\":\\"$keyVaultUri\\",\\"KeyVaultResourceId\\":\\"$keyVaultResourceId\\",\\"VolumeType\\":\\"All\\"}"\n```\n\nPlease note that the `adminPassword` should be handled securely and not in plaintext as shown in the script. Additionally, the `az vm extension set` command assumes the VM and Key Vault are in the same resource group; if not, you should specify the correct resource group.


verify_result
