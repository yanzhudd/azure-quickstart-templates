arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "defaultValue": "newvm", "metadata": {"description": "Name of the VM"}}, "osType": {"type": "string", "allowedValues": ["Windows", "Linux"], "defaultValue": "Windows", "metadata": {"description": "Type of OS on the existing vhd"}}, "osDiskVhdUri": {"type": "string", "metadata": {"description": "Uri of the existing VHD in ARM standard or premium storage"}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the VM"}}, "vNetNewOrExisting": {"type": "string", "defaultValue": "new", "allowedValues": ["new", "existing"], "metadata": {"description": "Specify whether to create a new or existing virtual network for the VM."}}, "virtualNetworkName": {"type": "string", "defaultValue": "newVnet", "metadata": {"description": "Name of the existing VNET"}}, "virtualNetworkResourceGroup": {"type": "string", "defaultValue": "[resourceGroup().name]", "metadata": {"description": "Name of the existing VNET resource group"}}, "subnetName": {"type": "string", "defaultValue": "subnet-1", "metadata": {"description": "Name of the subnet in the virtual network you want to use"}}, "dnsNameForPublicIP": {"type": "string", "defaultValue": "[concat(\'vm-\', uniqueString(resourceGroup().id))]", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}}, "variables": {"diagStorageAccountName": "[concat(uniquestring(resourceGroup().id), \'specvm\')]", "subnetRef": "[resourceId(parameters(\'virtualNetworkResourceGroup\'), \'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'),  parameters(\'subnetName\'))]", "nicName": "nic", "publicIPAddressName": "publicIp", "diskName": "[concat(parameters(\'vmName\'), \'-disk\')]"}, "resources": [{"condition": "[equals(parameters(\'vNetNewOrExisting\'), \'new\')]", "apiVersion": "2020-08-01", "type": "Microsoft.Network/virtualNetworks", "name": "[parameters(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Storage/storageAccounts", "name": "[variables(\'diagStorageAccountName\')]", "apiVersion": "2018-07-01", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "kind": "Storage", "properties": {}}, {"apiVersion": "2018-10-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "PublicIPAddress"}, "properties": {"publicIPAllocationMethod": "Dynamic", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2018-10-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'publicIPAddressName\')]"], "tags": {"displayName": "NetworkInterface"}, "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"type": "Microsoft.Compute/disks", "apiVersion": "2018-09-30", "name": "[variables(\'diskName\')]", "location": "[parameters(\'location\')]", "properties": {"creationData": {"createOption": "Import", "sourceUri": "[parameters(\'osDiskVhdUri\')]"}, "osType": "[parameters(\'osType\')]"}}, {"apiVersion": "2018-10-01", "type": "Microsoft.Compute/virtualMachines", "name": "[parameters(\'vmName\')]", "location": "[parameters(\'location\')]", "tags": {"displayName": "VirtualMachine"}, "dependsOn": ["[variables(\'nicName\')]", "[variables(\'diskName\')]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "storageProfile": {"osDisk": {"osType": "[parameters(\'osType\')]", "createOption": "Attach", "managedDisk": {"id": "[resourceId(\'Microsoft.Compute/disks\', variables(\'diskName\'))]"}}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(variables(\'diagStorageAccountName\')).primaryEndpoints.blob]"}}}}]}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameter variables\nvmName="newvm"\nosType="Windows"\nosDiskVhdUri="zytest"\nvmSize="Standard_D2s_v3"\nvNetNewOrExisting="new"\nvirtualNetworkName="newVnet"\nvirtualNetworkResourceGroup=$(az group show --query name --output tsv)\nsubnetName="subnet-1"\ndnsNameForPublicIP=$(az network dns name --query [concat(\'vm-\', uniqueString(resourceGroup().id))] --output tsv)\nlocation="westus"\n\n# Variables\ndiagStorageAccountName=$(az storage account create --name $(echo $(az group show --query id --output tsv) | md5sum | head -c 8)specvm --location $location --sku Standard_LRS --kind Storage --query "name" --output tsv)\nsubnetRef=$(az network vnet subnet show --resource-group $virtualNetworkResourceGroup --vnet-name $virtualNetworkName --name $subnetName --query id --output tsv)\nnicName="nic"\npublicIPAddressName="publicIp"\ndiskName="${vmName}-disk"\n\n# Create a new virtual network if condition is met\nif [ "$vNetNewOrExisting" == "new" ]; then\n  az network vnet create \\\n    --name $virtualNetworkName \\\n    --resource-group $virtualNetworkResourceGroup \\\n    --location $location \\\n    --address-prefix "10.0.0.0/16" \\\n    --subnet-name $subnetName \\\n    --subnet-prefix "10.0.0.0/24"\nfi\n\n# Create a new storage account for diagnostics\naz storage account create \\\n  --name $diagStorageAccountName \\\n  --location $location \\\n  --sku Standard_LRS \\\n  --kind Storage\n\n# Create a public IP address\naz network public-ip create \\\n  --name $publicIPAddressName \\\n  --location $location \\\n  --resource-group $virtualNetworkResourceGroup \\\n  --allocation-method Dynamic \\\n  --dns-name $dnsNameForPublicIP\n\n# Create a network interface\naz network nic create \\\n  --name $nicName \\\n  --location $location \\\n  --resource-group $virtualNetworkResourceGroup \\\n  --subnet $subnetRef \\\n  --public-ip-address $publicIPAddressName\n\n# Create a disk\naz disk create \\\n  --name $diskName \\\n  --resource-group $virtualNetworkResourceGroup \\\n  --location $location \\\n  --os-type $osType \\\n  --source $osDiskVhdUri \\\n  --creation-option Import\n\n# Create a virtual machine\naz vm create \\\n  --name $vmName \\\n  --location $location \\\n  --resource-group $virtualNetworkResourceGroup \\\n  --nics $nicName \\\n  --size $vmSize \\\n  --attach-os-disk $diskName \\\n  --os-type $osType \\\n  --no-wait\n\n# Enable boot diagnostics\nstorageUri=$(az storage account show --name $diagStorageAccountName --query "primaryEndpoints.blob" --output tsv)\naz vm boot-diagnostics enable \\\n  --name $vmName \\\n  --resource-group $virtualNetworkResourceGroup \\\n  --storage $storageUri\n```\n\nPlease note that the unique string function and the resource ID function are not directly available in Azure CLI, so I\'ve used alternative methods to generate a unique name and retrieve the resource IDs. The script assumes that the current Azure CLI context is set to the target subscription and resource group where the resources will be deployed.


verify_result
