arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of vm"}}, "username": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsNameForPublicIP": {"type": "string", "metadata": {"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."}, "defaultValue": "zytest"}, "_artifactsLocation": {"defaultValue": "[deployment().properties.templateLink.uri]", "type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}}, "_artifactsLocationSasToken": {"defaultValue": "", "type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}}, "commandToExecute": {"type": "string", "metadata": {"description": "The command to execute."}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"scenarioPrefix": "customscriptLinux", "imagePublisher": "Canonical", "imageOffer": "UbuntuServer", "ubuntuOSVersion": "18.04-LTS", "nicName": "[concat(variables(\'scenarioPrefix\'),\'Nic\')]", "vnetAddressPrefix": "10.0.0.0/16", "subnetName": "[concat(variables(\'scenarioPrefix\'),\'Subnet\')]", "subnetPrefix": "10.0.0.0/24", "publicIPAddressName": "[concat(variables(\'scenarioPrefix\'),\'PublicIp\')]", "publicIPAddressType": "Dynamic", "vmName": "[concat(variables(\'scenarioPrefix\'),\'VM\')]", "virtualNetworkName": "[concat(variables(\'scenarioPrefix\'),\'Vnet\')]", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'username\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"apiVersion": "2020-08-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameForPublicIP\')]"}}}, {"apiVersion": "2020-08-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'vnetAddressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"apiVersion": "2020-07-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', variables(\'publicIPAddressName\'))]", "[resourceId(\'Microsoft.Network/virtualNetworks/\', variables(\'virtualNetworkName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\',variables(\'publicIPAddressName\'))]"}, "subnet": {"id": "[variables(\'subnetRef\')]"}}}]}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces/\', variables(\'nicName\'))]"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'username\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "[variables(\'imagePublisher\')]", "offer": "[variables(\'imageOffer\')]", "sku": "[variables(\'ubuntuOSVersion\')]", "version": "latest"}, "osDisk": {"caching": "ReadWrite", "createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"}]}}}, {"type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(variables(\'vmName\'),\'/installcustomscript\')]", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/\', variables(\'vmName\'))]"], "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/hello.sh\', parameters(\'_artifactsLocationSasToken\')))]"], "commandToExecute": "[parameters(\'commandToExecute\')]"}}}]}


cli_script
Below is the translated bash script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmSize="Standard_D2s_v3"\nusername="zytest"\ndnsNameForPublicIP="zytest"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\ncommandToExecute="zytest"\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Variables\nscenarioPrefix="customscriptLinux"\nimagePublisher="Canonical"\nimageOffer="UbuntuServer"\nubuntuOSVersion="18.04-LTS"\nnicName="${scenarioPrefix}Nic"\nvnetAddressPrefix="10.0.0.0/16"\nsubnetName="${scenarioPrefix}Subnet"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressName="${scenarioPrefix}PublicIp"\npublicIPAddressType="Dynamic"\nvmName="${scenarioPrefix}VM"\nvirtualNetworkName="${scenarioPrefix}Vnet"\n\n# Create Public IP Address\naz network public-ip create \\\n    --name $publicIPAddressName \\\n    --location $location \\\n    --allocation-method $publicIPAddressType \\\n    --dns-name $dnsNameForPublicIP\n\n# Create Virtual Network and Subnet\naz network vnet create \\\n    --name $virtualNetworkName \\\n    --location $location \\\n    --address-prefix $vnetAddressPrefix \\\n    --subnet-name $subnetName \\\n    --subnet-prefix $subnetPrefix\n\n# Create Network Interface\naz network nic create \\\n    --name $nicName \\\n    --location $location \\\n    --vnet-name $virtualNetworkName \\\n    --subnet $subnetName \\\n    --public-ip-address $publicIPAddressName\n\n# Create Virtual Machine\naz vm create \\\n    --name $vmName \\\n    --location $location \\\n    --nics $nicName \\\n    --image $imagePublisher:$imageOffer:$ubuntuOSVersion:latest \\\n    --size $vmSize \\\n    --admin-username $username \\\n    --authentication-type $authenticationType \\\n    --ssh-key-value "$adminPasswordOrKey"\n\n# Add Custom Script Extension to Virtual Machine\naz vm extension set \\\n    --publisher Microsoft.Azure.Extensions \\\n    --version 2.0 \\\n    --name CustomScript \\\n    --vm-name $vmName \\\n    --resource-group <ResourceGroupName> \\ # Replace <ResourceGroupName> with the actual resource group name\n    --settings "{\\"fileUris\\": [\\"$(printf \'%s\' "$_artifactsLocation")scripts/hello.sh$_artifactsLocationSasToken\\"]}" \\\n    --protected-settings "{\\"commandToExecute\\": \\"$commandToExecute\\"}"\n```\n\nPlease note that you need to replace `<ResourceGroupName>` with the actual resource group name where your resources are deployed. Also, ensure that the `_artifactsLocation` variable is properly set to the URI where your scripts are located. If `_artifactsLocation` is intended to be dynamic or based on the deployment context, you may need to adjust the script accordingly.\n\nRun this script in your bash shell to create the resources as defined in the ARM template. Make sure you have the Azure CLI installed and are logged in to your Azure account (`az login`).


verify_result
