arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"virtualMachineName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Name"}, "defaultValue": "zytest"}, "virtualMachineSize": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Size"}, "defaultValue": "Standard_D2s_v3"}, "adminUsername": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Administrator User Name"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "SQL Server Virtual Machine Administrator Password"}, "defaultValue": "zytest"}, "storageAccountType": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Storage Account Type"}, "allowedValues": ["Premium_LRS", "StandardSSD_LRS", "Standard_LRS"], "defaultValue": "Premium_LRS"}, "virtualNetworkName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Virtual Network Name"}, "defaultValue": "zytest"}, "networkInterfaceName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Network Interface Name"}, "defaultValue": "zytest"}, "networkSecurityGroupName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Network Security Group Name"}, "defaultValue": "zytest"}, "addressPrefix": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Subnet Name"}, "defaultValue": "10.0.0.0/16"}, "subnetName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Subnet Name"}, "defaultValue": "default"}, "subnetPrefix": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Subnet Name"}, "defaultValue": "10.0.0.0/24"}, "publicIpAddressName": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Public IP Address Name"}, "defaultValue": "zytest"}, "publicIpAddressType": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Public IP Address Type"}, "defaultValue": "Dynamic"}, "sqlConnectivityType": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine SQL Connectivity Type"}, "defaultValue": "Public"}, "sqlPortNumber": {"type": "int", "metadata": {"description": "SQL Server Virtual Machine SQL Port Number"}, "defaultValue": 1579}, "sqlStorageDisksCount": {"type": "int", "metadata": {"description": "SQL Server Virtual Machine Data Disk Count"}, "defaultValue": 2}, "sqlStorageWorkloadType": {"type": "string", "metadata": {"description": "SQL Server Virtual Machine Workload Type: GENERAL - general work load; DW - datawear house work load; OLTP - Transactional processing work load"}, "allowedValues": ["GENERAL", "OLTP", "DW"], "defaultValue": "GENERAL"}, "sqlAkvCredentialName": {"type": "string", "metadata": {"description": "SQL credential name to create on the SQL Server virtual machine"}, "defaultValue": "zytest"}, "sqlAkvName": {"type": "string", "metadata": {"description": "Azure Key Vault Name"}, "defaultValue": "zytest"}, "sqlAkvPrincipalName": {"type": "string", "metadata": {"description": "Azure Key Vault principal name or id"}, "defaultValue": "zytest"}, "sqlAkvPrincipalSecret": {"type": "securestring", "metadata": {"description": "Azure Key Vault principal secret"}, "defaultValue": "zytest"}, "sqlAuthenticationLogin": {"type": "string", "metadata": {"description": "SQL Server Authentication Login Account Name"}, "defaultValue": "mysa"}, "sqlAuthenticationPassword": {"type": "securestring", "metadata": {"description": "SQL Server Authentication Login Account Password"}, "defaultValue": "zytest"}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located including a trailing \'/\'"}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."}, "defaultValue": ""}}, "variables": {"subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'virtualNetworkName\'),  parameters(\'subnetName\'))]", "sqlAkvUrl": "[concat(\'https://\', parameters(\'sqlAkvName\'), environment().suffixes.keyVaultDns)]"}, "resources": [{"name": "[parameters(\'virtualMachineName\')]", "type": "Microsoft.Compute/virtualMachines", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkInterfaces\', parameters(\'networkInterfaceName\'))]"], "properties": {"osProfile": {"computerName": "[parameters(\'virtualMachineName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]", "windowsConfiguration": {"provisionVmAgent": true}}, "hardwareProfile": {"vmSize": "[parameters(\'virtualMachineSize\')]"}, "storageProfile": {"imageReference": {"publisher": "MicrosoftSQLServer", "offer": "sql2014sp3-ws2012r2", "sku": "Enterprise", "version": "latest"}, "osDisk": {"name": "[concat(parameters(\'virtualMachineName\'), \'_OSDisk\')]", "createOption": "FromImage", "managedDisk": {"storageAccountType": "[parameters(\'storageAccountType\')]"}}, "dataDisks": [{"name": "[concat(parameters(\'virtualMachineName\'), \'_DataDisk-1\')]", "createOption": "Empty", "lun": 0, "diskSizeGB": 1023, "caching": "ReadOnly"}, {"name": "[concat(parameters(\'virtualMachineName\'), \'_DataDisk-2\')]", "createOption": "Empty", "lun": 1, "diskSizeGB": 1023, "caching": "ReadOnly"}]}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', parameters(\'networkInterfaceName\'))]"}]}}}, {"apiVersion": "2020-12-01", "type": "Microsoft.Compute/virtualMachines/extensions", "name": "[concat(parameters(\'virtualMachineName\'), \'/SqlIaasExtension\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines\', parameters(\'virtualMachineName\'))]"], "properties": {"type": "SqlIaaSAgent", "publisher": "Microsoft.SqlServer.Management", "typeHandlerVersion": "1.2", "autoUpgradeMinorVersion": true, "settings": {"AutoTelemetrySettings": {"Region": "[parameters(\'location\')]"}, "KeyVaultCredentialSettings": {"Enable": true, "CredentialName": "[parameters(\'sqlAkvCredentialName\')]"}}, "protectedSettings": {"PrivateKeyVaultCredentialSettings": {"AzureKeyVaultUrl": "[variables(\'sqlAkvUrl\')]", "ServicePrincipalName": "[parameters(\'sqlAkvPrincipalName\')]", "ServicePrincipalSecret": "[parameters(\'sqlAkvPrincipalSecret\')]"}}}}, {"type": "Microsoft.Resources/deployments", "name": "prepareSqlVmDeployment", "apiVersion": "2020-10-01", "dependsOn": ["[resourceId(\'Microsoft.Compute/virtualMachines/extensions\', parameters(\'virtualMachineName\'), \'SqlIaasExtension\')]"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[uri(parameters(\'_artifactsLocation\'), concat(\'nested/preparingSqlServerSa.json\', parameters(\'_artifactsLocationSasToken\')))]"}, "parameters": {"sqlVMName": {"value": "[parameters(\'virtualMachineName\')]"}, "location": {"value": "[parameters(\'location\')]"}, "adminUsername": {"value": "[parameters(\'adminUsername\')]"}, "adminPassword": {"value": "[parameters(\'adminPassword\')]"}, "sqlUsername": {"value": "[parameters(\'sqlAuthenticationLogin\')]"}, "sqlPassword": {"value": "[parameters(\'sqlAuthenticationPassword\')]"}, "disksCount": {"value": "[parameters(\'sqlStorageDisksCount\')]"}, "diskSizeInGB": {"value": 1023}, "sqlEnginePort": {"value": "[parameters(\'sqlPortNumber\')]"}, "workloadType": {"value": "[parameters(\'sqlStorageWorkloadType\')]"}, "connectionType": {"value": "[parameters(\'sqlConnectivityType\')]"}, "sqlVMPrepareModulesURL": {"value": "[uri(parameters(\'_artifactsLocation\'), concat(\'scripts/PrepareSqlServer.ps1.zip\', parameters(\'_artifactsLocationSasToken\')))]"}, "sqlVMPrepareConfigurationFunction": {"value": "PrepareSqlServerSa.ps1\\\\PrepareSqlServerSa"}}}}, {"name": "[parameters(\'virtualNetworkName\')]", "type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-11-01", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[parameters(\'addressPrefix\')]"]}, "subnets": [{"name": "[parameters(\'subnetName\')]", "properties": {"addressPrefix": "[parameters(\'subnetPrefix\')]"}}]}}, {"name": "[parameters(\'networkInterfaceName\')]", "type": "Microsoft.Network/networkInterfaces", "apiVersion": "2020-11-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks\', parameters(\'virtualNetworkName\'))]", "[resourceId(\'Microsoft.Network/publicIpAddresses\', parameters(\'publicIpAddressName\'))]", "[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"subnet": {"id": "[variables(\'subnetRef\')]"}, "privateIPAllocationMethod": "Dynamic", "publicIpAddress": {"id": "[resourceId(\'Microsoft.Network/publicIpAddresses\', parameters(\'publicIpAddressName\'))]"}}}], "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', parameters(\'networkSecurityGroupName\'))]"}}}, {"name": "[parameters(\'publicIpAddressName\')]", "type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-11-01", "location": "[parameters(\'location\')]", "sku": {"name": "Basic"}, "properties": {"publicIPAllocationMethod": "[parameters(\'publicIpAddressType\')]"}}, {"name": "[parameters(\'networkSecurityGroupName\')]", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-11-01", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-rdp", "properties": {"priority": 1000, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "3389", "access": "Allow", "direction": "inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}, {"name": "default-allow-sql", "properties": {"priority": 1500, "sourceAddressPrefix": "*", "protocol": "Tcp", "destinationPortRange": "1433", "access": "Allow", "direction": "inbound", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}], "outputs": {"adminUsername": {"type": "string", "value": "[parameters(\'adminUsername\')]"}}}


cli_script
Below is the translated Azure CLI script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\nvirtualMachineName="zytest"\nvirtualMachineSize="Standard_D2s_v3"\nadminUsername="zytest"\nadminPassword="zytest" # Note: Replace this with actual secure password\nstorageAccountType="Premium_LRS"\nvirtualNetworkName="zytest"\nnetworkInterfaceName="zytest"\nnetworkSecurityGroupName="zytest"\naddressPrefix="10.0.0.0/16"\nsubnetName="default"\nsubnetPrefix="10.0.0.0/24"\npublicIpAddressName="zytest"\npublicIpAddressType="Dynamic"\nsqlConnectivityType="Public"\nsqlPortNumber=1579\nsqlStorageDisksCount=2\nsqlStorageWorkloadType="GENERAL"\nsqlAkvCredentialName="zytest"\nsqlAkvName="zytest"\nsqlAkvPrincipalName="zytest"\nsqlAkvPrincipalSecret="zytest" # Note: Replace this with actual secure secret\nsqlAuthenticationLogin="mysa"\nsqlAuthenticationPassword="zytest" # Note: Replace this with actual secure password\nlocation="westus"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\n\n# Create a virtual network\naz network vnet create \\\n    --name "$virtualNetworkName" \\\n    --resource-group "<YourResourceGroup>" \\\n    --location "$location" \\\n    --address-prefix "$addressPrefix" \\\n    --subnet-name "$subnetName" \\\n    --subnet-prefix "$subnetPrefix"\n\n# Create a public IP address\naz network public-ip create \\\n    --name "$publicIpAddressName" \\\n    --resource-group "<YourResourceGroup>" \\\n    --location "$location" \\\n    --allocation-method "$publicIpAddressType" \\\n    --sku "Basic"\n\n# Create a network security group\naz network nsg create \\\n    --name "$networkSecurityGroupName" \\\n    --resource-group "<YourResourceGroup>" \\\n    --location "$location"\n\n# Create security rules\naz network nsg rule create \\\n    --nsg-name "$networkSecurityGroupName" \\\n    --resource-group "<YourResourceGroup>" \\\n    --name "default-allow-rdp" \\\n    --priority 1000 \\\n    --source-address-prefixes "*" \\\n    --destination-port-ranges 3389 \\\n    --access "Allow" \\\n    --protocol "Tcp" \\\n    --direction "Inbound"\n\naz network nsg rule create \\\n    --nsg-name "$networkSecurityGroupName" \\\n    --resource-group "<YourResourceGroup>" \\\n    --name "default-allow-sql" \\\n    --priority 1500 \\\n    --source-address-prefixes "*" \\\n    --destination-port-ranges 1433 \\\n    --access "Allow" \\\n    --protocol "Tcp" \\\n    --direction "Inbound"\n\n# Create a network interface and associate with the public IP and NSG\naz network nic create \\\n    --name "$networkInterfaceName" \\\n    --resource-group "<YourResourceGroup>" \\\n    --location "$location" \\\n    --vnet-name "$virtualNetworkName" \\\n    --subnet "$subnetName" \\\n    --public-ip-address "$publicIpAddressName" \\\n    --network-security-group "$networkSecurityGroupName"\n\n# Create a virtual machine\naz vm create \\\n    --name "$virtualMachineName" \\\n    --resource-group "<YourResourceGroup>" \\\n    --location "$location" \\\n    --nics "$networkInterfaceName" \\\n    --image "MicrosoftSQLServer:sql2014sp3-ws2012r2:Enterprise:latest" \\\n    --size "$virtualMachineSize" \\\n    --admin-username "$adminUsername" \\\n    --admin-password "$adminPassword" \\\n    --storage-sku "$storageAccountType" \\\n    --data-disk-sizes-gb 1023 1023 \\\n    --data-disk-caching ReadOnly\n\n# Add SQL IaaS Extension to the virtual machine\naz vm extension set \\\n    --vm-name "$virtualMachineName" \\\n    --resource-group "<YourResourceGroup>" \\\n    --name "SqlIaaSAgent" \\\n    --publisher "Microsoft.SqlServer.Management" \\\n    --version "1.2" \\\n    --settings \'{"AutoTelemetrySettings":{"Region":"\'$location\'"},"KeyVaultCredentialSettings":{"Enable":true,"CredentialName":"\'$sqlAkvCredentialName\'"}}\' \\\n    --protected-settings \'{"PrivateKeyVaultCredentialSettings":{"AzureKeyVaultUrl":"https://\'$sqlAkvName\'.vault.azure.net/","ServicePrincipalName":"\'$sqlAkvPrincipalName\'","ServicePrincipalSecret":"\'$sqlAkvPrincipalSecret\'"}}\'\n\n# Deploy a nested template to prepare the SQL VM\naz deployment group create \\\n    --resource-group "<YourResourceGroup>" \\\n    --template-uri "$_artifactsLocation/nested/preparingSqlServerSa.json$_artifactsLocationSasToken" \\\n    --parameters sqlVMName="$virtualMachineName" \\\n    --parameters location="$location" \\\n    --parameters adminUsername="$adminUsername" \\\n    --parameters adminPassword="$adminPassword" \\\n    --parameters sqlUsername="$sqlAuthenticationLogin" \\\n    --parameters sqlPassword="$sqlAuthenticationPassword" \\\n    --parameters disksCount="$sqlStorageDisksCount" \\\n    --parameters diskSizeInGB=1023 \\\n    --parameters sqlEnginePort="$sqlPortNumber" \\\n    --parameters workloadType="$sqlStorageWorkloadType" \\\n    --parameters connectionType="$sqlConnectivityType" \\\n    --parameters sqlVMPrepareModulesURL="$_artifactsLocation/scripts/PrepareSqlServer.ps1.zip$_artifactsLocationSasToken" \\\n    --parameters sqlVMPrepareConfigurationFunction="PrepareSqlServerSa.ps1\\\\PrepareSqlServerSa"\n\n# Output the admin username\necho "Admin Username: $adminUsername"\n```\n\nPlease replace `<YourResourceGroup>` with your actual resource group name. Also, ensure that you replace placeholders for secure password and secret with the actual values before running the script. The script assumes that the nested template `preparingSqlServerSa.json` and the PowerShell script `PrepareSqlServer.ps1.zip` are available at the specified `_artifactsLocation`.


verify_result
