arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"adminUsername": {"type": "string", "minLength": 1, "metadata": {"description": "User name for the VM."}, "defaultValue": "zytest"}, "_artifactsLocation": {"type": "string", "metadata": {"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."}, "defaultValue": "[deployment().properties.templateLink.uri]"}, "_artifactsLocationSasToken": {"type": "securestring", "metadata": {"description": "The sasToken required to access baseURL.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."}, "defaultValue": ""}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}, "vmSize": {"type": "string", "defaultValue": "Standard_A1_v2", "metadata": {"description": "Size of the virtual machine"}}}, "variables": {"vmName": "myVM", "nicName": "[concat(variables(\'vmName\'), \'-nic\')]", "virtualNetworkName": "vnet-myVnet", "subnetName": "default", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]", "updateip_templateUri": "[uri(parameters(\'_artifactsLocation\'), concat(\'nested/update-nic.json\', parameters(\'_artifactsLocationSasToken\')))]", "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}, "networkSecurityGroupName": "default-NSG"}, "resources": [{"comments": "Default Network Security Group for template", "type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-05-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "default-allow-22", "properties": {"priority": 1000, "access": "Allow", "direction": "Inbound", "destinationPortRange": "22", "protocol": "TCP", "sourceAddressPrefix": "*", "sourcePortRange": "*", "destinationAddressPrefix": "*"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"], "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24", "networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[variables(\'nicName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["[variables(\'virtualNetworkName\')]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[variables(\'SubnetRef\')]"}}}]}}, {"apiVersion": "2019-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[variables(\'vmName\')]", "location": "[parameters(\'location\')]", "dependsOn": ["updateIp"], "properties": {"hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[variables(\'vmName\')]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "storageProfile": {"imageReference": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "18.04-LTS", "version": "latest"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\', variables(\'nicName\'))]"}]}}}, {"type": "Microsoft.Resources/deployments", "name": "updateIp", "apiVersion": "2020-06-01", "dependsOn": ["[variables(\'nicName\')]"], "properties": {"mode": "Incremental", "templateLink": {"uri": "[variables(\'updateip_templateUri\')]", "contentVersion": "1.0.0.0"}, "parameters": {"nicName": {"value": "[variables(\'nicName\')]"}, "SubnetRef": {"value": "[variables(\'SubnetRef\')]"}, "privateIp": {"value": "[reference(variables(\'nicName\')).ipConfigurations[0].properties.privateIPAddress]"}, "location": {"value": "[parameters(\'location\')]"}}}}], "outputs": {"privateIp": {"type": "string", "value": "[reference(variables(\'nicName\')).ipConfigurations[0].properties.privateIPAddress]"}}}


cli_script
```bash\n#!/bin/bash\n\n# Define variables from the template parameters\nadminUsername="zytest"\n_artifactsLocation="[deployment().properties.templateLink.uri]"\n_artifactsLocationSasToken=""\nlocation="westus"\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\nvmSize="Standard_A1_v2"\n\n# Define variables from the template variables\nvmName="myVM"\nnicName="${vmName}-nic"\nvirtualNetworkName="vnet-myVnet"\nsubnetName="default"\nsubnetRef=$(az network vnet subnet show --name "$subnetName" --vnet-name "$virtualNetworkName" --query id --output tsv)\nupdateip_templateUri="${_artifactsLocation}nested/update-nic.json${_artifactsLocationSasToken}"\nnetworkSecurityGroupName="default-NSG"\n\n# Create a Network Security Group\naz network nsg create \\\n    --name "$networkSecurityGroupName" \\\n    --resource-group "<resource-group>" \\\n    --location "$location" \\\n    --tags "default-allow-22" \\\n    --output none\necho "Created Network Security Group: $networkSecurityGroupName"\n\n# Create a Virtual Network\naz network vnet create \\\n    --name "$virtualNetworkName" \\\n    --resource-group "<resource-group>" \\\n    --location "$location" \\\n    --address-prefix "10.0.0.0/16" \\\n    --subnet-name "$subnetName" \\\n    --subnet-prefix "10.0.0.0/24" \\\n    --network-security-group "$networkSecurityGroupName" \\\n    --output none\necho "Created Virtual Network: $virtualNetworkName with Subnet: $subnetName"\n\n# Create a Network Interface\naz network nic create \\\n    --name "$nicName" \\\n    --resource-group "<resource-group>" \\\n    --location "$location" \\\n    --vnet-name "$virtualNetworkName" \\\n    --subnet "$subnetRef" \\\n    --output none\necho "Created Network Interface: $nicName"\n\n# Create a Virtual Machine\naz vm create \\\n    --name "$vmName" \\\n    --resource-group "<resource-group>" \\\n    --location "$location" \\\n    --nics "$nicName" \\\n    --size "$vmSize" \\\n    --os-disk-name "${vmName}_osdisk" \\\n    --image "Canonical:UbuntuServer:18.04-LTS:latest" \\\n    --admin-username "$adminUsername" \\\n    --authentication-type "$authenticationType" \\\n    --ssh-key-value "$adminPasswordOrKey" \\\n    --output none\necho "Created Virtual Machine: $vmName"\n\n# Deploy nested template to update NIC IP configuration\naz deployment group create \\\n    --resource-group "<resource-group>" \\\n    --template-uri "$updateip_templateUri" \\\n    --parameters nicName="$nicName" SubnetRef="$subnetRef" \\\n    --output none\necho "Updated NIC IP configuration using nested template"\n\n# Retrieve the private IP address of the NIC\nprivateIp=$(az network nic show --name "$nicName" --resource-group "<resource-group>" --query "ipConfigurations[0].privateIpAddress" --output tsv)\necho "The private IP address of the NIC is: $privateIp"\n```\n\nPlease replace `<resource-group>` with the actual name of the resource group where you want to deploy these resources. The script assumes that the network security group, virtual network, subnet, and NIC are all in the same resource group as the virtual machine. Adjust the script as necessary to fit your deployment scenario.


verify_result
