arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmssName": {"type": "string", "metadata": {"description": "Name of VMSS to be encrypted."}, "maxLength": 61, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key."}, "defaultValue": "zytest"}, "keyVaultResourceGroup": {"type": "string", "metadata": {"description": "Resource group of the KeyVault"}, "defaultValue": "zytest"}, "keyEncryptionKeyURL": {"type": "string", "defaultValue": "", "metadata": {"description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"}}, "keyEncryptionAlgorithm": {"type": "string", "defaultValue": "RSA-OAEP", "metadata": {"description": "keyEncryptionAlgorithm used to wrap volume encryption key using KeyEncryptionKeyURL"}}, "volumeType": {"type": "string", "defaultValue": "Data", "metadata": {"description": "Volume type being targeted for encryption operation (Data is the only supported type in Linux VMSS Preview)"}}, "forceUpdateTag": {"type": "string", "defaultValue": "1.0", "metadata": {"description": "Pass in a unique value like a GUID everytime the operation needs to be force run"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}}, "variables": {"extensionName": "AzureDiskEncryptionForLinux", "extensionVersion": "1.1", "encryptionOperation": "EnableEncryption", "keyVaultURL": "[concat(\'https://\', parameters(\'keyVaultName\'), environment().suffixes.keyvaultDns)]", "keyVaultResourceID": "[resourceId(parameters(\'keyVaultResourceGroup\'),\'Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachineScaleSets", "name": "[parameters(\'vmssName\')]", "location": "[parameters(\'location\')]", "apiVersion": "2021-04-01", "sku": {"name": "Standard_D2_v3", "tier": "Standard", "capacity": 2}, "properties": {"virtualMachineProfile": {"extensionProfile": {"extensions": [{"name": "[variables(\'extensionName\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "forceUpdateTag": "[parameters(\'forceUpdateTag\')]", "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[variables(\'keyVaultURL\')]", "KeyVaultResourceId": "[variables(\'keyVaultResourceID\')]", "KeyEncryptionKeyURL": "[parameters(\'keyEncryptionKeyURL\')]", "KekVaultResourceId": "[if(empty(parameters(\'keyEncryptionKeyURL\')),\'\',variables(\'keyVaultResourceID\'))]", "KeyEncryptionAlgorithm": "[parameters(\'keyEncryptionAlgorithm\')]", "VolumeType": "[parameters(\'volumeType\')]"}}}]}}}}]}


cli_script
Below is the Bash script that translates the provided ARM template into Azure CLI commands. The parameters have been converted into variables and the resource creation has been translated into the corresponding `az` CLI command.\n\n```bash\n#!/bin/bash\n\n# Assign template parameter values to variables\nvmssName="zytest"\nkeyVaultName="zytest"\nkeyVaultResourceGroup="zytest"\nkeyEncryptionKeyURL=""\nkeyEncryptionAlgorithm="RSA-OAEP"\nvolumeType="Data"\nforceUpdateTag="1.0"\nlocation="westus"\n\n# Variables from the ARM template\nextensionName="AzureDiskEncryptionForLinux"\nextensionVersion="1.1"\nencryptionOperation="EnableEncryption"\n# The ARM template uses a function to build the keyVaultURL which we can\'t directly use in bash.\n# Instead, we\'ll manually construct the KeyVaultURL assuming the public Azure cloud.\nkeyVaultURL="https://$keyVaultName.vault.azure.net/"\n# The resourceId function is also not available in bash, so we\'ll construct the KeyVault resource ID manually.\nkeyVaultResourceID="/subscriptions/{subscriptionId}/resourceGroups/$keyVaultResourceGroup/providers/Microsoft.KeyVault/vaults/$keyVaultName"\n\n# Create or update a virtual machine scale set with the Azure Disk Encryption extension\naz vmss create \\\n  --name "$vmssName" \\\n  --resource-group "$keyVaultResourceGroup" \\\n  --location "$location" \\\n  --vm-sku "Standard_D2_v3" \\\n  --instance-count 2 \\\n  --upgrade-policy-mode "Automatic" \\\n  --admin-username "{your-username}" \\\n  --admin-password "{your-password}" \\\n  --image "UbuntuLTS" \\\n  --custom-data "#cloud-config" \\\n  --tags "encryptionOperation=$encryptionOperation" \\\n  --output "json"\n\n# Add the Azure Disk Encryption extension to the VMSS\naz vmss extension set \\\n  --vmss-name "$vmssName" \\\n  --resource-group "$keyVaultResourceGroup" \\\n  --name "$extensionName" \\\n  --publisher "Microsoft.Azure.Security" \\\n  --version "$extensionVersion" \\\n  --settings "{\'EncryptionOperation\':\'$encryptionOperation\',\'KeyVaultURL\':\'$keyVaultURL\',\'KeyVaultResourceId\':\'$keyVaultResourceID\',\'KeyEncryptionKeyURL\':\'$keyEncryptionKeyURL\',\'KekVaultResourceId\':\'\',\'KeyEncryptionAlgorithm\':\'$keyEncryptionAlgorithm\',\'VolumeType\':\'$volumeType\'}" \\\n  --force-update-tag "$forceUpdateTag" \\\n  --no-auto-upgrade-minor-version\n\n# Note: Replace {subscriptionId}, {your-username}, and {your-password} with your actual subscription ID, admin username, and admin password.\n```\n\nPlease note the following:\n- The `{subscriptionId}`, `{your-username}`, and `{your-password}` placeholders need to be replaced with your actual Azure subscription ID, desired admin username, and password for the VM scale set.\n- The ARM template uses functions like `concat` and `resourceId` which have no direct equivalent in Bash. The script manually constructs the `keyVaultURL` and `keyVaultResourceID` assuming the public Azure cloud. If you are using a different Azure cloud environment, you will need to adjust the URL accordingly.\n- The `--custom-data` and `--image` options in the `az vmss create` command are placeholders and should be replaced with the actual custom data and image you want to use for your VM scale set.\n- The ARM template does not provide admin username and password for the VM scale set, so you will need to provide these values in the script.\n- The `--tags` option is used to mimic the `forceUpdateTag` functionality in the ARM template. It does not actually force the update but serves as a placeholder for the tag value.


verify_result
