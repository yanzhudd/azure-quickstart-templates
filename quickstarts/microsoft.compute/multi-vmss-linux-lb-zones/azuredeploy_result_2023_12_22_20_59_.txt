arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"location": {"type": "string", "metadata": {"description": "Location for the VM, only certain regions support Availability Zones"}, "defaultValue": "westus"}, "vmssSku": {"type": "string", "defaultValue": "Standard_A2_V2", "metadata": {"description": "Size of the scale set."}}, "adminUsername": {"type": "string", "metadata": {"description": "Username for the Virtual Machine."}, "defaultValue": "zytest"}, "dnsName": {"type": "string", "metadata": {"description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources and resource-specific information is appended."}, "minLength": 3, "maxLength": 61, "defaultValue": "zytest"}, "numberOfVms": {"type": "int", "defaultValue": 2, "metadata": {"description": "The number of VMs to deploy in each VMSS."}}, "authenticationType": {"type": "string", "defaultValue": "sshPublicKey", "allowedValues": ["sshPublicKey", "password"], "metadata": {"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."}}, "adminPasswordOrKey": {"type": "securestring", "metadata": {"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."}, "defaultValue": "zytest"}}, "variables": {"virtualNetworkName": "[concat(parameters(\'dnsName\'), \'-vnet\')]", "subnetName": "Subnet1", "networkSecurityGroupName": "allowRemoting", "publicIPAddressName": "lbPublicIp", "lbName": "[concat(\'lb-\', parameters(\'dnsName\'))]", "lbBE": "lbBE", "lbNAT": "lbNAT", "myZones": ["1", "2"], "linuxImage": {"publisher": "Canonical", "offer": "UbuntuServer", "sku": "16.04.0-LTS", "version": "latest"}, "linuxConfiguration": {"disablePasswordAuthentication": true, "ssh": {"publicKeys": [{"path": "[concat(\'/home/\', parameters(\'adminUsername\'), \'/.ssh/authorized_keys\')]", "keyData": "[parameters(\'adminPasswordOrKey\')]"}]}}}, "resources": [{"type": "Microsoft.Network/virtualNetworks", "apiVersion": "2020-11-01", "name": "[variables(\'virtualNetworkName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["10.0.0.0/16"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "10.0.0.0/24"}}]}}, {"type": "Microsoft.Network/networkSecurityGroups", "apiVersion": "2020-11-01", "name": "[variables(\'networkSecurityGroupName\')]", "location": "[parameters(\'location\')]", "properties": {"securityRules": [{"name": "remoteConnection", "properties": {"description": "Allow SSH traffic", "protocol": "Tcp", "sourcePortRange": "*", "destinationPortRange": "22", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 101, "direction": "Inbound"}}, {"name": "webTraffic", "properties": {"description": "Allow web traffic", "protocol": "Tcp", "sourcePortRange": "80", "destinationPortRange": "80", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 100, "direction": "Inbound"}}]}}, {"type": "Microsoft.Network/publicIPAddresses", "apiVersion": "2020-11-01", "name": "[variables(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard"}, "properties": {"publicIPAllocationMethod": "Static", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsName\')]"}}}, {"type": "Microsoft.Network/loadBalancers", "apiVersion": "2020-11-01", "name": "[variables(\'lbName\')]", "location": "[parameters(\'location\')]", "sku": {"name": "Standard"}, "dependsOn": ["[variables(\'publicIPAddressName\')]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[resourceId(\'Microsoft.Network/publicIPAddresses\', variables(\'publicIPAddressName\'))]"}}}], "backendAddressPools": [{"name": "[variables(\'lbBE\')]"}], "loadbalancingRules": [{"name": "lbrule1", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'lbName\'), \'loadBalancerFrontEnd\')]"}, "backendaddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'lbName\'), variables(\'lbBE\'))]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', variables(\'lbName\'), \'tcpProbe\')]"}}}], "probes": [{"name": "tcpProbe", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}], "inboundNatPools": [{"name": "[concat(variables(\'lbNAT\'), \'1\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'lbName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 50100, "frontendPortRangeEnd": 50199, "backendPort": 22}}, {"name": "[concat(variables(\'lbNAT\'), \'2\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'lbName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 50200, "frontendPortRangeEnd": 50299, "backendPort": 22}}, {"name": "[concat(variables(\'lbNAT\'), \'3\')]", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIpConfigurations\', variables(\'lbName\'), \'loadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPortRangeStart": 50300, "frontendPortRangeEnd": 50399, "backendPort": 22}}]}}, {"type": "Microsoft.Compute/virtualMachineScaleSets", "apiVersion": "2020-12-01", "name": "[concat(\'myScaleset\',\'-zone\', variables(\'myZones\')[copyindex()])]", "location": "[parameters(\'location\')]", "zones": ["[variables(\'myZones\')[copyindex()]]"], "copy": {"name": "VMSScount", "count": "[length(variables(\'myZones\'))]"}, "dependsOn": ["[variables(\'virtualNetworkName\')]", "[variables(\'lbName\')]", "[variables(\'networkSecurityGroupName\')]"], "sku": {"name": "[parameters(\'vmssSku\')]", "capacity": "[parameters(\'numberOfVms\')]"}, "properties": {"singlePlacementGroup": true, "upgradePolicy": {"mode": "Manual"}, "virtualMachineProfile": {"storageProfile": {"osDisk": {"createOption": "FromImage"}, "imageReference": "[variables(\'linuxImage\')]", "dataDisks": [{"lun": 1, "createOption": "Empty", "diskSizeGB": 50}]}, "osProfile": {"computerNamePrefix": "vm", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPasswordOrKey\')]", "customData": "[base64(variables(\'myZones\')[copyindex()])]", "linuxConfiguration": "[if(equals(parameters(\'authenticationType\'), \'password\'), json(\'null\'), variables(\'linuxConfiguration\'))]"}, "networkProfile": {"networkInterfaceConfigurations": [{"name": "myNic", "properties": {"networkSecurityGroup": {"id": "[resourceId(\'Microsoft.Network/networkSecurityGroups\', variables(\'networkSecurityGroupName\'))]"}, "primary": true, "ipConfigurations": [{"name": "myIpConfig", "properties": {"subnet": {"id": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', variables(\'virtualNetworkName\'), variables(\'subnetName\'))]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', variables(\'lbName\'), variables(\'lbBE\'))]"}], "loadBalancerInboundNatPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatPools\', variables(\'lbName\'), concat(variables(\'lbNAT\'), copyindex(1)))]"}]}}]}}]}, "extensionProfile": {"extensions": [{"name": "AppInstall", "properties": {"publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "typeHandlerVersion": "2.0", "autoUpgradeMinorVersion": true, "settings": {"fileUris": ["https://raw.githubusercontent.com/Azure-Samples/compute-automation-configurations/master/automate_nginx.sh"], "commandToExecute": "bash automate_nginx.sh"}}}]}}}}]}


cli_script
Here is the equivalent CLI script:\n\n```bash\n#!/bin/bash\n\n# Define parameters\nlocation="westus"\nvmssSku="Standard_A2_V2"\nadminUsername="zytest"\ndnsName="zytest"\nnumberOfVms=2\nauthenticationType="sshPublicKey"\nadminPasswordOrKey="zytest"\n\n# Create virtual network\naz network vnet create --name ${dnsName}-vnet --resource-group myResourceGroup --location $location --address-prefix 10.0.0.0/16 --subnet-name Subnet1 --subnet-prefix 10.0.0.0/24\n\n# Create network security group\naz network nsg create --name allowRemoting --resource-group myResourceGroup --location $location\n\n# Add security rules to the network security group\naz network nsg rule create --name remoteConnection --nsg-name allowRemoting --resource-group myResourceGroup --protocol Tcp --source-port-range \'*\' --destination-port-range \'22\' --source-address-prefix \'*\' --destination-address-prefix \'*\' --access Allow --priority 101 --direction Inbound\naz network nsg rule create --name webTraffic --nsg-name allowRemoting --resource-group myResourceGroup --protocol Tcp --source-port-range \'80\' --destination-port-range \'80\' --source-address-prefix \'*\' --destination-address-prefix \'*\' --access Allow --priority 100 --direction Inbound\n\n# Create public IP address\naz network public-ip create --name lbPublicIp --resource-group myResourceGroup --location $location --sku Standard --allocation-method Static --dns-name $dnsName\n\n# Create load balancer\naz network lb create --name lb-${dnsName} --resource-group myResourceGroup --location $location --frontend-ip-name LoadBalancerFrontEnd --public-ip-address lbPublicIp --backend-pool-name lbBE\n\n# Create virtual machine scale set\naz vmss create --name myScaleset-zone1 --resource-group myResourceGroup --location $location --zones 1 --image UbuntuLTS --admin-username $adminUsername --admin-password $adminPasswordOrKey --authentication-type $authenticationType --vnet-name ${dnsName}-vnet --subnet Subnet1 --public-ip-address lbPublicIp --lb lb-${dnsName} --nsg allowRemoting --instance-count $numberOfVms --vm-sku $vmssSku\naz vmss create --name myScaleset-zone2 --resource-group myResourceGroup --location $location --zones 2 --image UbuntuLTS --admin-username $adminUsername --admin-password $adminPasswordOrKey --authentication-type $authenticationType --vnet-name ${dnsName}-vnet --subnet Subnet1 --public-ip-address lbPublicIp --lb lb-${dnsName} --nsg allowRemoting --instance-count $numberOfVms --vm-sku $vmssSku\n```\n\nPlease replace `myResourceGroup` with your actual resource group name.


verify_result
