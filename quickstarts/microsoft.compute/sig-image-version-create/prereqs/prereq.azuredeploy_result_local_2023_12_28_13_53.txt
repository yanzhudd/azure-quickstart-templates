arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"galleryName": {"type": "string", "metadata": {"description": "Name of the Shared Image Gallery."}, "defaultValue": "zytest"}, "galleryImageDefinitionName": {"type": "string", "metadata": {"description": "Name of the Image Definition."}, "defaultValue": "zytest"}, "description": {"type": "string", "defaultValue": "Sample Description", "metadata": {"description": "The description of this Shared Image Gallery resource."}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location of the Shared Image Gallery."}}}, "variables": {"managedDiskName": "[concat(\'manageddisk\',uniqueString(resourceGroup().id))]", "managedImageName": "[concat(\'managedimage\',uniqueString(resourceGroup().id))]"}, "resources": [{"type": "Microsoft.Compute/galleries", "name": "[parameters(\'galleryName\')]", "apiVersion": "2019-12-01", "location": "[parameters(\'location\')]", "properties": {"description": "[parameters(\'description\')]"}, "resources": [{"type": "images", "name": "[parameters(\'galleryImageDefinitionName\')]", "apiVersion": "2019-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/galleries\', parameters(\'galleryName\'))]"], "properties": {"description": "Sample Gallery Image Description", "osType": "Windows", "osState": "Generalized", "endOfLifeDate": "2030-01-01", "identifier": {"publisher": "myPublisher", "offer": "myOffer", "sku": "mySku"}, "recommended": {"vCPUs": {"min": "1", "max": "64"}, "memory": {"min": "2048", "max": "307720"}}}}]}, {"name": "[variables(\'managedDiskName\')]", "type": "Microsoft.Compute/disks", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "sku": {"name": "Standard_LRS"}, "properties": {"osType": "Windows", "creationData": {"createOption": "Empty"}, "diskSizeGB": 127}}, {"name": "[variables(\'managedImageName\')]", "type": "Microsoft.Compute/images", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Compute/disks\',variables(\'managedDiskName\'))]"], "properties": {"storageProfile": {"osDisk": {"managedDisk": {"id": "[resourceId(\'Microsoft.Compute/disks/\',variables(\'managedDiskName\'))]"}, "osType": "Windows", "osState": "Generalized"}}, "hyperVGeneration": "V1"}}], "outputs": {"galleryName": {"type": "string", "value": "[parameters(\'galleryName\')]"}, "galleryImageDefinitionName": {"type": "string", "value": "[parameters(\'galleryImageDefinitionName\')]"}, "managedImageID": {"type": "string", "value": "[resourceId(\'Microsoft.Compute/images/\',variables(\'managedImageName\'))]"}}}


cli_script
Here is the translated bash script from the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\ngalleryName="zytest"\ngalleryImageDefinitionName="zytest"\ndescription="Sample Description"\nlocation="westus"\n\n# Resource Variables\nmanagedDiskName="manageddisk$(uuidgen)"\nmanagedImageName="managedimage$(uuidgen)"\n\n# Create a Shared Image Gallery\naz sig create \\\n    --resource-group <ResourceGroupName> \\\n    --gallery-name $galleryName \\\n    --location $location \\\n    --description "$description"\necho "Shared Image Gallery \'$galleryName\' created."\n\n# Create an Image Definition inside the Shared Image Gallery\naz sig image-definition create \\\n    --resource-group <ResourceGroupName> \\\n    --gallery-name $galleryName \\\n    --gallery-image-definition $galleryImageDefinitionName \\\n    --location $location \\\n    --os-type Windows \\\n    --os-state Generalized \\\n    --end-of-life-date "2030-01-01" \\\n    --publisher "myPublisher" \\\n    --offer "myOffer" \\\n    --sku "mySku" \\\n    --min-cpu 1 \\\n    --max-cpu 64 \\\n    --min-memory 2048 \\\n    --max-memory 307720\necho "Gallery Image Definition \'$galleryImageDefinitionName\' created inside Shared Image Gallery \'$galleryName\'."\n\n# Create a Managed Disk\naz disk create \\\n    --resource-group <ResourceGroupName> \\\n    --name $managedDiskName \\\n    --location $location \\\n    --sku Standard_LRS \\\n    --os-type Windows \\\n    --create-option Empty \\\n    --size-gb 127\necho "Managed Disk \'$managedDiskName\' created."\n\n# Create a Managed Image from the Managed Disk\nmanagedDiskId=$(az disk show --resource-group <ResourceGroupName> --name $managedDiskName --query \'id\' -o tsv)\naz image create \\\n    --resource-group <ResourceGroupName> \\\n    --name $managedImageName \\\n    --location $location \\\n    --os-type Windows \\\n    --os-state Generalized \\\n    --source $managedDiskId \\\n    --hyper-v-generation V1\necho "Managed Image \'$managedImageName\' created from Managed Disk \'$managedDiskName\'."\n\n# Outputs\necho "Gallery Name: $galleryName"\necho "Gallery Image Definition Name: $galleryImageDefinitionName"\nmanagedImageId=$(az image show --resource-group <ResourceGroupName> --name $managedImageName --query \'id\' -o tsv)\necho "Managed Image ID: $managedImageId"\n```\n\nPlease replace `<ResourceGroupName>` with the actual name of your Azure resource group where you want to deploy these resources. This script assumes that you have the Azure CLI installed and are logged in to an Azure account with the necessary permissions to create these resources.


verify_result
