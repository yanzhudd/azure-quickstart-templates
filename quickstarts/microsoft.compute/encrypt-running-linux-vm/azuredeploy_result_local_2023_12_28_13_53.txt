arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"vmName": {"type": "string", "metadata": {"description": "Name of the virtual machine"}, "defaultValue": "zytest"}, "keyVaultName": {"type": "string", "metadata": {"description": "Name of the KeyVault to place the volume encryption key."}, "defaultValue": "zytest"}, "keyVaultResourceGroup": {"type": "string", "metadata": {"description": "Resource group of the KeyVault"}, "defaultValue": "zytest"}, "keyEncryptionKeyURL": {"type": "string", "defaultValue": "", "metadata": {"description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"}}, "keyEncryptionAlgorithm": {"type": "string", "defaultValue": "RSA-OAEP", "metadata": {"description": "keyEncryptionAlgorithm used to wrap volume encryption key using KeyEncryptionKeyURL"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Default location"}}, "volumeType": {"type": "string", "defaultValue": "Data", "metadata": {"description": "Volume type being targeted for encryption operatio"}}, "forceUpdateTag": {"type": "string", "defaultValue": "1.0", "metadata": {"description": "Pass in a unique value like a GUID everytime the operation needs to be force run"}}}, "variables": {"extensionName": "AzureDiskEncryptionForLinux", "extensionVersion": "1.1", "encryptionOperation": "EnableEncryption", "keyVaultURL": "[concat(\'https://\', parameters(\'keyVaultName\'))]", "keyVaultResourceID": "[concat(subscription().id,\'/resourceGroups/\',parameters(\'keyVaultResourceGroup\'),\'/providers/Microsoft.KeyVault/vaults/\', parameters(\'keyVaultName\'))]"}, "resources": [{"type": "Microsoft.Compute/virtualMachines/extensions", "apiVersion": "2020-12-01", "location": "[parameters(\'location\')]", "name": "[concat(parameters(\'vmName\'),\'/diskEncryption\')]", "properties": {"publisher": "Microsoft.Azure.Security", "type": "[variables(\'extensionName\')]", "typeHandlerVersion": "[variables(\'extensionVersion\')]", "autoUpgradeMinorVersion": true, "forceUpdateTag": "[parameters(\'forceUpdateTag\')]", "settings": {"EncryptionOperation": "[variables(\'encryptionOperation\')]", "KeyVaultURL": "[variables(\'keyVaultURL\')]", "KeyVaultResourceId": "[variables(\'keyVaultResourceID\')]", "KeyEncryptionKeyURL": "[parameters(\'keyEncryptionKeyURL\')]", "KekVaultResourceId": "[if(empty(parameters(\'keyEncryptionKeyURL\')),\'\',variables(\'keyVaultResourceID\'))]", "KeyEncryptionAlgorithm": "[parameters(\'keyEncryptionAlgorithm\')]", "VolumeType": "[parameters(\'volumeType\')]"}}}]}


cli_script
Below is the translated bash script equivalent for the provided ARM template and parameters:\n\n```bash\n#!/bin/bash\n\n# Parameters\nvmName="zytest"\nkeyVaultName="zytest"\nkeyVaultResourceGroup="zytest"\nkeyEncryptionKeyURL=""\nkeyEncryptionAlgorithm="RSA-OAEP"\nlocation="westus"\nvolumeType="Data"\nforceUpdateTag="1.0"\n\n# Variables\nextensionName="AzureDiskEncryptionForLinux"\nextensionVersion="1.1"\nencryptionOperation="EnableEncryption"\nkeyVaultURL="https://$keyVaultName"\nkeyVaultResourceID="$(az keyvault show --name $keyVaultName --resource-group $keyVaultResourceGroup --query id -o tsv)"\n\n# Resource: Microsoft.Compute/virtualMachines/extensions\n# Command to create an extension for a virtual machine to enable disk encryption\naz vm extension set \\\n    --resource-group $keyVaultResourceGroup \\\n    --vm-name $vmName \\\n    --name diskEncryption \\\n    --publisher Microsoft.Azure.Security \\\n    --extension-type $extensionName \\\n    --version $extensionVersion \\\n    --settings "{\\"EncryptionOperation\\":\\"$encryptionOperation\\", \\"KeyVaultURL\\":\\"$keyVaultURL\\", \\"KeyVaultResourceId\\":\\"$keyVaultResourceID\\", \\"KeyEncryptionKeyURL\\":\\"$keyEncryptionKeyURL\\", \\"KekVaultResourceId\\":\\"$keyVaultResourceID\\", \\"KeyEncryptionAlgorithm\\":\\"$keyEncryptionAlgorithm\\", \\"VolumeType\\":\\"$volumeType\\"}" \\\n    --location $location \\\n    --no-wait \\\n    --force-update-tag $forceUpdateTag\n```\n\nPlease note that the `--no-wait` flag is used to return control to the prompt immediately without waiting for the operation to complete. If you want to wait for the operation to complete before the script proceeds, you can remove this flag.\n\nAdditionally, since the `keyEncryptionKeyURL` is empty in the provided parameters, the `KekVaultResourceId` is set to the same as `KeyVaultResourceId`. If the `keyEncryptionKeyURL` were provided, additional logic would be required to handle this.


verify_result
