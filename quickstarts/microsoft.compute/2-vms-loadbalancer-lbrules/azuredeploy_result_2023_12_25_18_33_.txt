arm_template
{"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#", "contentVersion": "1.0.0.0", "parameters": {"storageAccountName": {"type": "string", "metadata": {"description": "Name of storage account"}, "defaultValue": "zytest"}, "adminUsername": {"type": "string", "metadata": {"description": "Admin username"}, "defaultValue": "zytest"}, "adminPassword": {"type": "securestring", "metadata": {"description": "Admin password"}, "defaultValue": "zytest"}, "dnsNameforLBIP": {"type": "string", "metadata": {"description": "DNS for Load Balancer IP"}, "defaultValue": "zytest"}, "vmNamePrefix": {"type": "string", "defaultValue": "myVM", "metadata": {"description": "Prefix to use for VM names"}}, "imagePublisher": {"type": "string", "defaultValue": "MicrosoftWindowsServer", "metadata": {"description": "Image Publisher"}}, "imageOffer": {"type": "string", "defaultValue": "WindowsServer", "metadata": {"description": "Image Offer"}}, "imageSKU": {"type": "string", "defaultValue": "2019-Datacenter", "metadata": {"description": "Image SKU"}}, "lbName": {"type": "string", "defaultValue": "myLB", "metadata": {"description": "Load Balancer name"}}, "nicNamePrefix": {"type": "string", "defaultValue": "nic", "metadata": {"description": "Network Interface name prefix"}}, "publicIPAddressName": {"type": "string", "defaultValue": "myPublicIP", "metadata": {"description": "Public IP Name"}}, "vnetName": {"type": "string", "defaultValue": "myVNET", "metadata": {"description": "VNET name"}}, "vmSize": {"type": "string", "defaultValue": "Standard_D2s_v3", "metadata": {"description": "Size of the VM"}}, "location": {"type": "string", "defaultValue": "westus", "metadata": {"description": "Location for all resources"}}}, "variables": {"storageAccountType": "Standard_LRS", "availabilitySetName": "myAvSet", "addressPrefix": "10.0.0.0/16", "subnetName": "Subnet-1", "subnetPrefix": "10.0.0.0/24", "publicIPAddressType": "Dynamic", "subnetRef": "[resourceId(\'Microsoft.Network/virtualNetworks/subnets\', parameters(\'vnetName\'), variables (\'subnetName\'))]", "publicIPAddressID": "[resourceId(\'Microsoft.Network/publicIPAddresses\',parameters(\'publicIPAddressName\'))]", "numberOfInstances": 2}, "resources": [{"type": "Microsoft.Storage/storageAccounts", "name": "[parameters(\'storageAccountName\')]", "apiVersion": "2019-06-01", "location": "[parameters(\'location\')]", "sku": {"name": "[variables(\'storageAccountType\')]"}, "kind": "StorageV2"}, {"type": "Microsoft.Compute/availabilitySets", "name": "[variables(\'availabilitySetName\')]", "apiVersion": "2019-12-01", "location": "[parameters(\'location\')]", "properties": {"platformFaultDomainCount": 2, "platformUpdateDomainCount": 5}, "sku": {"name": "Aligned"}}, {"apiVersion": "2022-07-01", "type": "Microsoft.Network/publicIPAddresses", "name": "[parameters(\'publicIPAddressName\')]", "location": "[parameters(\'location\')]", "properties": {"publicIPAllocationMethod": "[variables(\'publicIPAddressType\')]", "dnsSettings": {"domainNameLabel": "[parameters(\'dnsNameforLBIP\')]"}}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/virtualNetworks", "name": "[parameters(\'vnetName\')]", "location": "[parameters(\'location\')]", "properties": {"addressSpace": {"addressPrefixes": ["[variables(\'addressPrefix\')]"]}, "subnets": [{"name": "[variables(\'subnetName\')]", "properties": {"addressPrefix": "[variables(\'subnetPrefix\')]"}}]}}, {"apiVersion": "2020-05-01", "type": "Microsoft.Network/networkInterfaces", "name": "[concat(parameters(\'nicNamePrefix\'), copyindex())]", "location": "[parameters(\'location\')]", "copy": {"name": "nicLoop", "count": "[variables(\'numberOfInstances\')]"}, "dependsOn": ["[resourceId(\'Microsoft.Network/virtualNetworks/\', parameters(\'vnetName\'))]", "[resourceId(\'Microsoft.Network/loadBalancers/\', parameters(\'lbName\'))]"], "properties": {"ipConfigurations": [{"name": "ipconfig1", "properties": {"privateIPAllocationMethod": "Dynamic", "subnet": {"id": "[variables(\'subnetRef\')]"}, "loadBalancerBackendAddressPools": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', parameters(\'lbName\'), \'BackendPool1\')]"}], "loadBalancerInboundNatRules": [{"id": "[resourceId(\'Microsoft.Network/loadBalancers/inboundNatRules\', parameters(\'lbName\'), concat(\'RDP-VM\', copyindex()))]"}]}}]}}, {"apiVersion": "2020-05-01", "name": "[parameters(\'lbName\')]", "type": "Microsoft.Network/loadBalancers", "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Network/publicIPAddresses/\', parameters(\'publicIPAddressName\'))]"], "properties": {"frontendIPConfigurations": [{"name": "LoadBalancerFrontEnd", "properties": {"publicIPAddress": {"id": "[variables(\'publicIPAddressID\')]"}}}], "backendAddressPools": [{"name": "BackendPool1"}], "inboundNatRules": [{"name": "RDP-VM0", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', parameters(\'lbName\'), \'LoadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPort": 50001, "backendPort": 3389, "enableFloatingIP": false}}, {"name": "RDP-VM1", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', parameters(\'lbName\'), \'LoadBalancerFrontEnd\')]"}, "protocol": "Tcp", "frontendPort": 50002, "backendPort": 3389, "enableFloatingIP": false}}], "loadBalancingRules": [{"name": "LBRule", "properties": {"frontendIPConfiguration": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/frontendIPConfigurations\', parameters(\'lbName\'), \'LoadBalancerFrontEnd\')]"}, "backendAddressPool": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/backendAddressPools\', parameters(\'lbName\'), \'BackendPool1\')]"}, "protocol": "Tcp", "frontendPort": 80, "backendPort": 80, "enableFloatingIP": false, "idleTimeoutInMinutes": 5, "probe": {"id": "[resourceId(\'Microsoft.Network/loadBalancers/probes\', parameters(\'lbName\'), \'tcpProbe\')]"}}}], "probes": [{"name": "tcpProbe", "properties": {"protocol": "Tcp", "port": 80, "intervalInSeconds": 5, "numberOfProbes": 2}}]}}, {"apiVersion": "2019-12-01", "type": "Microsoft.Compute/virtualMachines", "name": "[concat(parameters(\'vmNamePrefix\'), copyindex())]", "copy": {"name": "virtualMachineLoop", "count": "[variables(\'numberOfInstances\')]"}, "location": "[parameters(\'location\')]", "dependsOn": ["[resourceId(\'Microsoft.Storage/storageAccounts/\', parameters(\'storageAccountName\'))]", "[resourceId(\'Microsoft.Network/networkInterfaces/\', concat(parameters(\'nicNamePrefix\'), copyindex()))]", "[resourceId(\'Microsoft.Compute/availabilitySets/\', variables(\'availabilitySetName\'))]"], "properties": {"availabilitySet": {"id": "[resourceId(\'Microsoft.Compute/availabilitySets\',variables(\'availabilitySetName\'))]"}, "hardwareProfile": {"vmSize": "[parameters(\'vmSize\')]"}, "osProfile": {"computerName": "[concat(parameters(\'vmNamePrefix\'), copyIndex())]", "adminUsername": "[parameters(\'adminUsername\')]", "adminPassword": "[parameters(\'adminPassword\')]"}, "storageProfile": {"imageReference": {"publisher": "[parameters(\'imagePublisher\')]", "offer": "[parameters(\'imageOffer\')]", "sku": "[parameters(\'imageSKU\')]", "version": "latest"}, "osDisk": {"createOption": "FromImage"}}, "networkProfile": {"networkInterfaces": [{"id": "[resourceId(\'Microsoft.Network/networkInterfaces\',concat(parameters(\'nicNamePrefix\'),copyindex()))]"}]}, "diagnosticsProfile": {"bootDiagnostics": {"enabled": true, "storageUri": "[reference(parameters(\'storageAccountName\'), \'2019-06-01\').primaryEndpoints.blob]"}}}}]}


cli_script
Below is the translated bash script for the given ARM template and parameters. Please note that the ARM template provided contains the `copy` element, which indicates a loop for creating multiple resources. However, since you requested not to use loops for JSON objects with different attributes, I have manually unrolled the loop for the network interfaces, load balancer inbound NAT rules, and virtual machines, assuming a fixed count of 2 as indicated in the variables section of the ARM template.\n\n```bash\n#!/bin/bash\n\n# Parameters\nstorageAccountName="zytest"\nadminUsername="zytest"\nadminPassword="zytest"\ndnsNameforLBIP="zytest"\nvmNamePrefix="myVM"\nimagePublisher="MicrosoftWindowsServer"\nimageOffer="WindowsServer"\nimageSKU="2019-Datacenter"\nlbName="myLB"\nnicNamePrefix="nic"\npublicIPAddressName="myPublicIP"\nvnetName="myVNET"\nvmSize="Standard_D2s_v3"\nlocation="westus"\n\n# Variables\nstorageAccountType="Standard_LRS"\navailabilitySetName="myAvSet"\naddressPrefix="10.0.0.0/16"\nsubnetName="Subnet-1"\nsubnetPrefix="10.0.0.0/24"\npublicIPAddressType="Dynamic"\nnumberOfInstances=2\n\n# Create Storage Account\naz storage account create --name $storageAccountName --location $location --sku $storageAccountType --kind StorageV2\n\n# Create Availability Set\naz vm availability-set create --name $availabilitySetName --location $location --platform-fault-domain-count 2 --platform-update-domain-count 5 --sku Aligned\n\n# Create Public IP Address\naz network public-ip create --name $publicIPAddressName --location $location --allocation-method $publicIPAddressType --dns-name $dnsNameforLBIP\n\n# Create Virtual Network and Subnet\naz network vnet create --name $vnetName --location $location --address-prefix $addressPrefix --subnet-name $subnetName --subnet-prefix $subnetPrefix\n\n# Create Network Interfaces\n# NIC for first instance\naz network nic create --name "${nicNamePrefix}0" --location $location --vnet-name $vnetName --subnet $subnetName\n# NIC for second instance\naz network nic create --name "${nicNamePrefix}1" --location $location --vnet-name $vnetName --subnet $subnetName\n\n# Create Load Balancer\naz network lb create --name $lbName --location $location --frontend-ip-name LoadBalancerFrontEnd --public-ip-address $publicIPAddressName --backend-pool-name BackendPool1\n\n# Create Inbound NAT Rules for Load Balancer\n# NAT rule for first instance\naz network lb inbound-nat-rule create --lb-name $lbName --name RDP-VM0 --protocol Tcp --frontend-port 50001 --backend-port 3389 --frontend-ip-name LoadBalancerFrontEnd\n# NAT rule for second instance\naz network lb inbound-nat-rule create --lb-name $lbName --name RDP-VM1 --protocol Tcp --frontend-port 50002 --backend-port 3389 --frontend-ip-name LoadBalancerFrontEnd\n\n# Create Load Balancing Rule\naz network lb rule create --lb-name $lbName --name LBRule --protocol Tcp --frontend-port 80 --backend-port 80 --frontend-ip-name LoadBalancerFrontEnd --backend-pool-name BackendPool1 --probe-name tcpProbe --idle-timeout 5\n\n# Create TCP Probe\naz network lb probe create --lb-name $lbName --name tcpProbe --protocol Tcp --port 80 --interval 5 --count 2\n\n# Create Virtual Machines\n# VM for first instance\naz vm create --name "${vmNamePrefix}0" --location $location --availability-set $availabilitySetName --nics "${nicNamePrefix}0" --size $vmSize --image $imagePublisher:$imageOffer:$imageSKU:latest --admin-username $adminUsername --admin-password $adminPassword\n# VM for second instance\naz vm create --name "${vmNamePrefix}1" --location $location --availability-set $availabilitySetName --nics "${nicNamePrefix}1" --size $vmSize --image $imagePublisher:$imageOffer:$imageSKU:latest --admin-username $adminUsername --admin-password $adminPassword\n```\n\nThis script assumes that you have already logged in to Azure CLI and have the necessary permissions to create these resources. It creates the resources as per the ARM template definitions and uses the default values provided in the parameters. If you have different parameter values, you can replace the default ones in the script accordingly.


verify_result
